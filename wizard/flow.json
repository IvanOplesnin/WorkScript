{
  "nodes": [
    {
      "id": "0094120e-35a1-4752-9e69-3a695239297f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -390,
        "y": -1170
      },
      "name": null,
      "data": {
        "nodeTypeId": "uc-flow-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "graph",
          "flow": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
          "value": "parent_flow = await context.get_parent_result(\"5489ce33-972c-429f-bd0a-5453678e18f8\")\r\nnew_graph = parent_flow['graph']\r\n\r\nnew_field = new_graph['nodes'][\"9182a887-6e61-454a-b133-fb1b57de5d29\"]['data']['properties'][\"values\"][\"json_field\"]\r\n\r\n\r\nflow = await context.get_flow()\r\ngraph = flow.graph\r\nold_field = graph.nodes[\"1562cf9a-ea29-4380-aac5-74bb0dd238f7\"].data.properties[\"values\"][\"json_field\"]\r\n\r\n\r\n\r\nfor index, field in enumerate(new_field):\r\n    try:\r\n        old_field[index][\"name\"] = field[\"name\"]\r\n    except IndexError:\r\n        field['value'] = ''\r\n        old_field.append(field)\r\n\r\n\r\n\r\n\r\nreturn graph",
          "resource": "flow",
          "operation": "update_flow"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "011dd16b-2c5d-43b3-93ef-714c77e3c88f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -1965,
        "y": -615
      },
      "name": "Softphone trigger - настройки виджета",
      "data": {
        "nodeTypeId": "comagic-softphone-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "event": "get_installment_settings",
          "widget": "chrome",
          "handle_mode": "graph",
          "handle_get_contact_details": "\nreturn {\n    \"contact_full_name\": \"John Doe\",\n    \"crm_contact_link\": \"https://localhost/contact/1\",\n    \"active_leads\": [\n        {\n            \"url\": \"https://localhost/lead/1\",\n            \"name\": \"John Doe\",\n            \"status\": \"Qualified\",\n            \"pipeline\": \"Main Sales Funnel\",\n        }\n    ]\n}\n"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "038eaeae-3e03-40cc-aeff-592edbb89688",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 795,
        "y": -825
      },
      "name": null,
      "data": {
        "nodeTypeId": "personal-manager-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "id": 0,
          "field": "extension_phone_number",
          "extension_phone_number": "return None"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {
            "extension_phone_number": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "04462798-77e2-425c-b242-1ac34545b6ae",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 45,
        "y": 1170
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "05e7a388-c5e8-49c9-9f3e-a04271f037eb",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -105,
        "y": 780
      },
      "name": "MoySklad JSON API - получаем контрагента!",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\nphone_number = hook['contact_phone_number']\nreturn f'phone={phone_number}'",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "064e3b7f-ff90-49a8-b877-18e7ec63071d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 405,
        "y": 225
      },
      "name": "IF - есть ли ошибки в ответе",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result(\"843b40a4-964d-4a05-afed-a456dbc7fc1c\")) \n\n\nif \"errors\" in jsn:\n    return True \nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "0684c37c-b2c5-4f18-8edd-bf15f76bd700",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1020,
        "y": 2190
      },
      "name": "MoySklad JSON API получаем контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "get_counterparty",
          "counterparty_id": "content = (await context.get_parent_result(\"84352b4c-af5a-48b4-ba84-f09089f25828\"))['content']\n\nreturn content"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "counterparty_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "0883ee65-9d68-44a4-8edf-f6e75f45ca7d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 720,
        "y": -150
      },
      "name": "Сформировать доп. поля",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "return await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[45].value')",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "0a5f69e3-32fd-42e7-9ced-de4a589271b5",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 975,
        "y": 870
      },
      "name": "Обновляем доп. поля",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))[\"data\"][\"message\"]\next_field = (await context.get_parent_result(\"4dd0377b-bb8a-4649-935d-b4fe64c5ad5e\"))['result']\n\nlist_attributes = []\n\n# Вкл передача полей и поля заполнены\nif ext_field:\n    # Параметры для создания атрибутов\n    extra_field_name = ext_field['extra_field_name']\n    comagic_parameter = ext_field['comagic_parameter'].strip(' ')\n    if ext_field['update_always']:\n      new_ext_field = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(new_ext_field)\n\nreturn list_attributes\n\n\n# [\n#   {\n#     \"update_always\": false,\n#     \"extra_field_name\": \"43e71cfd-7737-11ef-0a80-1145000c8c26\",\n#     \"comagic_parameter\": \"site_domain_name\"\n#   }\n# ]",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "0aa14b5c-1e37-45d4-bc3c-31c604cc2674",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 645,
        "y": 2190
      },
      "name": "IF контрагент был создан?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "content = (await context.get_parent_result(\"84352b4c-af5a-48b4-ba84-f09089f25828\"))[\"content\"]\n\nif content:\n    return True\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "0ae39376-8209-4dfc-a444-0131389f085a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 300,
        "y": 735
      },
      "name": "Создавать заказ",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "setting_value = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[47].value')\r\n\r\nif setting_value == 'always':\r\n    return True\r\n\r\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "10136e92-1c32-4a6e-be3f-7ac23a351228",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1965,
        "y": -105
      },
      "name": "Function - задаем сессию",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "import time\n\nreturn int(time.time() * 1000)\n\ncontext.get_parent_result(\"b51f3b46-02af-4a34-8688-ef2fa3f72226\")\n\ncontext.get_parent_result(\"827e1536-77c1-4066-9014-7df6d56b9663\")",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "12f5a96a-a3be-439d-876c-aa7a9098cd9d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1155,
        "y": 2685
      },
      "name": "Удаляем контрагента",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\nreturn f\"moysklad_{hook['call_session_id']}\"",
          "method": "delete",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "133202c1-b1f4-4efa-86a1-c380c2ab2b83",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -240,
        "y": -840
      },
      "name": "Изменение визарда",
      "data": {
        "nodeTypeId": "uc-flow-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "wizard",
          "flow": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
          "value": "vanin_flow = await context.get_parent_result(\"5489ce33-972c-429f-bd0a-5453678e18f8\")\r\nnew_wizard = vanin_flow['wizard']\r\n\r\n# 9182a887-6e61-454a-b133-fb1b57de5d29 - id node-settings in test_flow\r\n# 1562cf9a-ea29-4380-aac5-74bb0dd238f7 - node settings in this flow\r\nresult = []\r\n\r\ndef replace_in_json(data, old: str, new: str):\r\n    \"\"\"\r\n    Рекурсивно заменяет все вхождения `old` на `new` в строковых значениях словаря/списка.\r\n    Изменяет структуру на месте.\r\n    \"\"\"\r\n    if isinstance(data, dict):\r\n        for key, value in data.items():\r\n            if isinstance(value, str):\r\n                data[key] = value.replace(old, new)\r\n            else:\r\n                replace_in_json(value, old, new)\r\n    elif isinstance(data, list):\r\n        for i in range(len(data)):\r\n            if isinstance(data[i], str):\r\n                data[i] = data[i].replace(old, new)\r\n            else:\r\n                replace_in_json(data[i], old, new)\r\n\r\ndef get_items(properties):\r\n    if properties[\"properties\"].get(\"items\"):\r\n        for item in properties[\"properties\"][\"items\"]:\r\n            get_items(item)\r\n    result.append(properties)\r\n\r\nfor item in new_wizard:\r\n    get_items(item)\r\n\r\n# \"displayOptions\": {\r\n#                   \"show\": {\r\n#                     \"//graph.nodes.9182a887-6e61-454a-b133-fb1b57de5d29.data.properties.values.json_field[1].name\": [\r\n#                       true\r\n#                     ]\r\n#                   }\r\n#                 }\r\ndef replace_in_show(old_show: dict[str, list[str]]):\r\n    for key in old_show.keys():\r\n        old_key = key\r\n        new_key = key.replace(\"9182a887-6e61-454a-b133-fb1b57de5d29\", \"1562cf9a-ea29-4380-aac5-74bb0dd238f7\")\r\n        break\r\n    \r\n    new_show = {\r\n        new_key: old_show[old_key]\r\n    }\r\n    return new_show\r\n\r\n\r\ndef replace_id_node():\r\n    for item in result:\r\n        for key, val in item.items():\r\n            if isinstance(val, str):\r\n                new_val = val.replace(\"9182a887-6e61-454a-b133-fb1b57de5d29\", \"1562cf9a-ea29-4380-aac5-74bb0dd238f7\")\r\n                new_val = new_val.replace(\"fe2f2856-7321-468b-b266-23187b11bfdb\", \"331efcb4-17df-4cc8-a582-cf113c4cae9b\")\r\n                item[key] = new_val\r\n            if key == 'properties':\r\n                if item['properties'].get('id'):\r\n                    item[key]['id'] = item[key]['id'].replace(\"fe2f2856-7321-468b-b266-23187b11bfdb\", \"331efcb4-17df-4cc8-a582-cf113c4cae9b\")\r\n                if item['properties'].get('displayOptions'):\r\n                    if item['properties'].get('displayOptions').get('show'):\r\n                        item['properties']['displayOptions']['show'] = replace_in_show(item['properties']['displayOptions']['show'])\r\n\r\n\r\n# context.get_parent_result(\"fe2f2856-7321-468b-b266-23187b11bfdb\") - id авторизации из прошлого визарда\r\n# context.get_parent_result(\"331efcb4-17df-4cc8-a582-cf113c4cae9b\") - id из этого визарда\r\n\r\n# context.get_parent_result(\"c82f0ea2-f62e-4af3-805a-9f56e0dbea36\") - id выпадашки из тестого флоу\r\n# context.get_parent_result(\"399f54c4-3b11-4573-86b6-40dff81c2c0c\") - id выпадашки из этого флоу\r\n\r\n# context.get_parent_result(\"f69cf777-887c-4b6a-94d6-ed8e744da976\") - id выпадашки из тестого флоу\r\n# context.get_parent_result(\"9592ae59-4e91-44d7-926a-9ac0dfa75349\") - id выпадашки из этого флоу\r\n\r\n# context.get_parent_result(\"58c07fb5-8ab5-439a-8a17-9801a798bd10\") - id авторизации по звонкам\r\n# context.get_parent_result(\"8d83fa05-160c-4891-b274-3d1bda475357\") - id авторизации по звонкам этого флоу\r\n\r\nreplace_id_node()\r\nreplace_in_json(new_wizard, \"c82f0ea2-f62e-4af3-805a-9f56e0dbea36\", \"399f54c4-3b11-4573-86b6-40dff81c2c0c\")\r\nreplace_in_json(new_wizard, \"f69cf777-887c-4b6a-94d6-ed8e744da976\", \"9592ae59-4e91-44d7-926a-9ac0dfa75349\")\r\nreplace_in_json(new_wizard, \"58c07fb5-8ab5-439a-8a17-9801a798bd10\", \"8d83fa05-160c-4891-b274-3d1bda475357\")\r\n\r\n\r\nreturn new_wizard\r\n",
          "resource": "flow",
          "operation": "update_flow"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "1343477b-7132-4127-ba75-66711e6c30cd",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2100,
        "y": -270
      },
      "name": "MoySklad JSON API Создаем контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_counterparty",
          "json_body": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))[\"data\"][\"message\"]\next_field_triger = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value\")\n# ext_field = (await context.get_parent_result(\"062d5e9d-3ba5-464a-b209-22ecd2216a29\"))['result']\next_fields = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[23].value')\n\nlist_attributes = []\n\n# Тело запроса для создания контрагента без доп полей\nrequest_body = {}\n\n# Устанавливаем name и phone в зависимости от наличия номера телефона\nif hook.get('contact_phone_number'):\n    request_body['name'] = f'Новый контрагент {hook[\"contact_phone_number\"]} по звонку из UIS'\n    request_body['phone'] = hook['contact_phone_number']\n\n# Вкл передача полей и поля заполнены\nif ext_field_triger and ext_fields:\n  for ext_field in ext_fields:\n    try:\n      # Параметры для создания атрибутов\n      extra_field_name = ext_field['extra_field_name']\n      comagic_parameter = ext_field['comagic_parameter'].strip(' ')\n\n      item_dict = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(item_dict)\n      \n      # Добавление атрибутов в request_body\n      request_body[\"attributes\"] = list_attributes\n      \n    except KeyError:\n      pass\n\nreturn request_body\n\n\n\n\n\n\n\n\n# [\n#   {\n#     \"update_always\": false,\n#     \"extra_field_name\": \"43e71cfd-7737-11ef-0a80-1145000c8c26\",\n#     \"comagic_parameter\": \"eq_utm_source\"\n#   }\n# ]\n\n# [  \n#     {  \n#       \"meta\":{  \n#         \"href\":\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/0d129ff5-2c8c-11e6-8a84-bae5000000f3\",\n#         \"type\":\"attributemetadata\",\n#         \"mediaType\":\"application/json\"\n#       },\n#       \n#       \"type\":\"string\",\n#       \"value\":0.75\n#     },\n# ]"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 300,
        "y": -840
      },
      "name": null,
      "data": {
        "nodeTypeId": "settings",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "values": {
            "json_field": [
              {
                "name": false,
                "value": false
              },
              {
                "name": true,
                "value": true
              },
              {
                "name": "Ответственный по умолчанию",
                "value": [
                  "532fd26d-936d-11ee-0a80-071e001329eb",
                  "2f68d12b-32c8-11ea-0a80-00d5006067b0"
                ]
              },
              {
                "name": "Список виртуальных номеров",
                "value": "7a117fdd-f821-11ef-0a80-1838001ebb4f"
              },
              {
                "name": "Создавать контрагента",
                "value": []
              },
              {
                "name": "Назначить ответственного",
                "value": false
              },
              {
                "name": "Назначить ответственного --",
                "value": "first_speak"
              },
              {
                "name": "Создавать заказ",
                "value": true
              },
              {
                "name": "Тип звонка",
                "value": [
                  {}
                ]
              },
              {
                "name": "Статус звонка",
                "value": []
              },
              {
                "name": "Назначать ответственного на",
                "value": ""
              },
              {
                "name": "Выбор Юр лица",
                "value": ""
              },
              {
                "name": "При входящих звонках",
                "value": false
              },
              {
                "name": "Ответственный сотрудник на вхд",
                "value": ""
              },
              {
                "name": "Шаблон названия вхд",
                "value": "Пропущенный звонок от номера +{{contact_phone_number}} из UIS "
              },
              {
                "name": "Срок действия задачи(часы) вхд",
                "value": ""
              },
              {
                "name": "При исходящих звонках",
                "value": false
              },
              {
                "name": "Ответственный сотрудник при исх",
                "value": ""
              },
              {
                "name": "Шаблон названия исх",
                "value": "Пропущенный звонок от номера +{{contact_phone_number}} из UIS"
              },
              {
                "name": "Срок действия задачи(часы) исх",
                "value": ""
              },
              {
                "name": "Включить переадресацию на персонального менеджера",
                "value": false
              },
              {
                "name": "линия",
                "value": ""
              },
              {
                "name": "Передавать дополнительные поля",
                "value": true
              },
              {
                "name": "Настройки заполнения дополнительных полей",
                "value": []
              },
              {
                "name": "Номер для звонка по клику",
                "value": "74950236854"
              },
              {
                "name": "Кнопка синхронизации",
                "value": ""
              },
              {
                "name": "Синхронизировать сотрудников",
                "value": false
              },
              {
                "name": "Переопредeлять АОН для исходящих звонков",
                "value": false
              },
              {
                "name": "Фильтр входящих",
                "value": {
                  "isGroup": true,
                  "operator": "or",
                  "conditions": []
                }
              },
              {
                "name": " Фильтр исходящих",
                "value": {
                  "isGroup": true,
                  "operator": "or",
                  "conditions": [
                    {
                      "isGroup": true,
                      "operator": "and",
                      "conditions": [
                        {
                          "param": "virtual_phone_number",
                          "value": [
                            "74950323706",
                            "74950236854"
                          ],
                          "operator": "include",
                          "isCondition": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "Первичные обращения",
                "value": "сounterparty and order"
              },
              {
                "name": "Создавать на сотрудника",
                "value": "from_call"
              },
              {
                "name": "Юридическое лицо",
                "value": "d0deb768-53bf-11ef-0a80-00ea0006aee4"
              },
              {
                "name": "Повторные обращения",
                "value": "always"
              },
              {
                "name": "Создавать на сотрудника(повтор)",
                "value": "from_call"
              },
              {
                "name": "Юридическое лицо(повтор)",
                "value": "d0deb768-53bf-11ef-0a80-00ea0006aee4"
              },
              {
                "name": "Первичные обращения(исх)",
                "value": "сounterparty and order"
              },
              {
                "name": "Создавать на сотрудника(исходящие)",
                "value": "from_call"
              },
              {
                "name": "Юридическое лицо(исходящие)",
                "value": "d0deb768-53bf-11ef-0a80-00ea0006aee4"
              },
              {
                "name": "Потерянный звонок",
                "value": "from_settings"
              },
              {
                "name": "Неуспешный исходящий",
                "value": "from_card"
              },
              {
                "name": "Добавить сотрудника(вход)",
                "value": [
                  {
                    "isGroup": true,
                    "operator": "or"
                  }
                ]
              },
              {
                "name": "Ответсвенный по умолчанию(ответственыые исх)",
                "value": "d0ce94df-53bf-11ef-0a80-00ea0006ae9c"
              },
              {
                "name": "Добавить сотрудника(исход)",
                "value": [
                  {
                    "isGroup": true,
                    "operator": "or",
                    "filter_employee": {
                      "isGroup": true,
                      "operator": "or",
                      "conditions": [
                        {
                          "isGroup": true,
                          "operator": "and",
                          "conditions": [
                            {
                              "param": "virtual_phone_number",
                              "value": [
                                470715,
                                996602,
                                1401706
                              ],
                              "operator": "include",
                              "isCondition": true
                            }
                          ]
                        }
                      ]
                    },
                    "responsible_employee": "7a117fdd-f821-11ef-0a80-1838001ebb4f"
                  }
                ]
              },
              {
                "name": "Информация(доп поля)",
                "value": ""
              },
              {
                "name": "Для контрагентов",
                "value": [
                  {
                    "update_always": true,
                    "extra_field_name": "fa31b34b-5ae7-11ef-0a80-09d4000ba38e",
                    "comagic_parameter": "campaign_name"
                  }
                ]
              },
              {
                "name": "Для заказов",
                "value": [
                  {
                    "update_always": true,
                    "extra_field_name": "9b4b336a-3648-11f0-0a80-159300124970",
                    "comegic_parameter": "campaign_name"
                  }
                ]
              },
              {
                "name": "Повторные обращения(исх)",
                "value": "always"
              },
              {
                "name": "Назначать на(повтор исх)",
                "value": "from_card"
              },
              {
                "name": "Юридическое лицо(исх повт)",
                "value": "d0deb768-53bf-11ef-0a80-00ea0006aee4"
              },
              {
                "name": "Срок действия задачи(вх)",
                "value": 100
              },
              {
                "name": "Срок действия задачи(исх)",
                "value": 100
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": {
        "capacity": null,
        "time_sec": null,
        "delay": 0,
        "path": null,
        "call_at": null
      },
      "network": "INTERNAL"
    },
    {
      "id": "15bd1603-48d9-4f74-b53f-8a95a186ebc2",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 525,
        "y": 1950
      },
      "name": "IF - есть ли внутренний номер + фильтр внутренних звонков",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\n\nshow_internal = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[0].value\")\n\nextension = jsn[\"extension_phone_number\"]\nis_internal = jsn[\"is_internal\"]\n\nif extension is not None:\n    if not is_internal or is_internal and show_internal:\n        return True\n    return False\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "15d9a3fe-beed-4081-abc5-68263dabdf06",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 600,
        "y": 420
      },
      "name": "Redis - сохранить контрагента",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\n\nreturn f\"moysklad_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "counterparty_id = (await context.get_parent_result(\"581552ea-715c-45ce-b0bc-ccb63a25f89b\"))['id']\n\nreturn counterparty_id",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "166cf3f5-f201-4922-a35a-6b7ed965b8d6",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2100,
        "y": -30
      },
      "name": "MoySklad JSON API Создать заказ",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_customer_order",
          "json_body": "import datetime\nimport pytz\n\n# hook ожидание ответа\nhook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))[\"data\"][\"message\"]\n\ncall_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\n\n# контрагент\ncounterparty = (await context.get_parent_result(\"2c0ee4a9-d48e-434d-8df0-e3b86f64ad51\"))[\"rows\"][0]\n\n\n\n# Извлекаем ответственного по умолчанию из настроек\ndefault_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\n\n# id последнего разговаривающего\nlast_employee_id = hook.get(\"last_talked_employee_id\")  \n\n\nfor call_type in call_type_setting:\n  if call_type[\"direction\"] == \"in\":\n    responsible = call_type[\"responsible\"]\n    organization = call_type[\"organization\"]\n    break\n\n\n\n\n# Проверка назначения ответственного\nif responsible == 'default_responsible':\n  owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\nelif responsible == 'last_speak':\n  # Если last_employee_id существует, используем его, иначе default_responsible\n  if last_employee_id:\n    owner_meta = {\n        \"meta\": {\n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{last_employee_id}\",\n            \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n            \"type\": \"employee\",\n            \"mediaType\": \"application/json\"\n        }\n    }\n  else:\n    owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\n\nelif responsible == 'from_contact_card':\n  owner_meta = counterparty[\"owner\"]\n\n\n\n# Генерация уникального имени\ncurrent_time = hook.get(\"start_time\")\n\nbody = {\n          \"name\": f\"Новый заказ по звонку {hook['contact_phone_number']} из UIS {current_time}\",\n          \"owner\": owner_meta,\n          \"organization\": {\n            \"meta\": {\n              \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/organization/{organization}\",\n              \"type\": \"organization\",\n              \"mediaType\": \"application/json\"\n            }\n          },\n          \"agent\": {\n            \"meta\": counterparty[\"meta\"]\n          }\n        }\n        \nreturn body"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "19d625c1-0397-4d18-804e-ddbb468006c0",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1815,
        "y": -450
      },
      "name": null,
      "data": {
        "nodeTypeId": "comagic-softphone-trigger-response-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "event": "get_contact_details",
          "response_get_contact_details": {
            "active_leads": [
              {}
            ]
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "19fa780d-d707-4754-b9e4-03736feacf27",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1095,
        "y": -30
      },
      "name": null,
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "in_chunks": false,
          "operation": "get.employees(get_employees)",
          "body_get_employees(get_employees)": "result = {}\r\nreturn result"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {
            "body_get_employees(get_employees)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "1a01ee9e-d00e-40eb-9f22-0e16f57e037f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 570,
        "y": -300
      },
      "name": null,
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\n\nreturn f\"moysklad_order_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "order = (await context.get_parent_result(\"93d2daa4-14eb-4058-9fda-be6debbd3b5a\"))[\"id\"]\nreturn order",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "1a052765-5359-493f-8541-2182a3a77140",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 0,
        "y": -210
      },
      "name": "Первичное обращение?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "counterparty = await context.get_parent_result(\"876c5174-e570-48cf-b771-1544680f3f56\")\r\n\r\nrows = counterparty['rows']\r\nif rows:\r\n    return False\r\n\r\nreturn True",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "1d3d5f2f-8242-40bc-b6ec-bb3648b1fe15",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": 420,
        "y": -1155
      },
      "name": null,
      "data": {
        "nodeTypeId": "cron-v2",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "triggerTimes": {
            "item": [
              {
                "mode": "everyX",
                "unit": "hours",
                "value": 2,
                "second": 0,
                "is_shifted": true
              }
            ]
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "1e507e27-f032-453e-9cc3-c17cba31820a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1080,
        "y": -1155
      },
      "name": "Сотрудник включен в синхронизацию?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "selected_employees_moysklad = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[2].value') \nemployee_id_moysklad = (await context.get_parent_result(\"26262525-8a79-4c0a-8ed1-bc75cf098ff3\"))['rows']['id']\n\nif employee_id_moysklad in selected_employees_moysklad:\n    return True\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "247b66f5-0faf-4b99-a8ea-ddcf1408452c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -555,
        "y": 1950
      },
      "name": "Завершение звонка",
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "handle": "return {\"result\": True, \"error\": None}",
          "handle_mode": "graph",
          "event_mnemonic": "call_session_finished",
          "event_conditions": [],
          "event_properties": [
            "first_talked_employee_email",
            "last_talked_employee_email",
            "last_answered_employee_email",
            "employee_email",
            "first_answered_employee_email",
            "gclid",
            "ua_resource_id",
            "ym_counter_id",
            "communication_page_url",
            "utm_referrer",
            "yclid",
            "attributes",
            "ppc_auditory",
            "ppc_position_type",
            "visitor_browser_name",
            "visitor_os_version",
            "visitor_browser_version",
            "virtual_phone_number",
            "ppc_gr_ext_id",
            "ppc_pc_ext_id",
            "ppc_kw_ext_id",
            "ppc_ad_ext_id",
            "is_internal",
            "extension_phone_number",
            "notification_timestamp",
            "notification_time",
            "called_phone_number",
            "calling_phone_number",
            "visitor_city",
            "start_time",
            "finish_time",
            "connection_time",
            "wait_time_duration",
            "postprocess_time_duration",
            "talk_time_duration",
            "referrer_domain",
            "site_domain_name",
            "session_id",
            "communication_group_id",
            "ppc_gr_id",
            "call_session_id",
            "external_id",
            "ppc_pc_id",
            "app_id",
            "ppc_kw_id",
            "contact_id",
            "communication_id",
            "ppc_ad_id",
            "first_answered_employee_id",
            "first_talked_employee_id",
            "visitor_first_campaign_id",
            "person_id",
            "openstat_source",
            "ua_client_id",
            "ym_client_id",
            "visitor_id",
            "last_answered_employee_id",
            "last_talked_employee_id",
            "openstat_ad",
            "campaign_id",
            "openstat_campaign",
            "site_id",
            "openstat_service",
            "scenario_id",
            "lead_scenario_id",
            "utm_expid",
            "is_lost",
            "call_source",
            "referrer",
            "utm_source",
            "source_group",
            "source",
            "utm_medium",
            "channel",
            "source_channel",
            "visitor_properties.calltouch_ctClientId",
            "visitor_properties.calltouch_ctGlobalId",
            "visitor_properties.calltouch_sessionId",
            "visitor_properties.calltouch_siteId",
            "visitor_properties.calltracking_params",
            "visitor_properties.calltracking_params_ctClientId",
            "visitor_properties.calltracking_params_ctGlobalId",
            "visitor_properties.calltracking_params_sessionId",
            "visitor_properties.calltracking_params_siteId",
            "visitor_properties.my_field",
            "visitor_properties.my_field2",
            "visitor_properties.Логин",
            "visitor_properties",
            "ppc_kw_keyword",
            "utm_term",
            "visits_count",
            "cm_id",
            "tag_from",
            "ymclid",
            "ef_id",
            "source_channel_mnemonic",
            "notification_mnemonic",
            "communication_group_name",
            "ppc_gr_name",
            "utm_campaign",
            "ppc_pc_name",
            "auto_call_campaign_name",
            "ppc_ad_name",
            "scenario_operation_names",
            "visitor_first_campaign_name",
            "last_scenario_operation_name",
            "tp_project",
            "campaign_name",
            "scenario_name",
            "lead_scenario_name",
            "direction",
            "contact_phone_number",
            "communication_number",
            "employee_phone_number",
            "visitor_os_name",
            "total_time_duration",
            "lost_reason",
            "campaign_description",
            "operator_rating",
            "first_answered_employee_full_name",
            "first_talked_employee_full_name",
            "is_transfer",
            "search_engine",
            "search_query",
            "total_wait_time_duration",
            "notification_name",
            "last_answered_employee_full_name",
            "last_talked_employee_full_name",
            "finish_reason",
            "visitor_screen",
            "eq_utm_campaign",
            "eq_utm_content",
            "eq_utm_expid",
            "eq_utm_medium",
            "eq_utm_referrer",
            "eq_utm_source",
            "eq_utm_term",
            "cpn_region_name",
            "visitor_region",
            "ppc_place",
            "utm_content",
            "employee_emails",
            "talked_employee_emails",
            "noanswered_employee_emails",
            "answered_employee_emails",
            "actual_noanswered_employee_emails",
            "group_ids",
            "contact_group_ids",
            "employee_group_ids",
            "toc_group_ids",
            "segment_ids",
            "employee_ids",
            "employee_full_names",
            "tag_names",
            "scenario_operation_ids",
            "tag_ids",
            "talked_employee_full_names",
            "noanswered_employee_full_names",
            "answered_employee_full_names",
            "actual_noanswered_employee_full_names",
            "record_file_links",
            "full_record_file_link",
            "call_status",
            "visitor_country",
            "entrance_page",
            "communication_type",
            "visitor_is_new",
            "last_scenario_operation_id",
            "cpn_region_id",
            "employee_id",
            "visitor_device",
            "contact_full_name",
            "employee_full_name",
            "contact_utc_offset",
            "clean_talk_time_duration",
            "visitor_language",
            "wav_call_records"
          ],
          "is_ready_to_handle": "return {\"result\": True, \"error\": None}",
          "is_ready_to_handle_mode": "code"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "26262525-8a79-4c0a-8ed1-bc75cf098ff3",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 780,
        "y": -1155
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "is_result_delay": false,
          "set_source_data": false,
          "field_to_split_out": "rows"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "26be6253-7dd4-45ac-a071-8260a8c5c54d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 555,
        "y": -435
      },
      "name": "Создавать заказ?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "settings_value = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[30].value')\r\n\r\nif settings_value == 'сounterparty and order':\r\n    return True\r\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "2856fa9d-cb6e-4d18-b50f-7c87b00bd5fb",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 0,
        "y": 300
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "287a2f67-55be-46c4-a299-21975f397bfc",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": 495,
        "y": -960
      },
      "name": null,
      "data": {
        "nodeTypeId": "personal-manager-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "handle": "return {\"id\": 1}",
          "handle_mode": "graph"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "294e54f6-f996-4e29-b697-64f94995681f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 165,
        "y": -315
      },
      "name": "Создавать сущность?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "setting_value = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[30].value')\r\n\r\nif setting_value != 'none':\r\n    return True\r\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "2b46beaf-cf09-44f5-9edd-935b6ec8bacd",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1620,
        "y": -30
      },
      "name": "IF Создать заказ? ",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "# Получаем настройку для создания заказа\ncreate_order_setting = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[7].value')\n\n# Получаем данные о звонке ожидании ответа\nhook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\n\n# Получаем настройку типа звонка (входящий/исходящий)\ncall_type_setting = (await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value'))\n\n# Проверяем активную настройку для создания заказа и соответствие типа звонка\nif create_order_setting:\n    for call_type in call_type_setting:\n        if hook['direction'] == call_type[\"direction\"]:\n            return True\n\n\n# # Проверяем активную настройку для создания заказа и соответствие типа звонка\n# if create_order_setting: \n#     if hook['direction'] == 'in' and call_type_setting == 'in':\n#         return True\n\n#     elif hook['direction'] == 'out' and call_type_setting == 'out':\n#         return True\n\n\nreturn False\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "2c0ee4a9-d48e-434d-8df0-e3b86f64ad51",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1950,
        "y": -30
      },
      "name": "MoySklad JSON API Получить Контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\nphone_number = hook['contact_phone_number']\nreturn f'phone={phone_number}'",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "2d25ced3-eb36-482a-99b5-330646742a92",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2325,
        "y": 795
      },
      "name": "Cформировать доп поля",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "return await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[23].value')",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "3162a972-50ae-4108-ab13-2fa31d21ca04",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 720,
        "y": 2070
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "331efcb4-17df-4cc8-a582-cf113c4cae9b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 150,
        "y": -630
      },
      "name": "MoySklad JSON API - автороизация",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "get_employees"
        },
        "credentials": {
          "moysklad_json_api_key": "83bceb3d-3547-46f7-a8bc-09c8cfbc5d3f"
        },
        "expressions": {
          "credentials": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "339ff975-0ea2-4f37-b8aa-7b4b4d5e6922",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1395,
        "y": -255
      },
      "name": "Устаревшая интеграция",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "return False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "3469c8dd-e328-470a-8774-13e6f59a9a93",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -540,
        "y": 690
      },
      "name": null,
      "data": {
        "nodeTypeId": "logger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "logs": {
            "log": [
              {
                "line": "parent = (await context.get_parent_result())[\"data\"][\"message\"]\n\ncall_session_id = parent.get(\"call_session_id\") or \"\"\ncontact_phone_number = parent.get(\"contact_phone_number\") or \"\"\nnotification_mnemonic = parent.get(\"notification_mnemonic\")\n\nreturn f\"{notification_mnemonic}, session_id: {call_session_id}, client_phone: {contact_phone_number}\"",
                "level": "INFO"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "logs➜log【0】➜line": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "359ff1d2-c0bb-4609-8571-dc5f719912ed",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1425,
        "y": 2475
      },
      "name": null,
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "import datetime\r\nimport pytz\r\n\r\n# Проверяем первичный ли заказ\r\ncontent = (await context.get_parent_result(\"84352b4c-af5a-48b4-ba84-f09089f25828\"))[\"content\"]\r\nif content:\r\n  first_message = True\r\nelse:\r\n  first_message =  False\r\n\r\n# hook ожидание ответа\r\nhook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))[\"data\"][\"message\"]\r\n#настройки создания заказа\r\n# call_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\r\n\r\n# контрагент\r\ncounterparty = (await context.get_parent_result(\"71006902-158e-41a7-98f4-4adbf71e662d\"))[\"rows\"][0]\r\n\r\n# # id последнего разговаривающего\r\n# last_employee_id = hook.get(\"last_talked_employee_id\")  \r\ndirection = hook[\"direction\"]\r\n\r\n# Извлекаем ответственного по умолчанию из настроек\r\n\r\nif direction == \"in\":\r\n  default_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[42].value\")\r\nif direction == \"out\":\r\n  default_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\r\n\r\n\r\n\r\n# for call_type in call_type_setting:\r\n#   if call_type[\"direction\"] == direction:\r\n#     responsible = call_type[\"responsible\"]\r\n#     organization = call_type[\"organization\"]\r\nif not first_message and direction == \"in\":\r\n  responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[34].value\")\r\n  organization = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[35].value\")\r\nif not first_message and direction == 'out':\r\n  responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[48].value\")\r\n  organization = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[49].value\")\r\nif first_message and direction == \"in\":\r\n  responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[31].value\")\r\n  organization = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[32].value\")\r\nif first_message and direction == \"out\":\r\n  responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[37].value\")\r\n  organization = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[38].value\")\r\n\r\n\r\n\r\n\r\n\r\n# Проверка назначения ответственного\r\nif responsible == 'from_integration':\r\n  owner_meta = {\r\n      \"meta\": {\r\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\r\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\r\n        \"type\": \"employee\",\r\n        \"mediaType\": \"application/json\"\r\n      }\r\n  }\r\n\r\nelif responsible == 'start_call' or \"from_call\":\r\n  # Получаем данные о сотруднике\r\n  employee_id = (await context.get_parent_result(\"99392bd0-f0ff-49c4-85dc-ee9e9890a13a\"))#[0][\"records\"]\r\n  \r\n  # Проверяем, удалось ли получить ID сотрудника\r\n  if len(employee_id) > 0:\r\n    employee_id = employee_id[0][\"records\"][0][\"data\"][\"moysklad_employee_id\"]\r\n    \r\n    # Если employee_id существует, используем его, иначе default_responsible\r\n  if employee_id:\r\n    owner_meta = {\r\n        \"meta\": {\r\n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{employee_id}\",\r\n            \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\r\n            \"type\": \"employee\",\r\n            \"mediaType\": \"application/json\"\r\n        }\r\n    }\r\n  else:\r\n    owner_meta = {\r\n      \"meta\": {\r\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\r\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\r\n        \"type\": \"employee\",\r\n        \"mediaType\": \"application/json\"\r\n      }\r\n  }\r\n\r\n\r\nelif responsible == 'from_card':\r\n  owner_meta = counterparty[\"owner\"]\r\n\r\n# Генерация уникального имени\r\ncurrent_time = hook.get(\"start_time\")\r\n\r\nbody = {\r\n          \"name\": f\"Новый заказ по звонку {hook['contact_phone_number']} из UIS {current_time}\",\r\n          \"owner\": owner_meta,\r\n          \"organization\": {\r\n            \"meta\": {\r\n              \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/organization/{organization}\",\r\n              \"type\": \"organization\",\r\n              \"mediaType\": \"application/json\"\r\n            }\r\n          },\r\n          \"agent\": {\r\n            \"meta\": counterparty[\"meta\"]\r\n          }\r\n        }\r\n        \r\nreturn body, responsible, first_message",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "3685ff77-08cd-4c42-afd6-315b737afba5",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1905,
        "y": 795
      },
      "name": "Не нашли контрагента?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "counterparty = await context.get_parent_result(\"5c2796fb-3ce1-45f0-8c59-52f7f66afcba\")\n\nrows = counterparty['rows']\nif rows:\n    return False\n\nreturn True",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "388e32d7-f2c8-4488-a9ee-cc80832e4036",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -450,
        "y": 810
      },
      "name": "IF - фильтр ВН",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\n\nfilters = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[29].value')\nfilters_on_off = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].value')\ndirection = jsn['direction']\nis_internal = jsn['is_internal']\n\n\n# настройки фильтра по виртуальным\n\nif not filters or filters_on_off == False:\n    return True\n\n\nvirt_number_hook = jsn.get('virtual_phone_number')\nsite_from_hook = jsn.get('site_id')\nscenario_from_hook = jsn.get('scenario_id')\nsource_from_hook = jsn.get('source_id')\ncampaign_from_hook = jsn.get('campaign_id')\n\n\n# Проверяем условия\nif (direction == \"out\" and is_internal == False):\n    condition_flag = True\n    for or_condition in filters['conditions']:\n        condition_flag = True\n        if not or_condition.get('conditions'):\n            continue\n        for and_condition in or_condition['conditions']:\n            param = and_condition.get('param')\n            operator = and_condition.get('operator')\n            value = and_condition.get('value')\n                \n                # Проверка virtual_phone_number\n            if param == 'virtual_phone_number':\n                if operator == 'include' and virt_number_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and virt_number_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка site_id\n            if param == 'site_id':\n                if operator == 'include' and site_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and site_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка scenario_id\n            if param == 'scenario_id':\n                if operator == 'include' and scenario_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and scenario_from_hook in value:\n                    condition_flag = False\n                    break\n                \n                # Проверка source_id\n            if param == 'source_id':\n                if operator == 'include' and source_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and source_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка campaign_id\n            if param == 'campaign_id':\n                if operator == 'include' and campaign_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and campaign_from_hook in value:\n                    condition_flag = False\n                    break\n            \n    if condition_flag is True:\n        return True\nreturn False\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 285,
        "y": -630
      },
      "name": "MoySklad JSON API - выпадашки",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {},
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "method": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "3ba020c0-8264-452e-a61a-80c2fe426b28",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 930,
        "y": -960
      },
      "name": "IF контрагент найден",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = await context.get_parent_result(\"d1966969-7aff-4610-ac65-aa4291bc0337\")\nif len(jsn[\"rows\"]) > 0:\n    return True\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "3c8190ef-e586-4561-8b05-14d082f5e4a5",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 345,
        "y": -450
      },
      "name": "MoySklad JSON API - создаем контрагента с доп. полями",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_counterparty",
          "json_body": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))[\"data\"][\"message\"]\n# ext_field_triger = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value\")\n# ext_field = (await context.get_parent_result(\"062d5e9d-3ba5-464a-b209-22ecd2216a29\"))['result']\next_fields = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[45].value')\n\nlist_attributes = []\n\n# Тело запроса для создания контрагента без доп полей\nrequest_body = {}\n\n# Устанавливаем name и phone в зависимости от наличия номера телефона\nif hook.get('contact_phone_number'):\n    request_body['name'] = f'Новый контрагент {hook[\"contact_phone_number\"]} по звонку из UIS'\n    request_body['phone'] = hook['contact_phone_number']\n\n# Вкл передача полей и поля заполнены\nif ext_fields:\n  for ext_field in ext_fields:\n    try:\n      # Параметры для создания атрибутов\n      extra_field_name = ext_field['extra_field_name']\n      comagic_parameter = ext_field['comagic_parameter'].strip(' ')\n\n      item_dict = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(item_dict)\n      \n      # Добавление атрибутов в request_body\n      request_body[\"attributes\"] = list_attributes\n      \n    except KeyError:\n      pass\n\nreturn request_body\n\n\n\n\n\n\n\n\n# [\n#   {\n#     \"update_always\": false,\n#     \"extra_field_name\": \"43e71cfd-7737-11ef-0a80-1145000c8c26\",\n#     \"comagic_parameter\": \"eq_utm_source\"\n#   }\n# ]\n\n# [  \n#     {  \n#       \"meta\":{  \n#         \"href\":\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/0d129ff5-2c8c-11e6-8a84-bae5000000f3\",\n#         \"type\":\"attributemetadata\",\n#         \"mediaType\":\"application/json\"\n#       },\n#       \n#       \"type\":\"string\",\n#       \"value\":0.75\n#     },\n# ]"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "3f267bd3-2a7d-4c3a-a14a-77f58bd9df93",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2235,
        "y": -150
      },
      "name": "IF Обновлять доп поля?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "return await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value')",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "3fd481f5-0da0-4d3f-b171-c218be02b9c6",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 45,
        "y": 615
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "40f49c39-6bbb-4500-a382-baead3b4956a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1500,
        "y": 2220
      },
      "name": null,
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "in_chunks": false,
          "operation": "get.employees(get_employees)",
          "body_get_employees(get_employees)": {
            "sort": [
              {
                "field": "string",
                "order": "string"
              }
            ],
            "limit": "number",
            "fields": [
              "string"
            ],
            "filter": {},
            "offset": "number",
            "user_id": "number"
          }
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "417bcef2-e11a-4035-96ac-a40718faf8fe",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 945,
        "y": 555
      },
      "name": "Redis - сохранить заказ",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\n\nreturn f\"moysklad_order_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "order = (await context.get_parent_result(\"67c22291-ff27-46d8-8f33-767b7f4db3b7\"))[\"id\"]\nreturn order",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "426906a5-984a-4487-bbfa-f66d3ea609c7",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1020,
        "y": -150
      },
      "name": "Обновляем доп. поля",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))[\"data\"][\"message\"]\next_field = (await context.get_parent_result(\"f52c1daa-806b-427f-8e9b-8d877741cd52\"))['result']\n\nlist_attributes = []\n\n# Вкл передача полей и поля заполнены\nif ext_field:\n    # Параметры для создания атрибутов\n    extra_field_name = ext_field['extra_field_name']\n    comagic_parameter = ext_field['comagic_parameter'].strip(' ')\n    if ext_field['update_always']:\n      new_ext_field = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(new_ext_field)\n\nreturn list_attributes\n\n\n# [\n#   {\n#     \"update_always\": false,\n#     \"extra_field_name\": \"43e71cfd-7737-11ef-0a80-1145000c8c26\",\n#     \"comagic_parameter\": \"site_domain_name\"\n#   }\n# ]",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "43a654ff-4267-4c67-825f-4d74c08ea8c8",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -255,
        "y": -375
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "440e28d4-94d9-411b-a8dc-c4b6cbe94c1a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -540,
        "y": 225
      },
      "name": "Ожидание ответа",
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "handle": "return {\"result\": True, \"error\": None}",
          "handle_mode": "graph",
          "event_mnemonic": "call_proceeding",
          "event_conditions": [],
          "event_properties": [
            "gclid",
            "ua_resource_id",
            "ym_counter_id",
            "utm_referrer",
            "yclid",
            "attributes",
            "ppc_auditory",
            "ppc_position_type",
            "visitor_browser_name",
            "visitor_os_version",
            "visitor_browser_version",
            "virtual_phone_number",
            "ppc_gr_ext_id",
            "ppc_pc_ext_id",
            "ppc_kw_ext_id",
            "ppc_ad_ext_id",
            "is_internal",
            "extension_phone_number",
            "notification_timestamp",
            "notification_time",
            "called_phone_number",
            "calling_phone_number",
            "visitor_city",
            "start_time",
            "referrer_domain",
            "site_domain_name",
            "session_id",
            "communication_group_id",
            "ppc_gr_id",
            "call_session_id",
            "external_id",
            "ppc_pc_id",
            "app_id",
            "ppc_kw_id",
            "contact_id",
            "communication_id",
            "ppc_ad_id",
            "visitor_first_campaign_id",
            "person_id",
            "openstat_source",
            "ua_client_id",
            "ym_client_id",
            "visitor_id",
            "openstat_ad",
            "campaign_id",
            "openstat_campaign",
            "site_id",
            "openstat_service",
            "transferred_by_employee_id",
            "scenario_id",
            "lead_scenario_id",
            "utm_expid",
            "call_source",
            "referrer",
            "utm_source",
            "source_group",
            "source",
            "utm_medium",
            "channel",
            "source_channel",
            "visitor_properties.calltouch_ctClientId",
            "visitor_properties.calltouch_ctGlobalId",
            "visitor_properties.calltouch_sessionId",
            "visitor_properties.calltouch_siteId",
            "visitor_properties.calltracking_params",
            "visitor_properties.calltracking_params_ctClientId",
            "visitor_properties.calltracking_params_ctGlobalId",
            "visitor_properties.calltracking_params_sessionId",
            "visitor_properties.calltracking_params_siteId",
            "visitor_properties.my_field",
            "visitor_properties.my_field2",
            "visitor_properties.Логин",
            "visitor_properties",
            "ppc_kw_keyword",
            "utm_term",
            "visits_count",
            "cm_id",
            "tag_from",
            "ymclid",
            "ef_id",
            "source_channel_mnemonic",
            "notification_mnemonic",
            "communication_group_name",
            "ppc_gr_name",
            "utm_campaign",
            "ppc_pc_name",
            "ppc_ad_name",
            "visitor_first_campaign_name",
            "tp_project",
            "campaign_name",
            "scenario_name",
            "lead_scenario_name",
            "direction",
            "contact_phone_number",
            "communication_number",
            "employee_phone_number",
            "visitor_os_name",
            "campaign_description",
            "search_engine",
            "search_query",
            "notification_name",
            "is_transferred",
            "is_operator",
            "visitor_screen",
            "eq_utm_campaign",
            "eq_utm_content",
            "eq_utm_expid",
            "eq_utm_medium",
            "eq_utm_referrer",
            "eq_utm_source",
            "eq_utm_term",
            "cpn_region_name",
            "visitor_region",
            "ppc_place",
            "utm_content",
            "contact_group_ids",
            "employee_group_ids",
            "segment_ids",
            "visitor_country",
            "entrance_page",
            "communication_type",
            "visitor_is_new",
            "leg_id",
            "cpn_region_id",
            "employee_id",
            "visitor_device",
            "contact_full_name",
            "employee_full_name",
            "transferred_by_employee_full_name",
            "visitor_language"
          ],
          "is_ready_to_handle": "return {\"result\": True, \"error\": None}",
          "is_ready_to_handle_mode": "code"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "447f4f50-5996-42f5-970d-496c7232011c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1530,
        "y": -1260
      },
      "name": "DataAPI - обновить сотрудника",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "operation": "update.employees(update_employees)",
          "body_update_employees(update_employees)": "moysklad_employee = (await context.get_parent_result(\"26262525-8a79-4c0a-8ed1-bc75cf098ff3\"))['rows']\nuis_employee = {}\n\n# id\nuis_employee['id'] = (await context.get_parent_result(\"c8707e7a-0f32-430e-98ee-1abbb0945938\"))['data'][0]['id']\n\n# Разбивка fullName на Имя, Фамилия, Отчество\nif moysklad_employee.get('fullName'):\n    full_name_parts = moysklad_employee['fullName'].split()\n    \n    if len(full_name_parts) == 3:\n        # Если три части Имя Фамилия Отчество\n        uis_employee['first_name'] = full_name_parts[0]\n        uis_employee['last_name'] = '[МойСклад] ' + full_name_parts[1]\n        uis_employee['patronymic'] = full_name_parts[2]\n\n    elif len(full_name_parts) == 2:\n        # Если две части Имя Фамилия\n        uis_employee['first_name'] = full_name_parts[0]\n        uis_employee['last_name'] = '[МойСклад] ' + full_name_parts[1]\n\n    else:\n        # Если одна Имя / Фамилия \n        uis_employee['last_name'] = '[МойСклад] ' + full_name_parts[0]\nelse:\n    # Если fullName отсутствует, подставляем email как фамилию\n    uis_employee['last_name'] = '[МойСклад] ' + moysklad_employee['email']\n\n# email\nif moysklad_employee.get('email'):\n    uis_employee['email'] = moysklad_employee['email']\n\n# # phone_numbers\n# if moysklad_employee.get('phone'):\n#     phone_number = moysklad_employee['phone'].replace('+', '')\n#     uis_employee['phone_numbers'] = [{\n#         'phone_number': phone_number\n#     }]\n\nreturn uis_employee"
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": {
          "properties": {
            "body_update_employees(update_employees)": {
              "language": "python"
            }
          },
          "credentials": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "459b32a5-654f-401a-927d-3c0be0b0d31b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2385,
        "y": -150
      },
      "name": "Cформировать доп поля",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "return await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[23].value')",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "4a2b4df2-613e-43dd-aa0a-5fcf23d5373a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1470,
        "y": 480
      },
      "name": "Устаревший сценарий",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "return False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "4a3de1b4-fb6c-4421-ad03-c3e9d028427f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2205,
        "y": 660
      },
      "name": "Сохранить нового контрагента",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\n\nreturn f\"moysklad_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "counterparty_id = (await context.get_parent_result(\"4cbc8429-9aa3-4d72-af1b-2f1028694a22\"))['id']\n\nreturn counterparty_id",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "4c550c2f-a031-4a87-9fb0-62a1dfec3bc5",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 645,
        "y": -960
      },
      "name": "IF включена переадресация на ПМ + нужный номер",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "pm_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[20].value\")\nvirt_number = (await context.get_parent_result(\"287a2f67-55be-46c4-a299-21975f397bfc\"))[\"crm_context\"][\"virtual_phone_number\"]\n\nvn_filter_is_on = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].name')\nvn_list = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[4].value\")\n\n\nif pm_setting:\n    if vn_filter_is_on:\n        if virt_number in vn_list or len(vn_list) == 0:\n            return True\n    else:\n        return True\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -600,
        "y": 810
      },
      "name": "Исходящий звонок",
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "handle": "return {\"result\": True, \"error\": None}",
          "handle_mode": "graph",
          "event_mnemonic": "out_call_session",
          "event_conditions": [],
          "event_properties": [
            "gclid",
            "ua_resource_id",
            "ym_counter_id",
            "utm_referrer",
            "yclid",
            "attributes",
            "visitor_browser_name",
            "visitor_os_version",
            "visitor_browser_version",
            "virtual_phone_number",
            "is_internal",
            "extension_phone_number",
            "notification_timestamp",
            "notification_time",
            "called_phone_number",
            "calling_phone_number",
            "visitor_city",
            "start_time",
            "referrer_domain",
            "site_domain_name",
            "session_id",
            "communication_group_id",
            "call_session_id",
            "external_id",
            "app_id",
            "contact_id",
            "communication_id",
            "visitor_first_campaign_id",
            "person_id",
            "openstat_source",
            "ua_client_id",
            "ym_client_id",
            "visitor_id",
            "openstat_ad",
            "campaign_id",
            "openstat_campaign",
            "site_id",
            "openstat_service",
            "utm_expid",
            "call_source",
            "referrer",
            "utm_source",
            "source_group",
            "source",
            "utm_medium",
            "channel",
            "source_channel",
            "visitor_properties.calltouch_ctClientId",
            "visitor_properties.calltouch_ctGlobalId",
            "visitor_properties.calltouch_sessionId",
            "visitor_properties.calltouch_siteId",
            "visitor_properties.calltracking_params",
            "visitor_properties.calltracking_params_ctClientId",
            "visitor_properties.calltracking_params_ctGlobalId",
            "visitor_properties.calltracking_params_sessionId",
            "visitor_properties.calltracking_params_siteId",
            "visitor_properties.my_field",
            "visitor_properties.my_field2",
            "visitor_properties.Логин",
            "visitor_properties",
            "utm_term",
            "visits_count",
            "cm_id",
            "tag_from",
            "ymclid",
            "ef_id",
            "source_channel_mnemonic",
            "notification_mnemonic",
            "communication_group_name",
            "utm_campaign",
            "visitor_first_campaign_name",
            "tp_project",
            "campaign_name",
            "direction",
            "contact_phone_number",
            "communication_number",
            "employee_phone_number",
            "visitor_os_name",
            "campaign_description",
            "search_engine",
            "search_query",
            "notification_name",
            "visitor_screen",
            "eq_utm_campaign",
            "eq_utm_content",
            "eq_utm_expid",
            "eq_utm_medium",
            "eq_utm_referrer",
            "eq_utm_source",
            "eq_utm_term",
            "cpn_region_name",
            "visitor_region",
            "utm_content",
            "contact_group_ids",
            "employee_group_ids",
            "segment_ids",
            "visitor_country",
            "entrance_page",
            "communication_type",
            "visitor_is_new",
            "cpn_region_id",
            "employee_id",
            "visitor_device",
            "contact_full_name",
            "employee_full_name",
            "visitor_language"
          ],
          "is_ready_to_handle": "return {\"result\": True, \"error\": None}",
          "is_ready_to_handle_mode": "code"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "4cbc8429-9aa3-4d72-af1b-2f1028694a22",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2070,
        "y": 660
      },
      "name": "MoySklad JSON API Создаем контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_counterparty",
          "json_body": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))[\"data\"][\"message\"]\next_field_triger = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value\")\n# ext_field = (await context.get_parent_result(\"9dc75e45-29b6-4eba-9599-723d1f9c909d\"))['result']\next_fields = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[23].value')\n\nlist_attributes = []\n\n# Тело запроса для создания контрагента без доп полей\nrequest_body = {}\n\n# Устанавливаем name и phone в зависимости от наличия номера телефона\nif hook.get('contact_phone_number'):\n    request_body['name'] = f'Новый контрагент {hook[\"contact_phone_number\"]} по звонку из UIS'\n    request_body['phone'] = hook['contact_phone_number']\n\n# Вкл передача полей и поля заполнены\nif ext_field_triger and ext_fields:\n  for ext_field in ext_fields:\n    try:\n      # Параметры для создания атрибутов\n      extra_field_name = ext_field['extra_field_name']\n      comagic_parameter = ext_field['comagic_parameter'].strip(' ')\n\n      item_dict = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(item_dict)\n      \n      # Добавление атрибутов в request_body\n      request_body[\"attributes\"] = list_attributes\n      \n    except KeyError:\n      pass\n\nreturn request_body\n\n\n\n\n\n\n\n# [\n#   {\n#     \"update_always\": false,\n#     \"extra_field_name\": \"43e71cfd-7737-11ef-0a80-1145000c8c26\",\n#     \"comagic_parameter\": \"eq_utm_source\"\n#   }\n# ]\n\n# [  \n#     {  \n#       \"meta\":{  \n#         \"href\":\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/0d129ff5-2c8c-11e6-8a84-bae5000000f3\",\n#         \"type\":\"attributemetadata\",\n#         \"mediaType\":\"application/json\"\n#       },\n#       \n#       \"type\":\"string\",\n#       \"value\":0.75\n#     },\n# ]"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "4d22cd67-6014-4846-bc3f-69f3a6beb393",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1980,
        "y": 150
      },
      "name": null,
      "data": {
        "nodeTypeId": "logger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "logs": {
            "log": [
              {
                "line": "parent = (await context.get_parent_result())\n\ncontact_phone_number = parent.get(\"content\").get(\"destNumber\")\nemployee_extension_phone = parent.get('content', '').get(\"srcNumber\")\n\nreturn f\"Исход по клику, client_phone: {contact_phone_number}, employee_extension_phone: {employee_extension_phone}\"\n\n\n",
                "level": "INFO"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "logs➜log【0】➜line": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "4dd0377b-bb8a-4649-935d-b4fe64c5ad5e",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 810,
        "y": 855
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "is_result_delay": false,
          "set_source_data": false,
          "field_to_split_out": "result"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "4e2319d0-5942-4300-a1a2-e9bc8162847e",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1605,
        "y": 795
      },
      "name": "Создавать контрагента?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "return await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[5].value')",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "5280840e-f8c3-4d10-a524-366741b6e482",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1065,
        "y": 1170
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "540f5c2f-17e1-4546-8b08-3cc13b5687cf",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -540,
        "y": -210
      },
      "name": null,
      "data": {
        "nodeTypeId": "logger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "logs": {
            "log": [
              {
                "line": "parent = (await context.get_parent_result())[\"data\"][\"message\"]\n\ncall_session_id = parent.get(\"call_session_id\") or \"\"\ncontact_phone_number = parent.get(\"contact_phone_number\") or \"\"\nnotification_mnemonic = parent.get(\"notification_mnemonic\")\n\nreturn f\"{notification_mnemonic}, session_id: {call_session_id}, client_phone: {contact_phone_number}\"",
                "level": "INFO"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "logs➜log【0】➜line": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "5489ce33-972c-429f-bd0a-5453678e18f8",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -390,
        "y": -840
      },
      "name": null,
      "data": {
        "nodeTypeId": "uc-flow-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "flow": "77094a30-084f-4660-98cf-1f14bf764020",
          "resource": "flow",
          "operation": "get_flow"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "581552ea-715c-45ce-b0bc-ccb63a25f89b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 420,
        "y": 525
      },
      "name": "MoySklad JSON API - создаем контрагента с доп. полями",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_counterparty",
          "json_body": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))[\"data\"][\"message\"]\n# ext_field_triger = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value\")\n# ext_field = (await context.get_parent_result(\"062d5e9d-3ba5-464a-b209-22ecd2216a29\"))['result']\next_fields = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[45].value')\n\nlist_attributes = []\n\n# Тело запроса для создания контрагента без доп полей\nrequest_body = {}\n\n# Устанавливаем name и phone в зависимости от наличия номера телефона\nif hook.get('contact_phone_number'):\n    request_body['name'] = f'Новый контрагент {hook[\"contact_phone_number\"]} по звонку из UIS'\n    request_body['phone'] = hook['contact_phone_number']\n\n# Вкл передача полей и поля заполнены\nif ext_fields:\n  for ext_field in ext_fields:\n    try:\n      # Параметры для создания атрибутов\n      extra_field_name = ext_field['extra_field_name']\n      comagic_parameter = ext_field['comagic_parameter'].strip(' ')\n\n      item_dict = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(item_dict)\n      \n      # Добавление атрибутов в request_body\n      request_body[\"attributes\"] = list_attributes\n      \n    except KeyError:\n      pass\n\nreturn request_body\n\n\n\n\n\n\n\n\n# [\n#   {\n#     \"update_always\": false,\n#     \"extra_field_name\": \"43e71cfd-7737-11ef-0a80-1145000c8c26\",\n#     \"comagic_parameter\": \"eq_utm_source\"\n#   }\n# ]\n\n# [  \n#     {  \n#       \"meta\":{  \n#         \"href\":\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/0d129ff5-2c8c-11e6-8a84-bae5000000f3\",\n#         \"type\":\"attributemetadata\",\n#         \"mediaType\":\"application/json\"\n#       },\n#       \n#       \"type\":\"string\",\n#       \"value\":0.75\n#     },\n# ]"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "5affa723-bbbe-4ec7-9851-ca78427d0292",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -615,
        "y": -90
      },
      "name": "Входящий звонок ",
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "handle": "return {\"result\": True, \"error\": None}",
          "handle_mode": "code",
          "event_mnemonic": "in_call_session",
          "event_conditions": [],
          "event_properties": [
            "gclid",
            "ua_resource_id",
            "ym_counter_id",
            "utm_referrer",
            "yclid",
            "attributes",
            "ppc_auditory",
            "ppc_position_type",
            "visitor_browser_name",
            "visitor_os_version",
            "visitor_browser_version",
            "virtual_phone_number",
            "ppc_gr_ext_id",
            "ppc_pc_ext_id",
            "ppc_kw_ext_id",
            "ppc_ad_ext_id",
            "is_internal",
            "notification_timestamp",
            "notification_time",
            "called_phone_number",
            "calling_phone_number",
            "visitor_city",
            "source_group",
            "start_time",
            "referrer_domain",
            "site_domain_name",
            "session_id",
            "communication_group_id",
            "ppc_gr_id",
            "call_session_id",
            "external_id",
            "source_id",
            "ppc_pc_id",
            "app_id",
            "ppc_kw_id",
            "contact_id",
            "communication_id",
            "ppc_ad_id",
            "visitor_first_campaign_id",
            "person_id",
            "openstat_source",
            "ua_client_id",
            "ym_client_id",
            "visitor_id",
            "openstat_ad",
            "campaign_id",
            "openstat_campaign",
            "site_id",
            "openstat_service",
            "scenario_id",
            "lead_scenario_id",
            "utm_expid",
            "source",
            "call_source",
            "referrer",
            "utm_source",
            "utm_medium",
            "channel",
            "source_channel",
            "visitor_properties.calltouch_ctClientId",
            "visitor_properties.calltouch_ctGlobalId",
            "visitor_properties.calltouch_sessionId",
            "visitor_properties.calltouch_siteId",
            "visitor_properties.calltracking_params",
            "visitor_properties.calltracking_params_ctClientId",
            "visitor_properties.calltracking_params_ctGlobalId",
            "visitor_properties.calltracking_params_sessionId",
            "visitor_properties.calltracking_params_siteId",
            "visitor_properties.my_field",
            "visitor_properties.my_field2",
            "visitor_properties.Логин",
            "visitor_properties",
            "ppc_kw_keyword",
            "utm_term",
            "visits_count",
            "cm_id",
            "tag_from",
            "ymclid",
            "ef_id",
            "source_channel_mnemonic",
            "notification_mnemonic",
            "communication_group_name",
            "ppc_gr_name",
            "utm_campaign",
            "ppc_pc_name",
            "ppc_ad_name",
            "visitor_first_campaign_name",
            "tp_project",
            "campaign_name",
            "scenario_name",
            "lead_scenario_name",
            "direction",
            "contact_phone_number",
            "communication_number",
            "visitor_os_name",
            "campaign_description",
            "search_engine",
            "search_query",
            "notification_name",
            "visitor_screen",
            "eq_utm_campaign",
            "eq_utm_content",
            "eq_utm_expid",
            "eq_utm_medium",
            "eq_utm_referrer",
            "eq_utm_source",
            "eq_utm_term",
            "cpn_region_name",
            "visitor_region",
            "ppc_place",
            "utm_content",
            "contact_group_ids",
            "segment_ids",
            "visitor_country",
            "entrance_page",
            "communication_type",
            "visitor_is_new",
            "cpn_region_id",
            "visitor_device",
            "contact_full_name",
            "visitor_language"
          ],
          "is_ready_to_handle": "return {\"result\": True, \"error\": None}",
          "is_ready_to_handle_mode": "graph"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "5bb4805e-1291-4d4d-ba07-94ccd113476c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -360,
        "y": 1290
      },
      "name": "IF - есть ли внутренний номер + фильтр внутренних звонков",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result())['data']['message']\n\nfilters_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[28].value')\nfilters_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[29].value')\nfilters_on_off = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].value')\ndirection = jsn['direction']\nis_internal = jsn['is_internal']\n\n\n# настройки фильтра по виртуальным\nif direction == 'in':\n    if not filters_in or filters_on_off == False:\n        return True\n\n\nif direction == 'out':\n    if not filters_out or filters_on_off == False:\n        return True\n\nvirt_number_hook = jsn.get('virtual_phone_number')\nsite_from_hook = jsn.get('site_id')\nscenario_from_hook = jsn.get('scenario_id')\nsource_from_hook = jsn.get('source_id')\ncampaign_from_hook = jsn.get('campaign_id')\n\n\n# Проверяем условия\nif (direction == \"out\" and is_internal == False):\n    condition_flag = True\n    for or_condition in filters_out['conditions']:\n        condition_flag = True\n        if not or_condition.get('conditions'):\n            continue\n        for and_condition in or_condition['conditions']:\n            param = and_condition.get('param')\n            operator = and_condition.get('operator')\n            value = and_condition.get('value')\n                \n                # Проверка virtual_phone_number\n            if param == 'virtual_phone_number':\n                if operator == 'include' and virt_number_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and virt_number_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка site_id\n            if param == 'site_id':\n                if operator == 'include' and site_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and site_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка scenario_id\n            if param == 'scenario_id':\n                if operator == 'include' and scenario_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and scenario_from_hook in value:\n                    condition_flag = False\n                    break\n                \n                # Проверка source_id\n            if param == 'source_id':\n                if operator == 'include' and source_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and source_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка campaign_id\n            if param == 'campaign_id':\n                if operator == 'include' and campaign_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and campaign_from_hook in value:\n                    condition_flag = False\n                    break\n            \n    if condition_flag is True:\n        return True\n\n# Проверяем условия входящий звонок\nif (direction == \"in\" and is_internal == False):\n    condition_flag = True\n    for or_condition in filters_in['conditions']:\n        condition_flag = True\n        if not or_condition.get('conditions'):\n            continue\n        for and_condition in or_condition['conditions']:\n            param = and_condition.get('param')\n            operator = and_condition.get('operator')\n            value = and_condition.get('value')\n                \n                # Проверка virtual_phone_number\n            if param == 'virtual_phone_number':\n                if operator == 'include' and virt_number_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and virt_number_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка site_id\n            if param == 'site_id':\n                if operator == 'include' and site_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and site_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка scenario_id\n            if param == 'scenario_id':\n                if operator == 'include' and scenario_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and scenario_from_hook in value:\n                    condition_flag = False\n                    break\n                \n                # Проверка source_id\n            if param == 'source_id':\n                if operator == 'include' and source_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and source_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка campaign_id\n            if param == 'campaign_id':\n                if operator == 'include' and campaign_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and campaign_from_hook in value:\n                    condition_flag = False\n                    break\n            \n    if condition_flag is True:\n        return True\nreturn False\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "5c2796fb-3ce1-45f0-8c59-52f7f66afcba",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1755,
        "y": 795
      },
      "name": "MoySklad JSON API Получаем контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\nphone_number = hook['contact_phone_number']\nreturn f'phone={phone_number}'",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "5e2fc6fa-2d0c-4011-a5a2-1480715fa5fd",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -390,
        "y": -1065
      },
      "name": null,
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "parent_flow = await context.get_parent_result(\"5489ce33-972c-429f-bd0a-5453678e18f8\")\r\ngraph = parent_flow['graph']\r\n\r\nnew_field = graph['nodes'][\"9182a887-6e61-454a-b133-fb1b57de5d29\"]['data']['properties'][\"values\"][\"json_field\"]\r\n\r\n\r\nflow = await context.get_flow()\r\ngraph = flow.graph\r\nold_field = graph.nodes[\"1562cf9a-ea29-4380-aac5-74bb0dd238f7\"].data.properties[\"values\"][\"json_field\"]\r\n\r\n\r\n\r\nfor index, field in enumerate(new_field):\r\n    try:\r\n        old_field[index][\"name\"] = field[\"name\"]\r\n    except IndexError:\r\n        field['value'] = ''\r\n        old_field.append(field)\r\n\r\n\r\n\r\n\r\nreturn old_field",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "5fe0b604-aae5-445d-ae3b-b3741acfaa4e",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 840,
        "y": 2190
      },
      "name": "Получаем id сотрудника из мойсклад",
      "data": {
        "nodeTypeId": "queue_manager",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "GET_RECORDS",
          "get_records_data": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\ndirection = hook['direction']\n\n# Извлекаем идентификаторы сотрудников\nif direction == 'in':\n    responsible_option = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[31].value\")\nif direction == 'out':\n    responsible_option = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[37].value\")\n\n# Извлекаем идентификаторы сотрудников из hook\nfirst_employee_id = hook.get(\"first_talked_employee_id\")  # id первого разговаривающего\nlast_employee_id = hook.get(\"last_talked_employee_id\")  # id последнего разговаривающего\n \n# Извлекаем ответственного по умолчанию из настроек\ndefault_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\n\n# Логика выбора employee_id в зависимости от настроек\nif responsible_option == \"start_call\":\n    employee_id = first_employee_id\n\nelif responsible_option == \"from_call\":\n    employee_id = last_employee_id\n\nelse:\n    return [] \n\n    \nreturn [\n    {\n        \"queue_name\": \"moysklad_dataapi_employees_id\",\n        \"limit\": 100,\n        \"filter\": {\n            \"comparison_operator\": \"and\",\n            \"filters\": [\n                {\n                    \"field\": \"dataapi_employee_id\",\n                    \"condition\": \"=\",\n                    \"value\": employee_id\n                },\n            ]\n        }\n    }\n]\n"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "get_records_data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "61b5731e-09eb-4986-8ba4-a31b40ea6a3b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1755,
        "y": 945
      },
      "name": "Ждем создания контрагента при первичном обращении",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "import asyncio\r\nreturn await asyncio.sleep(1)",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "62170bd8-0720-4847-95f3-87d4c3f70713",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1410,
        "y": 2085
      },
      "name": null,
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "get_employees"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "622d8bd8-7f15-4179-a06e-63eaa95341c6",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 255,
        "y": 630
      },
      "name": "Создавать сущность?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "setting_value = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[47].value')\r\n\r\nif setting_value != 'none':\r\n    return True\r\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "626bc204-370d-4f1b-82cf-c3fd64793c4c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1260,
        "y": -885
      },
      "name": null,
      "data": {
        "nodeTypeId": "set-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "values": {
            "number": [],
            "string": [],
            "boolean": [],
            "date_time": [],
            "json_field": [
              {
                "name": "propertyName",
                "value": "counterparty = (await context.get_parent_result(\"d1966969-7aff-4610-ac65-aa4291bc0337\"))[\"rows\"][0]\nemployees = (await context.get_parent_result(\"fe5578cf-2f70-404d-99b8-65202258a2c4\"))[\"rows\"]\nowner = counterparty[\"owner\"][\"meta\"][\"href\"]\n\nemail = None\n\nfor employee in employees:\n  if employee[\"meta\"][\"href\"] == owner:\n    email = employee[\"email\"]\n    break\n\nreturn email"
              }
            ]
          },
          "keep_only_set": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "values➜json_field【0】➜value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "6544851f-f015-4d02-9af6-238a8c6bed04",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 135,
        "y": 1860
      },
      "name": "DataAPI - получаем внутренние номера сотрудников",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "in_chunks": false,
          "operation": "get.employees(get_employees)",
          "body_get_employees(get_employees)": "jsn = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\nemployee_ids = jsn[\"employee_ids\"]\n\nreturn {\n    \"filter\": {\n        \"field\": \"id\",\n        \"operator\": \"in\",\n        \"value\": employee_ids\n    },\n    \"fields\": [\n        \"id\",\n        \"extension\"\n    ]\n}"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {
            "body_get_employees(get_employees)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "65c2fe5a-2e4a-4c95-8a8d-e001d6a07b49",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 960,
        "y": 2685
      },
      "name": "IF - контрагент был создан",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "content = (await context.get_parent_result(\"84352b4c-af5a-48b4-ba84-f09089f25828\"))[\"content\"]\n\nif content:\n    return True\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "6708d884-f784-4253-90cb-a19a181c6f60",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2190,
        "y": 795
      },
      "name": "IF Обновлять доп поля?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "return await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value')",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "67a31455-d48c-446c-acdd-6393080ec5c4",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 60,
        "y": 780
      },
      "name": "Первичность?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "counterparty = await context.get_parent_result(\"05e7a388-c5e8-49c9-9f3e-a04271f037eb\")\r\n\r\nrows = counterparty['rows']\r\nif rows:\r\n    return False\r\n\r\nreturn True",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "67c22291-ff27-46d8-8f33-767b7f4db3b7",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 780,
        "y": 555
      },
      "name": "MoySklad JSON API - создать заказ с доп полями.",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_customer_order",
          "json_body": "import datetime\nimport pytz\n\n# hook ожидание ответа\nhook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))[\"data\"][\"message\"]\n\n# call_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\next_fields = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[46].value\")\n\n\n# контрагент\ncounterparty = (await context.get_parent_result(\"581552ea-715c-45ce-b0bc-ccb63a25f89b\"))\n\n\n\n# Извлекаем ответственного по умолчанию из настроек\ndefault_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\n\n\n\n# id последнего разговаривающего\nlast_employee_id = hook.get(\"last_talked_employee_id\")  \n# id первого разговаривающего\nfirst_employee_id = hook.get(\"first_talked_employee_id\")\n\n# for call_type in call_type_setting:\n#   if call_type[\"direction\"] == \"in\":\n#     responsible = call_type[\"responsible\"]\n#     organization = call_type[\"organization\"]\n#     break\n\nresponsible = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[31].value')\norganization = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[32].value')\n\n\n# Проверка назначения ответственного\nif responsible == 'from_integration':\n  owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\nelif responsible == 'from_call':\n  # Если last_employee_id существует, используем его, иначе default_responsible\n  if last_employee_id:\n    owner_meta = {\n        \"meta\": {\n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{last_employee_id}\",\n            \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n            \"type\": \"employee\",\n            \"mediaType\": \"application/json\"\n        }\n    }\n  else:\n    owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\nelif responsible == 'start_call':\n  if first_employee_id:\n    owner_meta = {\n        \"meta\": {\n          \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{first_employee_id}\",\n          \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n          \"type\": \"employee\",\n          \"mediaType\": \"application/json\"\n        }\n    }\n  else:\n    owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\n\n\n# Генерация уникального имени\ncurrent_time = hook.get(\"start_time\")\n\nbody = {\n          \"name\": f\"Новый заказ по звонку {hook['contact_phone_number']} из UIS {current_time}\",\n          \"owner\": owner_meta,\n          \"organization\": {\n            \"meta\": {\n              \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/organization/{organization}\",\n              \"type\": \"organization\",\n              \"mediaType\": \"application/json\"\n            }\n          },\n          \"agent\": {\n            \"meta\": counterparty[\"meta\"]\n          }\n        }\n\nlist_attributes = []\nif ext_fields:\n  for ext_field in ext_fields:\n    try:\n      # Параметры для создания атрибутов\n      extra_field_name = ext_field['extra_field_name']\n      comagic_parameter = ext_field['comegic_parameter'].strip(' ')\n\n      item_dict = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/customerorder/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(item_dict)\n      \n      # Добавление атрибутов в request_body\n      body[\"attributes\"] = list_attributes\n      \n    except KeyError as e:\n      raise\n      \n    # Добавление атрибутов в request_body\n    body[\"attributes\"] = list_attributes\n\n\nreturn body"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "67f4c6c9-fcb9-4e18-b6c4-2ca6b0deb022",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1455,
        "y": -180
      },
      "name": "CallAPI инициируем звонок",
      "data": {
        "nodeTypeId": "comagic-callapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "create_call",
          "operation": "start.employee_call",
          "body_start_employee_call": "jsn = (await context.get_parent_result(\"e087296f-7eae-4b3c-bea8-33653d86ea0e\"))[\"data\"][0]\nemployee_id = (await context.get_parent_result(\"8d04b199-21af-4185-9ea4-e6fc50b43313\"))[\"data\"][0][\"id\"]\ncontact_phone = (await context.get_parent_result(\"77c06a33-2d37-4f7e-9711-8ad299da3bfd\"))[\"content\"][\"phone\"]\naon_trigger = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[27].value\")\nclick_numbers = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[24].value\")\n\nvn = \"\"\n\nif aon_trigger:\n  vn = click_numbers\nelse:\n  vn = jsn[\"virtual_phone_number\"]\n\n  \nresult = {\n  \"first_call\": \"employee\",\n  \"virtual_phone_number\": vn,\n  \"direction\": \"out\",\n  \"show_virtual_phone_number\": False,\n  \"contact\": contact_phone,\n  \"employee\": {\n    \"id\": employee_id\n    }\n    }\n \nreturn result"
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": {
          "properties": {
            "body_start_employee_call": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "6b151c0d-cef0-4d84-bd9b-7f3a70686733",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1530,
        "y": -1050
      },
      "name": "DataAPI - создать сотрудника",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "operation": "create.employees(create_employees)",
          "body_create_employees(create_employees)": "moysklad_employee = (await context.get_parent_result(\"26262525-8a79-4c0a-8ed1-bc75cf098ff3\"))['rows']\nuis_employee = {}\n\n# Разбивка fullName на Имя, Фамилия, Отчество\nif moysklad_employee.get('fullName'):\n    full_name_parts = moysklad_employee['fullName'].split()\n    \n    if len(full_name_parts) == 3:\n        # Если три части Имя Фамилия Отчество\n        uis_employee['first_name'] = full_name_parts[0]\n        uis_employee['last_name'] = '[МойСклад] ' + full_name_parts[1]\n        uis_employee['patronymic'] = full_name_parts[2]\n\n    elif len(full_name_parts) == 2:\n        # Если две части Имя Фамилия\n        uis_employee['first_name'] = full_name_parts[0]\n        uis_employee['last_name'] = '[МойСклад] ' + full_name_parts[1]\n\n    else:\n        # Если одна Имя / Фамилия \n        uis_employee['last_name'] = '[МойСклад] ' + full_name_parts[0]\nelse:\n    # Если fullName отсутствует, подставляем email как фамилию\n    uis_employee['last_name'] = '[МойСклад] ' + moysklad_employee['email']\n\n# email\nif moysklad_employee.get('email'):\n    uis_employee['email'] = moysklad_employee['email']\n\n# phone_numbers\nif moysklad_employee.get('phone'):\n    phone_number = moysklad_employee['phone'].replace('+', '')\n    uis_employee['phone_numbers'] = [{\n        'phone_number': phone_number\n    }]\n\nreturn uis_employee\n\n"
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": {
          "properties": {
            "body_create_employees(create_employees)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "6b8ee1c7-d966-4a78-bf5a-e4646f7137b7",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 465,
        "y": 705
      },
      "name": "MoySklad JSON API - создаем заказ с доп полями",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_customer_order",
          "json_body": "import datetime\nimport pytz\n\n# hook ожидание ответа\nhook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))[\"data\"][\"message\"]\n\n# call_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\next_fields = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[46].value\")\n\n\n# контрагент\ncounterparty = (await context.get_parent_result(\"05e7a388-c5e8-49c9-9f3e-a04271f037eb\"))['rows'][0]\n\n\n\n# Извлекаем ответственного по умолчанию из настроек\ndefault_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\n\n\n\n# id последнего разговаривающего\nlast_employee_id = hook.get(\"last_talked_employee_id\")  \n# id первого разговаривающего\nfirst_employee_id = hook.get(\"first_talked_employee_id\")\n\n# for call_type in call_type_setting:\n#   if call_type[\"direction\"] == \"in\":\n#     responsible = call_type[\"responsible\"]\n#     organization = call_type[\"organization\"]\n#     break\n\nresponsible = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[34].value')\norganization = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[35].value')\n\n\n# Проверка назначения ответственного\nif responsible == 'from_integration':\n  owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\nelif responsible == 'from_call':\n  # Если last_employee_id существует, используем его, иначе default_responsible\n  if last_employee_id:\n    owner_meta = {\n        \"meta\": {\n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{last_employee_id}\",\n            \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n            \"type\": \"employee\",\n            \"mediaType\": \"application/json\"\n        }\n    }\n  else:\n    owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\nelif responsible == 'from_card':\n  owner_meta = counterparty[\"owner\"]\n\n\n\n# Генерация уникального имени\ncurrent_time = hook.get(\"start_time\")\n\nbody = {\n          \"name\": f\"Новый заказ по звонку {hook['contact_phone_number']} из UIS {current_time}\",\n          \"owner\": owner_meta,\n          \"organization\": {\n            \"meta\": {\n              \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/organization/{organization}\",\n              \"type\": \"organization\",\n              \"mediaType\": \"application/json\"\n            }\n          },\n          \"agent\": {\n            \"meta\": counterparty[\"meta\"]\n          }\n        }\n\nlist_attributes = []\nif ext_fields:\n  for ext_field in ext_fields:\n    try:\n      # Параметры для создания атрибутов\n      extra_field_name = ext_field['extra_field_name']\n      comagic_parameter = ext_field['comegic_parameter'].strip(' ')\n\n      item_dict = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/customerorder/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(item_dict)\n      \n      # Добавление атрибутов в request_body\n      body[\"attributes\"] = list_attributes\n      \n    except KeyError as e:\n      raise\n      \n    # Добавление атрибутов в request_body\n    body[\"attributes\"] = list_attributes\n\n\nreturn body"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "6ce10648-128f-48a7-b3e3-8ed9e59ece59",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1395,
        "y": 180
      },
      "name": null,
      "data": {
        "nodeTypeId": "set-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "values": {
            "number": [],
            "string": [],
            "boolean": [],
            "date_time": [],
            "json_field": [
              {
                "name": "propertyName",
                "value": "jsn = (await context.get_parent_result(\"e01b62ed-7c5d-4cd9-9030-1da968009b3a\"))[\"data\"][0]\nemployee_id = (await context.get_parent_result(\"750dd1ad-58af-4235-b6fc-ff90efba1d0c\"))[\"data\"][0][\"id\"]\ncontact_phone = (await context.get_parent_result(\"8acc2c3e-e126-484c-a224-37875559a292\"))[\"content\"][\"destNumber\"]\n\nresult = {\n  \"first_call\": \"employee\",\n  \"virtual_phone_number\": jsn[\"virtual_phone_number\"],\n  \"direction\": \"out\",\n  \"show_virtual_phone_number\": False,\n  \"contact\": contact_phone,\n  \"employee\": {\n    \"id\": employee_id\n    }\n    }\n\nreturn result"
              }
            ]
          },
          "keep_only_set": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "values➜json_field【0】➜value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "70798b37-50ef-49bb-8809-4ab88fb46a78",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2190,
        "y": 945
      },
      "name": "Redis Сохранить заказ",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\n\nreturn f\"moysklad_order_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "order = (await context.get_parent_result(\"c13c1f4d-571e-476b-9734-4f445c8c5889\"))[\"id\"]\nreturn order",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "71006902-158e-41a7-98f4-4adbf71e662d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1215,
        "y": 2385
      },
      "name": "MoySklad JSON API Получить контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\nphone_number = hook['contact_phone_number']\nreturn f'phone={phone_number}'",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "7290ab1c-753a-4b22-b2cb-03f1906e3338",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -360,
        "y": 225
      },
      "name": "IF - фильтр ВН+ есть ли внутренний номер + фильтр внутренних звонков ",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result(\"440e28d4-94d9-411b-a8dc-c4b6cbe94c1a\"))['data']['message']\n\nfilters_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[28].value')\nfilters_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[29].value')\nfilters_on_off = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].value')\ndirection = jsn['direction']\nis_internal = jsn['is_internal']\n\n\n# настройки фильтра по виртуальным\nif direction == 'in':\n    if not filters_in or filters_on_off == False:\n        return True\n\n\nif direction == 'out':\n    if not filters_out or filters_on_off == False:\n        return True\n\nvirt_number_hook = jsn.get('virtual_phone_number')\nsite_from_hook = jsn.get('site_id')\nscenario_from_hook = jsn.get('scenario_id')\nsource_from_hook = jsn.get('source_id')\ncampaign_from_hook = jsn.get('campaign_id')\n\n\n# Проверяем условия\nif (direction == \"out\" and is_internal == False):\n    condition_flag = True\n    for or_condition in filters_out['conditions']:\n        condition_flag = True\n        if not or_condition.get('conditions'):\n            continue\n        for and_condition in or_condition['conditions']:\n            param = and_condition.get('param')\n            operator = and_condition.get('operator')\n            value = and_condition.get('value')\n                \n                # Проверка virtual_phone_number\n            if param == 'virtual_phone_number':\n                if operator == 'include' and virt_number_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and virt_number_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка site_id\n            if param == 'site_id':\n                if operator == 'include' and site_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and site_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка scenario_id\n            if param == 'scenario_id':\n                if operator == 'include' and scenario_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and scenario_from_hook in value:\n                    condition_flag = False\n                    break\n                \n                # Проверка source_id\n            if param == 'source_id':\n                if operator == 'include' and source_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and source_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка campaign_id\n            if param == 'campaign_id':\n                if operator == 'include' and campaign_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and campaign_from_hook in value:\n                    condition_flag = False\n                    break\n            \n    if condition_flag is True:\n        return True\n\n# Проверяем условия входящий звонок\nif (direction == \"in\" and is_internal == False):\n    condition_flag = True\n    for or_condition in filters_in['conditions']:\n        condition_flag = True\n        if not or_condition.get('conditions'):\n            continue\n        for and_condition in or_condition['conditions']:\n            param = and_condition.get('param')\n            operator = and_condition.get('operator')\n            value = and_condition.get('value')\n                \n                # Проверка virtual_phone_number\n            if param == 'virtual_phone_number':\n                if operator == 'include' and virt_number_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and virt_number_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка site_id\n            if param == 'site_id':\n                if operator == 'include' and site_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and site_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка scenario_id\n            if param == 'scenario_id':\n                if operator == 'include' and scenario_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and scenario_from_hook in value:\n                    condition_flag = False\n                    break\n                \n                # Проверка source_id\n            if param == 'source_id':\n                if operator == 'include' and source_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and source_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка campaign_id\n            if param == 'campaign_id':\n                if operator == 'include' and campaign_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and campaign_from_hook in value:\n                    condition_flag = False\n                    break\n            \n    if condition_flag is True:\n        return True\nreturn False\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "7381d844-e27f-4a97-a360-2e533a08ff39",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 165,
        "y": -195
      },
      "name": "Создавать заказ?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "setting_value = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[33].value')\r\n\r\nif setting_value == 'always':\r\n    return True\r\n\r\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "73991df0-ff24-4cb1-9a50-b9963394be51",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 630,
        "y": 2430
      },
      "name": "Redis Получить заказ",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\nreturn f\"moysklad_order_{hook['call_session_id']}\"",
          "method": "get",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "73af8247-9422-46bf-b90c-074e4fb6452a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 960,
        "y": 1860
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "750dd1ad-58af-4235-b6fc-ff90efba1d0c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1785,
        "y": 255
      },
      "name": "DataAPI - получение id сотрудника",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "in_chunks": false,
          "operation": "get.employees(get_employees)",
          "body_get_employees(get_employees)": "extension = (await context.get_parent_result(\"8acc2c3e-e126-484c-a224-37875559a292\"))[\"content\"][\"srcNumber\"]\n\nresult = {\n  \"filter\": {\n    \"field\": \"extension\",\n    \"operator\": \"jsquery\",\n    \"value\": f'extension_phone_number=\"{extension}\"'\n  },\n  \"fields\": [\n    \"id\"\n    ]\n}\n\nreturn result"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {
            "body_get_employees(get_employees)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "773a7be8-ef24-4b58-833f-9fb96db1d006",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2070,
        "y": 795
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "source_data": "return await context.get_parent_result(\"5c2796fb-3ce1-45f0-8c59-52f7f66afcba\")",
          "is_result_delay": false,
          "set_source_data": true,
          "field_to_split_out": "rows"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "source_data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "77588159-0037-4bd0-8459-6dec0e05fc12",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1185,
        "y": -150
      },
      "name": "MoySklad JSON API - обновляем доп. поля - ТРЕБУЕТСЯ ДОРАБОТКА",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "update_counterparty",
          "json_body": "ext_fields = (await context.get_parent_result(\"426906a5-984a-4487-bbfa-f66d3ea609c7\"))['result']\n\nreturn {\n    \"attributes\": ext_fields\n}",
          "counterparty_id": "return (await context.get_parent_result(\"e65833b5-52f2-4d8d-b57c-97033f03aab8\"))['rows']['id']\r\n\r\n"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            },
            "counterparty_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "77c06a33-2d37-4f7e-9711-8ad299da3bfd",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -1965,
        "y": -270
      },
      "name": null,
      "data": {
        "nodeTypeId": "webhook-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "mode": "flow",
          "headers": [
            {
              "value": "*",
              "header": "Access-Control-Allow-Headers"
            },
            {
              "value": "https://prod-msk-softphone-widget-iframe.novofon.ru",
              "header": "Access-Control-Allow-Origin"
            }
          ],
          "response": "",
          "block_robots": false,
          "response_code": "200",
          "response_when": "straightaway",
          "with_run_context": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "78e44d89-0316-4ac7-abcf-4831a2ced86f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 75,
        "y": -840
      },
      "name": null,
      "data": {
        "nodeTypeId": "marketplace-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "id": "import json\njsn = await context.get_parent_result()\nif \"after\" in jsn:\n    after = json.loads(jsn[\"after\"])\n    return after.get(\"meta_data\", {}).get('marketplace', {}).get('component_installation', {}).get('id', '***')\nreturn \"***\"",
          "data": "import json\njsn = await context.get_parent_result()\n\nflow = await context.get_flow()\nif flow.active:\n    status = {\n        \"message\": \"Интеграция включена\",\n        \"detailed\": {},\n        \"mnemonic\": \"ok\"\n    }\nelse:\n    status = {\n        \"message\": \"Интеграция выключена\",\n        \"detailed\": {},\n        \"mnemonic\": \"unconfigured\"\n    }\n\nresult = {\n            \"icon\": ''' <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"65px\" height=\"65px\" viewBox=\"0 0 65 65\" version=\"1.1\"> <g id=\"surface1\"><path style=\" stroke:none;fill-rule:evenodd;fill:rgb(39.215686%,80.392157%,100%);fill-opacity:1;\" d=\"M 9.441406 56.628906 C 17.5625 56.628906 23.703125 46.054688 29.210938 34.507812 C 31.859375 28.910156 34.328125 23.046875 36.800781 18.074219 C 39.511719 12.5625 42.296875 8.667969 45.699219 8.667969 C 48.589844 8.667969 51.308594 11 54.007812 14.652344 C 59.613281 22.234375 64.457031 35.074219 64.457031 43.5 C 64.457031 50.558594 60.824219 56.628906 53.382812 56.628906 Z M 9.441406 56.628906 \"/> <path style=\" stroke:none;fill-rule:evenodd;fill:rgb(15.686275%,33.333333%,68.627451%);fill-opacity:1;\" d=\"M 29.210938 34.507812 C 23.628906 23.257812 21.105469 15.007812 16.167969 15.007812 C 13.105469 15.007812 9.652344 18.222656 6.523438 23.496094 C 3.175781 29.085938 0.542969 36.976562 0.542969 45.464844 C 0.542969 52.167969 3.820312 56.625 9.441406 56.625 C 17.566406 56.625 23.707031 46.050781 29.210938 34.507812 \"/> </g></svg> ''',\n            \"title\": \"МойСклад\",\n            \"status\": status,\n            \"subtitle\": [],\n            \"summary\": []\n        }\n\nif \"after\" in jsn:\n    after = json.loads(jsn[\"after\"])\n    if after[\"active\"]:\n        subtitle = []\n        cred_id = await context.get_node_settings('//graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key')\n        cred = await context.get_credentials(cred_id)\n        cred_name = cred.name\n        subtitle.append({\"text\": f\"Телефония: {cred_name}\", \"icon_mnemonic\": None})\n\n        result[\"subtitle\"] = subtitle\n\nreturn result",
          "path": "meta_data",
          "resource": "component_installation",
          "operation": "update",
          "set_component_meta": true
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "id": {
              "language": "python"
            },
            "data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "793f8cc2-5c2e-40b5-9187-7ae2ce123825",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 465,
        "y": 870
      },
      "name": "Обновлять поля?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "extra_fields = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[45].value')\r\nif extra_fields:\r\n    return True\r\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "7c3835da-d347-47bd-b1ac-0814b8ad8dba",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1425,
        "y": 2370
      },
      "name": null,
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "id": "content = (await context.get_parent_result(\"73991df0-ff24-4cb1-9a50-b9963394be51\"))['content']\r\n\r\nreturn content",
          "method": "update_customer_order",
          "json_body": "import datetime\r\nimport pytz\r\n\r\n# Проверяем первичный ли заказ\r\ncontent = (await context.get_parent_result(\"84352b4c-af5a-48b4-ba84-f09089f25828\"))[\"content\"]\r\nif content:\r\n  first_message = True\r\nelse:\r\n  first_message =  False\r\n\r\n# hook ожидание ответа\r\nhook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))[\"data\"][\"message\"]\r\n#настройки создания заказа\r\n# call_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\r\n\r\n# контрагент\r\ncounterparty = (await context.get_parent_result(\"71006902-158e-41a7-98f4-4adbf71e662d\"))[\"rows\"][0]\r\n\r\n# # id последнего разговаривающего\r\n# last_employee_id = hook.get(\"last_talked_employee_id\")  \r\ndirection = hook[\"direction\"]\r\n\r\n# Извлекаем ответственного по умолчанию из настроек\r\n\r\nif direction == \"in\":\r\n  default_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[42].value\")\r\nif direction == \"out\":\r\n  default_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\r\n\r\n\r\n\r\n# for call_type in call_type_setting:\r\n#   if call_type[\"direction\"] == direction:\r\n#     responsible = call_type[\"responsible\"]\r\n#     organization = call_type[\"organization\"]\r\nif not first_message and direction == \"in\":\r\n  responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[34].value\")\r\n  organization = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[35].value\")\r\nif not first_message and direction == 'out':\r\n  responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[48].value\")\r\n  organization = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[49].value\")\r\nif first_message and direction == \"in\":\r\n  responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[31].value\")\r\n  organization = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[32].value\")\r\nif first_message and direction == \"out\":\r\n  responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[37].value\")\r\n  organization = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[38].value\")\r\n\r\n\r\n\r\n\r\n\r\n# Проверка назначения ответственного\r\nif responsible == 'from_integration':\r\n  owner_meta = {\r\n      \"meta\": {\r\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\r\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\r\n        \"type\": \"employee\",\r\n        \"mediaType\": \"application/json\"\r\n      }\r\n  }\r\n\r\nelif responsible == 'start_call' or \"from_call\":\r\n  # Получаем данные о сотруднике\r\n  employee_id = (await context.get_parent_result(\"99392bd0-f0ff-49c4-85dc-ee9e9890a13a\"))#[0][\"records\"]\r\n  \r\n  # Проверяем, удалось ли получить ID сотрудника\r\n  if len(employee_id) > 0:\r\n    employee_id = employee_id[0][\"records\"][0][\"data\"][\"moysklad_employee_id\"]\r\n    \r\n    # Если employee_id существует, используем его, иначе default_responsible\r\n  if employee_id:\r\n    owner_meta = {\r\n        \"meta\": {\r\n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{employee_id}\",\r\n            \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\r\n            \"type\": \"employee\",\r\n            \"mediaType\": \"application/json\"\r\n        }\r\n    }\r\n  else:\r\n    owner_meta = {\r\n      \"meta\": {\r\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\r\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\r\n        \"type\": \"employee\",\r\n        \"mediaType\": \"application/json\"\r\n      }\r\n  }\r\n\r\n\r\nelif responsible == 'from_card':\r\n  owner_meta = counterparty[\"owner\"]\r\n\r\n# Генерация уникального имени\r\ncurrent_time = hook.get(\"start_time\")\r\n\r\nbody = {\r\n          \"name\": f\"Новый заказ по звонку {hook['contact_phone_number']} из UIS {current_time}\",\r\n          \"owner\": owner_meta,\r\n          \"organization\": {\r\n            \"meta\": {\r\n              \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/organization/{organization}\",\r\n              \"type\": \"organization\",\r\n              \"mediaType\": \"application/json\"\r\n            }\r\n          },\r\n          \"agent\": {\r\n            \"meta\": counterparty[\"meta\"]\r\n          }\r\n        }\r\n        \r\nreturn body"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "id": {
              "language": "python"
            },
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "7ff545ad-03d7-4909-a9fc-2056d440ebca",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 570,
        "y": 1170
      },
      "name": null,
      "data": {
        "nodeTypeId": "logger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "logs": {
            "log": [
              {
                "line": "parent = (await context.get_parent_result())[\"data\"][\"message\"]\n\ncall_session_id = parent.get(\"call_session_id\") or \"\"\ncontact_phone_number = parent.get(\"contact_phone_number\") or \"\"\nnotification_mnemonic = parent.get(\"notification_mnemonic\")\n\nreturn f\"{notification_mnemonic}, session_id: {call_session_id}, client_phone: {contact_phone_number}\"",
                "level": "INFO"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "logs➜log【0】➜line": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "800fde27-d587-48b2-a94a-9a0cf8a0c569",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 660,
        "y": 855
      },
      "name": "Сформировать доп. поля",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "return await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[45].value')",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "816453a0-1f48-498f-b20f-11337a433310",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2745,
        "y": 795
      },
      "name": "MoySklad Обновляем доп поля",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "update_counterparty",
          "json_body": "ext_fields = (await context.get_parent_result(\"bd964f51-f3b1-4c9e-8ec6-5e3a39e5b706\"))['result']\n\nreturn {\n    \"attributes\": ext_fields\n}",
          "counterparty_id": "return (await context.get_parent_result(\"773a7be8-ef24-4b58-833f-9fb96db1d006\"))['rows']['id']"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            },
            "counterparty_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "83be295c-d314-4741-b4e2-ba6eaf0e88c7",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1770,
        "y": -105
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-debug",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "events": {
            "event_data": [
              {
                "node_id": "440e28d4-94d9-411b-a8dc-c4b6cbe94c1a",
                "message_kwargs": {
                  "contact_phone_number": "79606659289"
                },
                "call_session_id": "return (await context.get_parent_result(\"10136e92-1c32-4a6e-be3f-7ac23a351228\"))[\"result\"]",
                "notification_mnemonic": "call_proceeding"
              },
              {
                "node_id": "247b66f5-0faf-4b99-a8ea-ddcf1408452c",
                "message_kwargs": {
                  "contact_phone_number": "79606659289"
                },
                "call_session_id": "return (await context.get_parent_result(\"10136e92-1c32-4a6e-be3f-7ac23a351228\"))[\"result\"]",
                "notification_mnemonic": "call_session_finished"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "events➜event_data【0】➜call_session_id": {
              "language": "python"
            },
            "events➜event_data【1】➜call_session_id": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "84352b4c-af5a-48b4-ba84-f09089f25828",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 495,
        "y": 2190
      },
      "name": "Получить нового контрагента",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\nreturn f\"moysklad_{hook['call_session_id']}\"",
          "method": "get",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "843b40a4-964d-4a05-afed-a456dbc7fc1c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 255,
        "y": 225
      },
      "name": "MoySklad Phone API - создание звонка",
      "data": {
        "nodeTypeId": "moysklad-phoneapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "body": "jsn = (await context.get_parent_result(\"440e28d4-94d9-411b-a8dc-c4b6cbe94c1a\"))['data']['message']\n\ndef _call_source(type_call):\n  if type_call == 'callapi' or type_call == \"partner_integration\":\n    return 'Звонок с CRM'\n  elif type_call == 'callback':\n    return 'Обратный звонок'\n  elif type_call == 'callout':\n    return 'Звонки через пин-код'\n  elif type_call == 'call_tracking':\n    return 'Аналитика'\n  elif type_call == 'va':\n    return 'Звонок с ВАТС'\n  elif type_call == 'sip':\n    return 'Звонок с SIP линии'\n  elif type_call == 'lead':\n    return 'Звонок с Лидогенератора'\n  elif type_call == 'sitephone':\n    return 'Звонок с Сайтфона'\n  return ''\n\ndef _communication_type(type_comm):\n  if type_comm == 'call':\n    return ''\n  elif type_comm == 'goal':\n    return 'Целевое событие'\n  elif type_comm == 'offline_message':\n    return 'Офлайн заявка'\n  elif type_comm == 'chat':\n    return 'Чат'\n  return ''\n\n\ncomment_call = _communication_type(jsn[\"communication_type\"]) + ' UIS: ' + jsn['virtual_phone_number'] + ' (' + _call_source(jsn[\"call_source\"]) + ')'\n\n\nresult = {\n  \"externalId\": jsn[\"call_session_id\"],\n  \"number\": jsn[\"contact_phone_number\"],\n  \"isIncoming\": True if jsn[\"direction\"] == \"in\" else False,\n  \"startTime\": jsn[\"start_time\"],\n  \"events\": [\n    {\n      \"eventType\": \"SHOW\",\n      \"extension\": jsn[\"extension_phone_number\"],\n      \"sequence\": 1\n    }\n  ],\n  \"comment\": comment_call\n}\n\nreturn result",
          "method": "create_call"
        },
        "credentials": {
          "moysklad_phone_api_key": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key"
        },
        "expressions": {
          "properties": {
            "body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_phone_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "865c033d-bc6c-4f72-844c-311880ded14c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2460,
        "y": 795
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "is_result_delay": false,
          "set_source_data": false,
          "field_to_split_out": "result"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "876c06fc-75e3-4955-bd62-8d8cda35875e",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 660,
        "y": 1290
      },
      "name": "IF - есть ли внутренний номер + фильтр внутренних звонков",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result())['data']['message']\n\nfilters_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[28].value')\nfilters_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[29].value')\nfilters_on_off = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].value')\ndirection = jsn['direction']\nis_internal = jsn['is_internal']\n\n\n# настройки фильтра по виртуальным\nif direction == 'in':\n    if not filters_in or filters_on_off == False:\n        return True\n\n\nif direction == 'out':\n    if not filters_out or filters_on_off == False:\n        return True\n\nvirt_number_hook = jsn.get('virtual_phone_number')\nsite_from_hook = jsn.get('site_id')\nscenario_from_hook = jsn.get('scenario_id')\nsource_from_hook = jsn.get('source_id')\ncampaign_from_hook = jsn.get('campaign_id')\n\n\n# Проверяем условия\nif (direction == \"out\" and is_internal == False):\n    condition_flag = True\n    for or_condition in filters_out['conditions']:\n        condition_flag = True\n        if not or_condition.get('conditions'):\n            continue\n        for and_condition in or_condition['conditions']:\n            param = and_condition.get('param')\n            operator = and_condition.get('operator')\n            value = and_condition.get('value')\n                \n                # Проверка virtual_phone_number\n            if param == 'virtual_phone_number':\n                if operator == 'include' and virt_number_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and virt_number_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка site_id\n            if param == 'site_id':\n                if operator == 'include' and site_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and site_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка scenario_id\n            if param == 'scenario_id':\n                if operator == 'include' and scenario_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and scenario_from_hook in value:\n                    condition_flag = False\n                    break\n                \n                # Проверка source_id\n            if param == 'source_id':\n                if operator == 'include' and source_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and source_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка campaign_id\n            if param == 'campaign_id':\n                if operator == 'include' and campaign_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and campaign_from_hook in value:\n                    condition_flag = False\n                    break\n            \n    if condition_flag is True:\n        return True\n\n# Проверяем условия входящий звонок\nif (direction == \"in\" and is_internal == False):\n    condition_flag = True\n    for or_condition in filters_in['conditions']:\n        condition_flag = True\n        if not or_condition.get('conditions'):\n            continue\n        for and_condition in or_condition['conditions']:\n            param = and_condition.get('param')\n            operator = and_condition.get('operator')\n            value = and_condition.get('value')\n                \n                # Проверка virtual_phone_number\n            if param == 'virtual_phone_number':\n                if operator == 'include' and virt_number_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and virt_number_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка site_id\n            if param == 'site_id':\n                if operator == 'include' and site_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and site_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка scenario_id\n            if param == 'scenario_id':\n                if operator == 'include' and scenario_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and scenario_from_hook in value:\n                    condition_flag = False\n                    break\n                \n                # Проверка source_id\n            if param == 'source_id':\n                if operator == 'include' and source_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and source_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка campaign_id\n            if param == 'campaign_id':\n                if operator == 'include' and campaign_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and campaign_from_hook in value:\n                    condition_flag = False\n                    break\n            \n    if condition_flag is True:\n        return True\nreturn False\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "876c5174-e570-48cf-b771-1544680f3f56",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -150,
        "y": -210
      },
      "name": "Ищем контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\nphone_number = hook['contact_phone_number']\nreturn f'phone={phone_number}'",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "8acc2c3e-e126-484c-a224-37875559a292",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -1980,
        "y": 255
      },
      "name": "Webhook trigger - исходящие звонки",
      "data": {
        "nodeTypeId": "webhook-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "mode": "flow",
          "headers": [],
          "response": "",
          "block_robots": false,
          "response_code": "200",
          "response_when": "straightaway",
          "with_run_context": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "8c52e144-303d-42cc-bda3-4afce1e60a20",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 780,
        "y": 150
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": "jsn = (await context.get_parent_result(\"efb3fd40-7634-4480-94e8-6a22381b1894\"))\n\nif \"id\" in jsn:\n  _id = jsn[\"id\"]\nelse:\n  _id = 0\n\nreturn {\n  \"result\": {\"call_id\": _id},\n  \"error\": None\n}"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "response": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "8d04b199-21af-4185-9ea4-e6fc50b43313",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1815,
        "y": -270
      },
      "name": "Получаем сотрудника",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "in_chunks": false,
          "operation": "get.employees(get_employees)",
          "body_get_employees(get_employees)": "login = (await context.get_parent_result())['content']['login']\n\nreturn {\n  \"filter\": {\n    \"field\": \"login\",\n    \"operator\": \"=\",\n    \"value\": login\n  }\n}"
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": {
          "properties": {
            "body_get_employees(get_employees)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "8d83fa05-160c-4891-b274-3d1bda475357",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 30,
        "y": -630
      },
      "name": "MoySklad Phone API - авторизация",
      "data": {
        "nodeTypeId": "moysklad-phoneapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "get_employee"
        },
        "credentials": {
          "moysklad_phone_api_key": "d8a13fa3-3662-4557-aba2-b9e9bcd0ef16"
        },
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "935af2cf-1ddc-4a6e-bb3a-ed45af87bec3",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -375,
        "y": 990
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "93d2daa4-14eb-4058-9fda-be6debbd3b5a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 405,
        "y": -300
      },
      "name": "MoySklad JSON API - создать заказ",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_customer_order",
          "json_body": "import datetime\nimport pytz\n\n# hook ожидание ответа\nhook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))[\"data\"][\"message\"]\n\n# call_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\next_fields = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[46].value\")\n\n\n# контрагент\ncounterparty = (await context.get_parent_result(\"876c5174-e570-48cf-b771-1544680f3f56\"))['rows'][0]\n\n\n\n# Извлекаем ответственного по умолчанию из настроек\ndefault_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[42].value\")\n\n\n\n# id последнего разговаривающего\nlast_employee_id = hook.get(\"last_talked_employee_id\")  \n# id первого разговаривающего\nfirst_employee_id = hook.get(\"first_talked_employee_id\")\n\n# for call_type in call_type_setting:\n#   if call_type[\"direction\"] == \"in\":\n#     responsible = call_type[\"responsible\"]\n#     organization = call_type[\"organization\"]\n#     break\n\nresponsible = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[34].value')\norganization = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[35].value')\n\n\n# Проверка назначения ответственного\nif responsible == 'from_integration':\n  owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\nelif responsible == 'from_call':\n  # Если last_employee_id существует, используем его, иначе default_responsible\n  if last_employee_id:\n    owner_meta = {\n        \"meta\": {\n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{last_employee_id}\",\n            \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n            \"type\": \"employee\",\n            \"mediaType\": \"application/json\"\n        }\n    }\n  else:\n    owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\nelif responsible == 'from_card':\n  owner_meta = counterparty[\"owner\"]\n\n\n\n# Генерация уникального имени\ncurrent_time = hook.get(\"start_time\")\n\nbody = {\n          \"name\": f\"Новый заказ по звонку {hook['contact_phone_number']} из UIS {current_time}\",\n          \"owner\": owner_meta,\n          \"organization\": {\n            \"meta\": {\n              \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/organization/{organization}\",\n              \"type\": \"organization\",\n              \"mediaType\": \"application/json\"\n            }\n          },\n          \"agent\": {\n            \"meta\": counterparty[\"meta\"]\n          }\n        }\n\nlist_attributes = []\nif ext_fields:\n  for ext_field in ext_fields:\n    try:\n      # Параметры для создания атрибутов\n      extra_field_name = ext_field['extra_field_name']\n      comagic_parameter = ext_field['comegic_parameter'].strip(' ')\n\n      item_dict = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/customerorder/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(item_dict)\n      \n      # Добавление атрибутов в request_body\n      body[\"attributes\"] = list_attributes\n      \n    except KeyError as e:\n      raise\n      \n    # Добавление атрибутов в request_body\n    body[\"attributes\"] = list_attributes\n\n\nreturn body"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -285,
        "y": -630
      },
      "name": "DataAPI - выпадашки",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "vn",
          "in_chunks": false,
          "operation": "get.virtual_numbers(get_virtual_numbers)",
          "body_get_virtual_numbers(get_virtual_numbers)": {}
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "credentials": {}
        }
      },
      "throttling_params": {
        "capacity": 20,
        "time_sec": null,
        "delay": 0,
        "path": null,
        "call_at": null
      },
      "network": "INTERNAL"
    },
    {
      "id": "9681cf26-ac89-42ad-a6b9-b21f8419f800",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": 435,
        "y": 1290
      },
      "name": "Завершение плеча",
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "handle": "return {\"result\": True, \"error\": None}",
          "handle_mode": "graph",
          "event_mnemonic": "call_disconnected",
          "event_conditions": [],
          "event_properties": [
            "gclid",
            "ua_resource_id",
            "ym_counter_id",
            "utm_referrer",
            "yclid",
            "attributes",
            "ppc_auditory",
            "ppc_position_type",
            "visitor_browser_name",
            "visitor_os_version",
            "visitor_browser_version",
            "virtual_phone_number",
            "ppc_gr_ext_id",
            "ppc_pc_ext_id",
            "ppc_kw_ext_id",
            "ppc_ad_ext_id",
            "is_internal",
            "extension_phone_number",
            "notification_timestamp",
            "notification_time",
            "called_phone_number",
            "calling_phone_number",
            "visitor_city",
            "start_time",
            "finish_time",
            "connection_time",
            "wait_time_duration",
            "talk_time_duration",
            "referrer_domain",
            "site_domain_name",
            "session_id",
            "communication_group_id",
            "ppc_gr_id",
            "call_session_id",
            "external_id",
            "ppc_pc_id",
            "app_id",
            "ppc_kw_id",
            "contact_id",
            "communication_id",
            "ppc_ad_id",
            "visitor_first_campaign_id",
            "person_id",
            "openstat_source",
            "ua_client_id",
            "ym_client_id",
            "visitor_id",
            "openstat_ad",
            "campaign_id",
            "openstat_campaign",
            "site_id",
            "openstat_service",
            "transferred_by_employee_id",
            "scenario_id",
            "lead_scenario_id",
            "utm_expid",
            "call_source",
            "referrer",
            "utm_source",
            "source_group",
            "source",
            "utm_medium",
            "channel",
            "source_channel",
            "visitor_properties.calltouch_ctClientId",
            "visitor_properties.calltouch_ctGlobalId",
            "visitor_properties.calltouch_sessionId",
            "visitor_properties.calltouch_siteId",
            "visitor_properties.calltracking_params",
            "visitor_properties.calltracking_params_ctClientId",
            "visitor_properties.calltracking_params_ctGlobalId",
            "visitor_properties.calltracking_params_sessionId",
            "visitor_properties.calltracking_params_siteId",
            "visitor_properties.my_field",
            "visitor_properties.my_field2",
            "visitor_properties.Логин",
            "visitor_properties",
            "ppc_kw_keyword",
            "utm_term",
            "visits_count",
            "cm_id",
            "tag_from",
            "ymclid",
            "ef_id",
            "source_channel_mnemonic",
            "notification_mnemonic",
            "communication_group_name",
            "ppc_gr_name",
            "utm_campaign",
            "ppc_pc_name",
            "ppc_ad_name",
            "visitor_first_campaign_name",
            "tp_project",
            "campaign_name",
            "scenario_name",
            "lead_scenario_name",
            "direction",
            "leg_direction",
            "contact_phone_number",
            "communication_number",
            "employee_phone_number",
            "visitor_os_name",
            "total_time_duration",
            "finish_reason_desc",
            "campaign_description",
            "search_engine",
            "search_query",
            "notification_name",
            "is_transferred",
            "is_operator",
            "is_failed",
            "finish_reason",
            "visitor_screen",
            "eq_utm_campaign",
            "eq_utm_content",
            "eq_utm_expid",
            "eq_utm_medium",
            "eq_utm_referrer",
            "eq_utm_source",
            "eq_utm_term",
            "cpn_region_name",
            "visitor_region",
            "ppc_place",
            "utm_content",
            "contact_group_ids",
            "employee_group_ids",
            "segment_ids",
            "tag_ids",
            "record_file_link",
            "visitor_country",
            "entrance_page",
            "communication_type",
            "visitor_is_new",
            "leg_id",
            "cpn_region_id",
            "employee_id",
            "visitor_device",
            "contact_full_name",
            "employee_full_name",
            "transferred_by_employee_full_name",
            "visitor_language"
          ],
          "is_ready_to_handle": "return {\"result\": True, \"error\": None}",
          "is_ready_to_handle_mode": "code"
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "9769f948-22b7-428d-a09f-109b35b318e1",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 780,
        "y": 300
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": "_id = (await context.get_parent_result(\"843b40a4-964d-4a05-afed-a456dbc7fc1c\"))['id']\n\nreturn {\n  \"result\": {\"call_id\": _id},\n  \"error\": None\n}"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "response": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "99392bd0-f0ff-49c4-85dc-ee9e9890a13a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1050,
        "y": 2385
      },
      "name": "Queue Manager Получаем id сотрудника",
      "data": {
        "nodeTypeId": "queue_manager",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "GET_RECORDS",
          "get_records_data": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\n\n# Проверяем первичный ли заказ\ncontent = (await context.get_parent_result(\"84352b4c-af5a-48b4-ba84-f09089f25828\"))[\"content\"]\nif content:\n    first_message = True\nelse:\n    first_message =  False\n\n\n# call_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\n# ответственный из настроек\n#responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[10].value\")\n\n# id последнего разговаривающего\nlast_employee_id = hook.get(\"last_talked_employee_id\") \nfirst_employee_id = hook.get(\"first_talked_employee_id\") \n\n\ndirection = hook[\"direction\"]\n\n# for call_type in call_type_setting:\n#   if call_type[\"direction\"] == direction:\n#     responsible = call_type[\"responsible\"]\n#     organization = call_type[\"organization\"]\n\n\nif not first_message and direction == \"in\":\n    responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[34].value\")\n\nif not first_message and direction == 'out':\n    responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[48].value\")\n\nif first_message and direction == \"in\":\n    responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[31].value\")\n\nif first_message and direction == \"out\":\n    responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[37].value\")\n\n\n\nif responsible == \"from_call\":\n    employee_id = last_employee_id\nelif responsible == \"start_call\":\n    employee_id = first_employee_id\n\nelse:\n    return [] \n\n    \nreturn [\n    {\n        \"queue_name\": \"moysklad_dataapi_employees_id\",\n        \"limit\": 100,\n        \"filter\": {\n            \"comparison_operator\": \"and\",\n            \"filters\": [\n                {\n                    \"field\": \"dataapi_employee_id\",\n                    \"condition\": \"=\",\n                    \"value\": employee_id\n                },\n            ]\n        }\n    }\n]\n"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "get_records_data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "9985779e-5906-4b6b-b386-073fd47eacae",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1605,
        "y": 945
      },
      "name": "IF Создать заказ?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "# Получаем настройку для создания заказа\ncreate_order_setting = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[7].value')\n\n# Получаем данные о звонке ожидании ответа\nhook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\n\n# Получаем настройку типа звонка (входящий/исходящий)\ncall_type_setting = (await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value'))\n\n# Проверяем активную настройку для создания заказа и соответствие типа звонка\nif create_order_setting:\n    for call_type in call_type_setting:\n        if hook['direction'] == call_type[\"direction\"]:\n            return True\n\n# # Проверяем активную настройку для создания заказа и соответствие типа звонка\n# if create_order_setting: \n#     if hook['direction'] == 'in' and call_type_setting == 'in':\n#         return True\n\n#     elif hook['direction'] == 'out' and call_type_setting == 'out':\n#         return True\n\n\nreturn False\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "9a470b10-20cc-4cd1-a21e-0a8585a226cc",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1935,
        "y": -150
      },
      "name": "Не нашли контрагента?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "counterparty = await context.get_parent_result(\"a64aedfa-2c30-48de-8820-5dff7f9c7d11\")\n\nrows = counterparty['rows']\nif rows:\n    return False\n\nreturn True",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "9ae5b8a7-dea2-4311-8553-95e519b04ecd",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1185,
        "y": 2190
      },
      "name": "MoySklad JSON API Обновляем ответственного",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "update_counterparty",
          "json_body": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\ndirection = hook['direction']\n# Настройки выбора ответственного сотрудника\nif direction == \"in\":\n  responsible_option = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[31].value\")\nif direction == 'out':\n  responsible_option = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[37].value\")\n\n# Извлекаем ответственного по умолчанию из настроек\nif direction == \"in\":\n  default_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[42].value\")\nif direction == \"out\":\n  default_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\n\n# Если в настройках ответственного первый или последний разгов., пытаемся получить ID сотрудника Мойсклад\nif responsible_option == \"start_call\" or responsible_option == \"from_call\":\n  # Получаем данные о сотруднике\n  employee_id = (await context.get_parent_result(\"5fe0b604-aae5-445d-ae3b-b3741acfaa4e\"))[0][\"records\"]\n\n  # Проверяем, удалось ли получить ID сотрудника\n  if len(employee_id) > 0:\n    employee_id = employee_id[0][\"data\"][\"moysklad_employee_id\"]\n\n  # ответственный по умолчанию  \n  else:  \n    employee_id = default_responsible \nelse:  \n  employee_id = default_responsible \n\n \nreturn {\n    \"owner\": {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{employee_id}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\",\n        \"uuidHref\": f\"https://online.moysklad.ru/app/#employee/edit?id={employee_id}\"\n      }\n    }\n  }",
          "counterparty_id": "content = (await context.get_parent_result(\"84352b4c-af5a-48b4-ba84-f09089f25828\"))['content']\n\nreturn content"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            },
            "counterparty_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "9b225197-f940-4e73-afc3-6f9ec1ab51fb",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1395,
        "y": 330
      },
      "name": null,
      "data": {
        "nodeTypeId": "comagic-callapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "create_call",
          "operation": "start.employee_call",
          "body_start_employee_call": "jsn = (await context.get_parent_result(\"e01b62ed-7c5d-4cd9-9030-1da968009b3a\"))[\"data\"][0]\nemployee_id = (await context.get_parent_result(\"750dd1ad-58af-4235-b6fc-ff90efba1d0c\"))[\"data\"][0][\"id\"]\ncontact_phone = (await context.get_parent_result(\"8acc2c3e-e126-484c-a224-37875559a292\"))[\"content\"][\"destNumber\"]\naon_trigger = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[27].value\")\nclick_numbers = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[24].value\")\n\nvn = \"\"\n\nif aon_trigger:\n  vn = click_numbers\nelse:\n  vn = jsn[\"virtual_phone_number\"]\n\n  \nresult = {\n  \"first_call\": \"employee\",\n  \"virtual_phone_number\": vn,\n  \"direction\": \"out\",\n  \"show_virtual_phone_number\": False,\n  \"contact\": contact_phone,\n  \"employee\": {\n    \"id\": employee_id\n    }\n    }\n\nreturn result"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {
            "body_start_employee_call": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "9ea860bb-ffaf-43f4-9e3b-5dc07df866ec",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1455,
        "y": -360
      },
      "name": "Тело запроса",
      "data": {
        "nodeTypeId": "set-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "values": {
            "number": [],
            "string": [],
            "boolean": [],
            "date_time": [],
            "json_field": [
              {
                "name": "propertyName",
                "value": "jsn = (await context.get_parent_result(\"e087296f-7eae-4b3c-bea8-33653d86ea0e\"))[\"data\"][0]\r\nemployee_id = (await context.get_parent_result(\"8d04b199-21af-4185-9ea4-e6fc50b43313\"))[\"data\"][0][\"id\"]\r\ncontact_phone = (await context.get_parent_result(\"77c06a33-2d37-4f7e-9711-8ad299da3bfd\"))[\"content\"][\"phone\"]\r\n \r\nresult = {\r\n  \"first_call\": \"employee\",\r\n  \"virtual_phone_number\": jsn[\"virtual_phone_number\"],\r\n  \"direction\": \"out\",\r\n  \"show_virtual_phone_number\": False,\r\n  \"contact\": contact_phone,\r\n  \"employee\": {\r\n    \"id\": employee_id\r\n    }\r\n    }\r\n \r\nreturn result"
              }
            ]
          },
          "keep_only_set": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "values➜json_field【0】➜value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a0ab3012-c89a-4fda-8b5c-bd8ec42125d1",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2820,
        "y": -150
      },
      "name": "MoySklad Обновляем доп поля",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "update_counterparty",
          "json_body": "ext_fields = (await context.get_parent_result(\"b534897b-cb79-46cd-9f1a-4ca711ad8b07\"))['result']\n\nreturn {\n    \"attributes\": ext_fields\n}",
          "counterparty_id": "return (await context.get_parent_result(\"c8b4f7ae-2a3c-44f9-9b9e-9580ec102e2c\"))['rows']['id']\r\n\r\n"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            },
            "counterparty_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a1a6f289-9ccc-40c6-a183-6be88dd6a56e",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 525,
        "y": -1155
      },
      "name": "IF Синхронизация включена?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "sync_is_on = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[26].value\")\n\nreturn sync_is_on\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a22398d8-22ab-4b10-a8ea-8c00ffbe7cd4",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -420,
        "y": 1950
      },
      "name": "IF - фильтр ВН",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\r\n\r\nfilters_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[28].value')\r\nfilters_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[29].value')\r\nfilters_on_off = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].value')\r\ndirection = jsn['direction']\r\nis_internal = jsn['is_internal']\r\n\r\n\r\n# настройки фильтра по виртуальным\r\nif direction == 'in':\r\n    if not filters_in or filters_on_off == False:\r\n        return True\r\n\r\n\r\nif direction == 'out':\r\n    if not filters_out or filters_on_off == False:\r\n        return True\r\n\r\nvirt_number_hook = jsn.get('virtual_phone_number')\r\nsite_from_hook = jsn.get('site_id')\r\nscenario_from_hook = jsn.get('scenario_id')\r\nsource_from_hook = jsn.get('source_id')\r\ncampaign_from_hook = jsn.get('campaign_id')\r\n\r\n\r\n# Проверяем условия\r\nif (direction == \"out\" and is_internal == False):\r\n    condition_flag = True\r\n    for or_condition in filters_out['conditions']:\r\n        condition_flag = True\r\n        if not or_condition.get('conditions'):\r\n            continue\r\n        for and_condition in or_condition['conditions']:\r\n            param = and_condition.get('param')\r\n            operator = and_condition.get('operator')\r\n            value = and_condition.get('value')\r\n                \r\n                # Проверка virtual_phone_number\r\n            if param == 'virtual_phone_number':\r\n                if operator == 'include' and virt_number_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and virt_number_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n\r\n                # Проверка site_id\r\n            if param == 'site_id':\r\n                if operator == 'include' and site_from_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and site_from_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n\r\n                # Проверка scenario_id\r\n            if param == 'scenario_id':\r\n                if operator == 'include' and scenario_from_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and scenario_from_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n                \r\n                # Проверка source_id\r\n            if param == 'source_id':\r\n                if operator == 'include' and source_from_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and source_from_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n\r\n                # Проверка campaign_id\r\n            if param == 'campaign_id':\r\n                if operator == 'include' and campaign_from_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and campaign_from_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n            \r\n    if condition_flag is True:\r\n        return True\r\n\r\n# Проверяем условия входящий звонок\r\nif (direction == \"in\" and is_internal == False):\r\n    condition_flag = True\r\n    for or_condition in filters_in['conditions']:\r\n        condition_flag = True\r\n        if not or_condition.get('conditions'):\r\n            continue\r\n        for and_condition in or_condition['conditions']:\r\n            param = and_condition.get('param')\r\n            operator = and_condition.get('operator')\r\n            value = and_condition.get('value')\r\n                \r\n                # Проверка virtual_phone_number\r\n            if param == 'virtual_phone_number':\r\n                if operator == 'include' and virt_number_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and virt_number_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n\r\n                # Проверка site_id\r\n            if param == 'site_id':\r\n                if operator == 'include' and site_from_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and site_from_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n\r\n                # Проверка scenario_id\r\n            if param == 'scenario_id':\r\n                if operator == 'include' and scenario_from_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and scenario_from_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n                \r\n                # Проверка source_id\r\n            if param == 'source_id':\r\n                if operator == 'include' and source_from_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and source_from_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n\r\n                # Проверка campaign_id\r\n            if param == 'campaign_id':\r\n                if operator == 'include' and campaign_from_hook not in value:\r\n                    condition_flag = False\r\n                    break\r\n                if operator == 'exclude' and campaign_from_hook in value:\r\n                    condition_flag = False\r\n                    break\r\n            \r\n    if condition_flag is True:\r\n        return True\r\nreturn False\r\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a2951d9c-41e1-4251-ae7b-ae7264ba7665",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 345,
        "y": 1860
      },
      "name": "IF - пропущенный входящий",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\n\nis_lost = jsn[\"is_lost\"]\ndirection = jsn[\"direction\"]\nis_internal = jsn[\"is_internal\"]\n\nif is_lost and not is_internal and direction:\n    return True\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a2b6fa61-fbce-4324-a9d9-8f971ff0eb47",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 300,
        "y": -960
      },
      "name": "UC-Flow - перенос настроек",
      "data": {
        "nodeTypeId": "uc-flow-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "graph",
          "flow": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
          "value": "flow = await context.get_flow()\r\ngraph = flow.graph\r\n\r\nproperties = graph.nodes[\"1562cf9a-ea29-4380-aac5-74bb0dd238f7\"].data.properties\r\n\r\n\r\n# собрать настройки \r\nold_settings = {}\r\nfor field in properties[\"values\"][\"json_field\"]:\r\n    old_settings.update({field[\"name\"]: field})\r\n\r\ndef check_and_change(new_name, new_value):\r\n    temp = old_settings.get(new_name)\r\n    temp[\"value\"] = new_value\r\n\r\ndef get_value_by_id(id: int):\r\n  return properties[\"values\"][\"json_field\"][id]['value']\r\n\r\ndef getter(name):\r\n    temp = old_settings.get(name)\r\n    if temp[\"value\"]:\r\n        return temp[\"value\"]\r\n    else:\r\n        return \"\"\r\n# Перенос поля ответсnвенный по умолчанию. ------------------------\r\nold_value = get_value_by_id(3)\r\ncheck_and_change('Ответсвенный по умолчанию(ответственыые исх)', old_value)\r\n# --------------------------------------------------------------------------------------\r\n\r\n\r\n# Пример фильтра в настройках\r\n{\r\n  \"isGroup\": True,\r\n  \"operator\": \"or\",\r\n  \"conditions\": [\r\n    {\r\n      \"isGroup\": True,\r\n      \"operator\": \"and\",\r\n      \"conditions\": [\r\n        {\r\n          \"param\": \"virtual_phone_number\",\r\n          \"value\": [\r\n            \"74950236854\",\r\n            \"74950323706\",\r\n            \"74950327466\",\r\n            \"74950850588\"\r\n          ],\r\n          \"operator\": \"include\",\r\n          \"isCondition\": True\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n# Перенос фильтра виртульных номеров. ---------------------------------\r\nold_value = getter('Создавать контрагента')\r\n\r\nresult_filter = {\r\n  \"isGroup\": True,\r\n  \"operator\": \"or\",\r\n  \"conditions\": [\r\n    {\r\n      \"isGroup\": True,\r\n      \"operator\": \"and\",\r\n      \"conditions\": [\r\n        {\r\n          \"param\": \"1\",\r\n          \"value\": old_value,\r\n          \"operator\": 'include',\r\n          \"isCondition\": True\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\ncheck_and_change('Фильтр входящих', result_filter)\r\ncheck_and_change(' Фильтр исходящих', result_filter)\r\n# -----------------------------------------------------------------\r\n\r\n# Заполнение полей контрагента и заказа----------------------------------\r\nold_value_counterparty = getter('Назначить ответственного')\r\nold_value_order = getter('Создавать заказ')\r\norder_collection_value = getter(\"Тип звонка\")\r\nold_employee_on = get_value_by_id(6)\r\n\r\nreplace = {\r\n  \"first_speak\": \"start_call\",\r\n  \"last_speak\": \"from_call\",\r\n  \"default_responsible\": \"from_integration\"\r\n}\r\nreplace_2 = {\r\n  \"first_speak\": \"from_call\",\r\n  \"last_speak\": \"from_call\",\r\n  \"default_responsible\": \"from_integration\"\r\n}\r\n\r\nif not old_value_counterparty:\r\n  check_and_change('Первичные обращения', \"none\")\r\n  check_and_change('Первичные обращения(исх)', \"none\")\r\n\r\nelif old_value_counterparty and old_value_order:\r\n  if order_collection_value:\r\n    for collect in order_collection_value:\r\n      if collect.get('direction', '') == 'in':\r\n        check_and_change('Первичные обращения', \"сounterparty and order\")\r\n        check_and_change('Юридическое лицо', collect['organization'])\r\n        check_and_change('Создавать на сотрудника', replace[old_employee_on])\r\n\r\n      if collect.get('direction', '') == 'out':\r\n        check_and_change('Первичные обращения(исх)', \"сounterparty and order\")\r\n        check_and_change('Создавать на сотрудника(исходящие)', replace_2[old_employee_on])\r\n        check_and_change('Юридическое лицо(исходящие)', collect['organization'])\r\n  else:\r\n    if old_value_counterparty:\r\n      check_and_change('Первичные обращения', \"сounterparty\")\r\n      check_and_change('Создавать на сотрудника', replace[old_employee_on])\r\n      check_and_change('Первичные обращения(исх)', \"сounterparty\")\r\n      check_and_change('Создавать на сотрудника(исходящие)', replace_2[old_employee_on])\r\nelif old_value_counterparty:\r\n      check_and_change('Первичные обращения', \"сounterparty\")\r\n      check_and_change('Создавать на сотрудника', replace[old_employee_on])\r\n      check_and_change('Первичные обращения(исх)', \"сounterparty\")\r\n      check_and_change('Создавать на сотрудника(исходящие)', replace_2[old_employee_on])\r\n\r\n# ------------------------------------------\r\n\r\n# Перенос блока задачи. ----------------------\r\n# При входящих звонках\r\nold_value_checkbox = get_value_by_id(12) \r\nold_options = get_value_by_id(13)\r\nold_hours = get_value_by_id(15)\r\n\r\nreplace = {\r\n  'default_responsible':'from_settings',\r\n  'from_contact_card':'from_card'\r\n}\r\n\r\nif not old_value_checkbox:\r\n  check_and_change('Потерянный звонок', 'none')\r\nelse:\r\n  check_and_change('Потерянный звонок', replace[old_options])\r\n\r\ncheck_and_change('Срок действия задачи(вх)', old_hours)\r\n# При исходящих звонках\r\nold_value_checkbox_ = get_value_by_id(16) \r\nold_options_ = get_value_by_id(17)\r\nold_hours_ = get_value_by_id(19)\r\n\r\nif not old_value_checkbox_:\r\n  check_and_change('Неуспешный исходящий', 'none')\r\nelse:\r\n  check_and_change('Неуспешный исходящий', replace[old_options_])\r\n\r\ncheck_and_change('Срок действия задачи(исх)', old_hours_)\r\n\r\n# -------------------------------------------------------------------\r\n\r\n# Передавть дополнительные поля\r\n\r\nold_checkbox = get_value_by_id(22)\r\nold_collections = get_value_by_id(23)\r\n\r\nif old_checkbox and old_collections:\r\n  check_and_change('Для контрагентов', old_collections)\r\n\r\n# -----------------------------------------------------------------\r\n\r\n\r\nproperties[\"values\"][\"json_field\"] = list(old_settings.values())\r\n\r\nreturn graph",
          "resource": "flow",
          "operation": "update_flow"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a3fc8cfd-653b-4c27-afba-501cf074d96f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1140,
        "y": 870
      },
      "name": null,
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "update_counterparty",
          "json_body": "ext_fields = (await context.get_parent_result(\"0a5f69e3-32fd-42e7-9ced-de4a589271b5\"))['result']\n\nreturn {\n    \"attributes\": ext_fields\n}",
          "counterparty_id": "return (await context.get_parent_result(\"b311afde-3bef-4c32-83cf-8f33272aac54\"))['rows']['id']\r\n\r\n"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            },
            "counterparty_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a501d4da-730b-4f75-9533-452a56af807b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 765,
        "y": -405
      },
      "name": "MoySklad JSON API - создать заказ.",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_customer_order",
          "json_body": "import datetime\nimport pytz\n\n# hook ожидание ответа\nhook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))[\"data\"][\"message\"]\n\n# call_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\next_fields = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[46].value\")\n\n\n# контрагент\ncounterparty = (await context.get_parent_result(\"3c8190ef-e586-4561-8b05-14d082f5e4a5\"))\n\n# [\n#   {\n#     \"isGroup\": true,\n#     \"operator\": \"or\",\n#     \"responsible_employee\": \"7a117fdd-f821-11ef-0a80-1838001ebb4f\",\n#     \"filter_employee\": {\n#       \"isGroup\": true,\n#       \"operator\": \"or\",\n#       \"conditions\": [\n#         {\n#           \"isGroup\": true,\n#           \"operator\": \"and\",\n#           \"conditions\": [\n#             {\n#               \"isCondition\": true,\n#               \"param\": \"virtual_phone_number\",\n#               \"operator\": \"include\",\n#               \"value\": [\n#                 470715,\n#                 996602,\n#                 1401706\n#               ]\n#             }\n#           ]\n#         }\n#       ]\n#     }\n#   }\n# ]\n# Извлекаем ответственного по умолчанию из настроек\ndefault_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[42].value\")\nfilter_employee = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[43].value\")\nif filter_employee:\n  for flt_emply in filter_employee:\n    flt_conditions = flt_emply.get(\"filter_employee\")\n\n    if not flt_conditions:\n      continue\n\n    for or_condition in flt_conditions['conditions']:\n      condition_flag = True\n      for and_condition in or_condition['conditions']:\n        param = and_condition.get('param')\n        operator = and_condition.get('operator')\n        value = and_condition.get('value')\n\n          # Проверка site_id\n        if param == 'site_id':\n          if operator == 'include' and site_from_hook not in value:\n            condition_flag = False\n            break\n          if operator == 'exclude' and site_from_hook in value:\n            condition_flag = False\n            break\n\n          # Проверка source_id\n        if param == 'source':\n          if operator == 'include' and source_from_hook not in value:\n            condition_flag = False\n            break\n          if operator == 'exclude' and source_from_hook in value:\n            condition_flag = False\n            break\n\n          # Проверка campaign_id\n        if param == 'campaign_id':\n          if operator == 'include' and campaign_from_hook not in value:\n            condition_flag = False\n            break\n          if operator == 'exclude' and campaign_from_hook in value:\n            condition_flag = False\n            break\n          \n        if and_condition['param'] == 'req_type':\n          if and_condition['operator'] == 'include':\n            if req_type_from_hook not in and_condition['value']:\n              condition_flag = False\n              break\n          if and_condition['operator'] == 'exclude':\n            if req_type_from_hook in and_condition['value']:\n              condition_flag = False\n              break\n\n      if condition_flag is True:\n        default_responsible = flt_emply.get(\"responsible_employee\")\n\n\n\n\n# id последнего разговаривающего\nlast_employee_id = hook.get(\"last_talked_employee_id\")  \n# id первого разговаривающего\nfirst_employee_id = hook.get(\"first_talked_employee_id\")\n\n# for call_type in call_type_setting:\n#   if call_type[\"direction\"] == \"in\":\n#     responsible = call_type[\"responsible\"]\n#     organization = call_type[\"organization\"]\n#     break\n\nresponsible = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[31].value')\norganization = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[32].value')\n\n\n# Проверка назначения ответственного\nif responsible == 'from_integration':\n  owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\nelif responsible == 'from_call':\n  # Если last_employee_id существует, используем его, иначе default_responsible\n  if last_employee_id:\n    owner_meta = {\n        \"meta\": {\n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{last_employee_id}\",\n            \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n            \"type\": \"employee\",\n            \"mediaType\": \"application/json\"\n        }\n    }\n  else:\n    owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\nelif responsible == 'start_call':\n  if first_employee_id:\n    owner_meta = {\n        \"meta\": {\n          \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{first_employee_id}\",\n          \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n          \"type\": \"employee\",\n          \"mediaType\": \"application/json\"\n        }\n    }\n  else:\n    owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\n\n\n# Генерация уникального имени\ncurrent_time = hook.get(\"start_time\")\n\nbody = {\n          \"name\": f\"Новый заказ по звонку {hook['contact_phone_number']} из UIS {current_time}\",\n          \"owner\": owner_meta,\n          \"organization\": {\n            \"meta\": {\n              \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/organization/{organization}\",\n              \"type\": \"organization\",\n              \"mediaType\": \"application/json\"\n            }\n          },\n          \"agent\": {\n            \"meta\": counterparty[\"meta\"]\n          }\n        }\n\nlist_attributes = []\nif ext_fields:\n  for ext_field in ext_fields:\n    try:\n      # Параметры для создания атрибутов\n      extra_field_name = ext_field['extra_field_name']\n      comagic_parameter = ext_field['comegic_parameter'].strip(' ')\n\n      item_dict = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/customerorder/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(item_dict)\n      \n      # Добавление атрибутов в request_body\n      body[\"attributes\"] = list_attributes\n      \n    except KeyError as e:\n      raise\n      \n    # Добавление атрибутов в request_body\n    body[\"attributes\"] = list_attributes\n\n\nreturn body"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a64aedfa-2c30-48de-8820-5dff7f9c7d11",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1800,
        "y": -150
      },
      "name": "MoySklad JSON API Получаем контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\nphone_number = hook['contact_phone_number']\nreturn f'phone={phone_number}'",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a6b3921c-8540-4334-9d0f-fb7506638380",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -240,
        "y": -945
      },
      "name": null,
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "vanin_flow = await context.get_parent_result(\"5489ce33-972c-429f-bd0a-5453678e18f8\")\r\nnew_wizard = vanin_flow['wizard']\r\n\r\n# 9182a887-6e61-454a-b133-fb1b57de5d29 - id node-settings in test_flow\r\n# 1562cf9a-ea29-4380-aac5-74bb0dd238f7 - node settings in this flow\r\nresult = []\r\n\r\ndef replace_in_json(data, old: str, new: str):\r\n    \"\"\"\r\n    Рекурсивно заменяет все вхождения `old` на `new` в строковых значениях словаря/списка.\r\n    Изменяет структуру на месте.\r\n    \"\"\"\r\n    if isinstance(data, dict):\r\n        for key, value in data.items():\r\n            if isinstance(value, str):\r\n                data[key] = value.replace(old, new)\r\n            else:\r\n                replace_in_json(value, old, new)\r\n    elif isinstance(data, list):\r\n        for i in range(len(data)):\r\n            if isinstance(data[i], str):\r\n                data[i] = data[i].replace(old, new)\r\n            else:\r\n                replace_in_json(data[i], old, new)\r\n\r\ndef get_items(properties):\r\n    if properties[\"properties\"].get(\"items\"):\r\n        for item in properties[\"properties\"][\"items\"]:\r\n            get_items(item)\r\n    result.append(properties)\r\n\r\nfor item in new_wizard:\r\n    get_items(item)\r\n\r\n# \"displayOptions\": {\r\n#                   \"show\": {\r\n#                     \"//graph.nodes.9182a887-6e61-454a-b133-fb1b57de5d29.data.properties.values.json_field[1].name\": [\r\n#                       true\r\n#                     ]\r\n#                   }\r\n#                 }\r\ndef replace_in_show(old_show: dict[str, list[str]]):\r\n    for key in old_show.keys():\r\n        old_key = key\r\n        new_key = key.replace(\"9182a887-6e61-454a-b133-fb1b57de5d29\", \"1562cf9a-ea29-4380-aac5-74bb0dd238f7\")\r\n        break\r\n    \r\n    new_show = {\r\n        new_key: old_show[old_key]\r\n    }\r\n    return new_show\r\n\r\n\r\ndef replace_id_node():\r\n    for item in result:\r\n        for key, val in item.items():\r\n            if isinstance(val, str):\r\n                new_val = val.replace(\"9182a887-6e61-454a-b133-fb1b57de5d29\", \"1562cf9a-ea29-4380-aac5-74bb0dd238f7\")\r\n                new_val = new_val.replace(\"fe2f2856-7321-468b-b266-23187b11bfdb\", \"331efcb4-17df-4cc8-a582-cf113c4cae9b\")\r\n                item[key] = new_val\r\n            if key == 'properties':\r\n                if item['properties'].get('id'):\r\n                    item[key]['id'] = item[key]['id'].replace(\"fe2f2856-7321-468b-b266-23187b11bfdb\", \"331efcb4-17df-4cc8-a582-cf113c4cae9b\")\r\n                if item['properties'].get('displayOptions'):\r\n                    if item['properties'].get('displayOptions').get('show'):\r\n                        item['properties']['displayOptions']['show'] = replace_in_show(item['properties']['displayOptions']['show'])\r\n\r\n\r\n# context.get_parent_result(\"fe2f2856-7321-468b-b266-23187b11bfdb\") - id авторизации из прошлого визарда\r\n# context.get_parent_result(\"331efcb4-17df-4cc8-a582-cf113c4cae9b\") - id из этого визарда\r\n\r\n# context.get_parent_result(\"c82f0ea2-f62e-4af3-805a-9f56e0dbea36\") - id выпадашки из тестого флоу\r\n# context.get_parent_result(\"399f54c4-3b11-4573-86b6-40dff81c2c0c\") - id выпадашки из этого флоу\r\n\r\n# context.get_parent_result(\"f69cf777-887c-4b6a-94d6-ed8e744da976\") - id выпадашки из тестого флоу\r\n# context.get_parent_result(\"9592ae59-4e91-44d7-926a-9ac0dfa75349\") - id выпадашки из этого флоу\r\n\r\n# context.get_parent_result(\"58c07fb5-8ab5-439a-8a17-9801a798bd10\") - id авторизации по звонкам\r\n# context.get_parent_result(\"8d83fa05-160c-4891-b274-3d1bda475357\") - id авторизации по звонкам этого флоу\r\n\r\nreplace_id_node()\r\nreplace_in_json(new_wizard, \"c82f0ea2-f62e-4af3-805a-9f56e0dbea36\", \"399f54c4-3b11-4573-86b6-40dff81c2c0c\")\r\nreplace_in_json(new_wizard, \"f69cf777-887c-4b6a-94d6-ed8e744da976\", \"9592ae59-4e91-44d7-926a-9ac0dfa75349\")\r\nreplace_in_json(new_wizard, \"58c07fb5-8ab5-439a-8a17-9801a798bd10\", \"8d83fa05-160c-4891-b274-3d1bda475357\")\r\nreplace_in_json(new_wizard, \"e9ecd6f3-2ef5-404e-9404-cf2e52952661\", \"8acc2c3e-e126-484c-a224-37875559a292\")\r\n\r\n\r\nreturn new_wizard\r\n",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a732d042-1d6b-4747-b588-7f01fd032653",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 900,
        "y": 1380
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a833b721-1046-403a-8782-155957c5bca2",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -120,
        "y": 615
      },
      "name": "MoySklad Phone API - создание исходящего",
      "data": {
        "nodeTypeId": "moysklad-phoneapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "body": "jsn = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\n\ndef _call_source(type_call):\n  if type_call == 'callapi' or type_call == \"partner_integration\":\n    return 'Звонок с CRM'\n  elif type_call == 'callback':\n    return 'Обратный звонок'\n  elif type_call == 'callout':\n    return 'Звонки через пин-код'\n  elif type_call == 'call_tracking':\n    return 'Аналитика'\n  elif type_call == 'va':\n    return 'Звонок с ВАТС'\n  elif type_call == 'sip':\n    return 'Звонок с SIP линии'\n  elif type_call == 'lead':\n    return 'Звонок с Лидогенератора'\n  elif type_call == 'sitephone':\n    return 'Звонок с Сайтфона'\n  return ''\n\ndef _communication_type(type_comm):\n  if type_comm == 'call':\n    return ''\n  elif type_comm == 'goal':\n    return 'Целевое событие'\n  elif type_comm == 'offline_message':\n    return 'Офлайн заявка'\n  elif type_comm == 'chat':\n    return 'Чат'\n  return ''\n\n\ncomment_call = 'Исходящий.' + _communication_type(jsn[\"communication_type\"]) + ' UIS: ' + jsn['virtual_phone_number'] + ' (' + _call_source(jsn[\"call_source\"]) + ')'\n\n\nresult = {\n  \"externalId\": jsn[\"call_session_id\"],\n  \"number\": jsn[\"contact_phone_number\"],\n  \"isIncoming\": False,\n  \"startTime\": jsn[\"start_time\"],\n  \"events\": [\n    {\n      \"eventType\": \"SHOW\",\n      \"extension\": jsn[\"extension_phone_number\"],\n      \"sequence\": 1\n    }\n  ],\n  \"comment\": comment_call\n}\n\nreturn result",
          "method": "create_call"
        },
        "credentials": {
          "moysklad_phone_api_key": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key"
        },
        "expressions": {
          "properties": {
            "body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_phone_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "a8f28c6d-a066-46d2-b7fa-0299bb83c74f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1245,
        "y": -1035
      },
      "name": null,
      "data": {
        "nodeTypeId": "personal-manager-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "id": 0,
          "email": "counterparty = (await context.get_parent_result(\"d1966969-7aff-4610-ac65-aa4291bc0337\"))[\"rows\"][0]\nemployees = (await context.get_parent_result(\"fe5578cf-2f70-404d-99b8-65202258a2c4\"))[\"rows\"]\nowner = counterparty[\"owner\"][\"meta\"][\"href\"]\n\nemail = None\n\nfor employee in employees:\n  if employee[\"meta\"][\"href\"] == owner:\n    email = employee[\"email\"]\n    break\n\nreturn email",
          "field": "email"
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": {
          "properties": {
            "email": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "aa0b3f1a-8a99-4ea3-b8ed-7d52fc59820f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1635,
        "y": -150
      },
      "name": "Создавать контрагента?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "return await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[5].value')",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "aefc0f76-1ac8-406d-958b-8b5f52b6b755",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1800,
        "y": -30
      },
      "name": "Ждем создания контрагента при первичном обращении",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "import asyncio\r\nreturn await asyncio.sleep(1)",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "b07dd7b1-8ba7-44b3-a177-da43b75c015b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -105,
        "y": 1170
      },
      "name": "MoySklad Phone API - начало разговора",
      "data": {
        "nodeTypeId": "moysklad-phoneapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "body": "import time\njsn = (await context.get_parent_result(\"f30159ee-de80-4772-bd03-d86a5063a8de\"))['data']['message']\nsequence = int(time.time()*100000)\n\nresult = {\n  \"events\": [\n    {\n      \"eventType\": \"STARTTIME\",\n      \"extension\": jsn[\"extension_phone_number\"],\n      \"sequence\": sequence\n    }\n  ]\n}\n\nreturn result",
          "ext_id": "return (await context.get_parent_result(\"f30159ee-de80-4772-bd03-d86a5063a8de\"))['data']['message'][\"call_session_id\"]\n",
          "method": "update_call_extid"
        },
        "credentials": {
          "moysklad_phone_api_key": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key"
        },
        "expressions": {
          "properties": {
            "body": {
              "language": "python"
            },
            "ext_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_phone_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "b278d9d2-6687-4638-89ba-570ef1fec46a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 960,
        "y": -390
      },
      "name": null,
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\n\nreturn f\"moysklad_order_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "order = (await context.get_parent_result(\"a501d4da-730b-4f75-9533-452a56af807b\"))[\"id\"]\nreturn order",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "b311afde-3bef-4c32-83cf-8f33272aac54",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 285,
        "y": 870
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "source_data": "return await context.get_parent_result(\"05e7a388-c5e8-49c9-9f3e-a04271f037eb\")",
          "is_result_delay": false,
          "set_source_data": true,
          "field_to_split_out": "rows"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "source_data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "b3bd71a4-cc0d-4a41-937e-4ab23d0f1709",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 810,
        "y": 2430
      },
      "name": "IF Существует заказ?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "content = (await context.get_parent_result(\"73991df0-ff24-4cb1-9a50-b9963394be51\"))[\"content\"]\n\nif content:\n    return True\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "b3d6189c-56a9-486e-8f2b-67e05f680dc6",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -555,
        "y": 1845
      },
      "name": null,
      "data": {
        "nodeTypeId": "logger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "logs": {
            "log": [
              {
                "line": "parent = (await context.get_parent_result())[\"data\"][\"message\"]\n\ncall_session_id = parent.get(\"call_session_id\") or \"\"\ncontact_phone_number = parent.get(\"contact_phone_number\") or \"\"\nnotification_mnemonic = parent.get(\"notification_mnemonic\")\n\nreturn f\"{notification_mnemonic}, session_id: {call_session_id}, client_phone: {contact_phone_number}\"",
                "level": "INFO"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "logs➜log【0】➜line": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "b3de852a-b593-4d1e-9f69-1824300b5f66",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1905,
        "y": 945
      },
      "name": "MoySklad JSON API Получить контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\nphone_number = hook['contact_phone_number']\nreturn f'phone={phone_number}'",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "b534897b-cb79-46cd-9f1a-4ca711ad8b07",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2670,
        "y": -150
      },
      "name": "Обновляем доп поля",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))[\"data\"][\"message\"]\next_field_triger = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value\")\next_field = (await context.get_parent_result(\"c59e02d0-c623-4974-8b35-35850b13ed02\"))['result']\nlist_attributes = []\n\n# Вкл передача полей и поля заполнены\nif ext_field_triger and ext_field:\n  \n    # Параметры для создания атрибутов\n    extra_field_name = ext_field['extra_field_name']\n    comagic_parameter = ext_field['comagic_parameter'].strip(' ')\n    if ext_field['update_always']:\n      new_ext_field = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(new_ext_field)\n\nreturn list_attributes\n\n\n# [\n#   {\n#     \"update_always\": false,\n#     \"extra_field_name\": \"43e71cfd-7737-11ef-0a80-1145000c8c26\",\n#     \"comagic_parameter\": \"site_domain_name\"\n#   }\n# ]",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "b57bda50-9e79-4814-afc6-abd851affed9",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2235,
        "y": -30
      },
      "name": "Redis Сохранить Заказ",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\n\nreturn f\"moysklad_order_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "order = (await context.get_parent_result(\"166cf3f5-f201-4922-a35a-6b7ed965b8d6\"))[\"id\"]\nreturn order",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "bd964f51-f3b1-4c9e-8ec6-5e3a39e5b706",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2595,
        "y": 795
      },
      "name": "Обновляем доп поля",
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))[\"data\"][\"message\"]\next_field_triger = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value\")\next_field = (await context.get_parent_result(\"865c033d-bc6c-4f72-844c-311880ded14c\"))['result']\n\nlist_attributes = []\n\n# Вкл передача полей и поля заполнены\nif ext_field_triger and ext_field:\n  \n    # Параметры для создания атрибутов\n    extra_field_name = ext_field['extra_field_name']\n    comagic_parameter = ext_field['comagic_parameter'].strip(' ')\n    if ext_field['update_always']:\n      new_ext_field = {\n        \"meta\":{  \n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/counterparty/metadata/attributes/{extra_field_name}\",\n            \"type\": \"attributemetadata\",\n            \"mediaType\": \"application/json\"\n          },     \n        \"type\": \"string\",\n        \"value\": hook[comagic_parameter]\n      }\n      list_attributes.append(new_ext_field)\n\nreturn list_attributes\n\n\n# [\n#   {\n#     \"update_always\": false,\n#     \"extra_field_name\": \"43e71cfd-7737-11ef-0a80-1145000c8c26\",\n#     \"comagic_parameter\": \"site_domain_name\"\n#   } \n# ]\n",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "bf939d96-ec74-4096-8570-c26c2b54de82",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1245,
        "y": 330
      },
      "name": null,
      "data": {
        "nodeTypeId": "logger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "logs": {
            "log": [
              {
                "line": "parent = (await context.get_parent_result())[\"data\"]\n\ncall_session_id = parent.get(\"call_session_id\") or \"\"\n\nreturn f\"Исход по клику, call_session: {call_session_id}\"",
                "level": "INFO"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "logs➜log【0】➜line": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c13c1f4d-571e-476b-9734-4f445c8c5889",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2070,
        "y": 945
      },
      "name": "MoySklad JSON API Создать Заказ",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_customer_order",
          "json_body": "import datetime\nimport pytz\n\n# hook ожидание ответа\nhook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))[\"data\"][\"message\"]\n\ncall_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\n\n# контрагент\ncounterparty = (await context.get_parent_result(\"b3de852a-b593-4d1e-9f69-1824300b5f66\"))[\"rows\"][0]\n\n\n# Извлекаем ответственного по умолчанию из настроек\ndefault_responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\n\n# id последнего разговаривающего\nlast_employee_id = hook.get(\"last_talked_employee_id\")  \n\n\nfor call_type in call_type_setting:\n  if call_type[\"direction\"] == \"out\":\n    responsible = call_type[\"responsible\"]\n    organization = call_type[\"organization\"]\n    break\n\n\n\n# Проверка назначения ответственного\nif responsible == 'default_responsible':\n  owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\nelif responsible == 'last_speak':\n  # Если last_employee_id существует, используем его, иначе default_responsible\n  if last_employee_id:\n    owner_meta = {\n        \"meta\": {\n            \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{last_employee_id}\",\n            \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n            \"type\": \"employee\",\n            \"mediaType\": \"application/json\"\n        }\n    }\n  else:\n    owner_meta = {\n      \"meta\": {\n        \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n        \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n        \"type\": \"employee\",\n        \"mediaType\": \"application/json\"\n      }\n  }\n\n\nelif responsible == 'from_contact_card':\n  owner_meta = counterparty[\"owner\"]\n\n# Генерация уникального имени\ncurrent_time = hook.get(\"start_time\")\n\nbody = {\n          \"name\": f\"Новый заказ по звонку {hook['contact_phone_number']} из UIS {current_time}\",\n          \"owner\": owner_meta,\n          \"organization\": {\n            \"meta\": {\n              \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/organization/{organization}\",\n              \"type\": \"organization\",\n              \"mediaType\": \"application/json\"\n            }\n          },\n          \"agent\": {\n            \"meta\": counterparty[\"meta\"]\n          }\n        }\n        \nreturn body"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c1889b1a-7c1e-481f-b251-ba5bc3fddb10",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 600,
        "y": 555
      },
      "name": "Создавать заказ?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "settings_value = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[36].value')\r\n\r\nif settings_value == 'сounterparty and order':\r\n    return True\r\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c24e033e-ab4e-4fc8-b1eb-9c899416a293",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 900,
        "y": 1170
      },
      "name": "MoySklad Phone API - завершение плеча",
      "data": {
        "nodeTypeId": "moysklad-phoneapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "body": "import time\n\njsn = (await context.get_parent_result(\"9681cf26-ac89-42ad-a6b9-b21f8419f800\"))['data']['message']\nsequence = int(time.time()*100000)\n\nresult = {\n  \"events\": [\n    {\n      \"eventType\": \"HIDE\",\n      \"extension\": jsn[\"extension_phone_number\"],\n      \"sequence\": sequence\n    }\n  ]\n}\n\nreturn result",
          "ext_id": "return (await context.get_parent_result(\"9681cf26-ac89-42ad-a6b9-b21f8419f800\"))['data']['message'][\"call_session_id\"]",
          "method": "update_call_extid"
        },
        "credentials": {
          "moysklad_phone_api_key": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key"
        },
        "expressions": {
          "properties": {
            "body": {
              "language": "python"
            },
            "ext_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_phone_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c4206919-d635-41ed-92d0-41cb80bce475",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 915,
        "y": -1155
      },
      "name": "IF У сотрудника Moysklad есть email?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "email_data = (await context.get_parent_result(\"26262525-8a79-4c0a-8ed1-bc75cf098ff3\"))\n\n# Проверка, что 'rows' и 'email' присутствуют в полученном результате\nif 'rows' in email_data and 'email' in email_data['rows']:\n    email = email_data['rows']['email']\n    if email:\n        return True\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c458a4c7-3767-4ba0-94b1-5f697de27dd7",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 840,
        "y": 1725
      },
      "name": "MoySklad JSON API Создать задачу",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "create_task",
          "json_body": "from datetime import datetime, timedelta\n\nasync def get_time_till(datetime_str: str, hours_to_add: int = 0) -> str:\n    \"\"\"\n        Функция для добавления определённого количества часов к дате и времени.\n    \"\"\"\n    try:\n        hours_to_add = int(hours_to_add)  # Пробуем преобразовать hours_to_add в целое число\n    except Exception:\n        hours_to_add = 0  # Если не удалось, устанавливаем 0\n\n    # Преобразуем строку даты и времени в объект datetime, который может содержать миллисекунды\n    dt = datetime.strptime(datetime_str, '%Y-%m-%d %H:%M:%S.%f')\n\n    # Добавляем к дате указанное количество часов\n    new_dt = dt + timedelta(hours=hours_to_add)\n\n    # Преобразуем новый объект datetime обратно в строку без миллисекунд\n    new_dt_str = new_dt.strftime('%Y-%m-%d %H:%M:%S')  # Без миллисекунд\n    \n    return new_dt_str\n\n# hook по заверщению звонку\nhook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\n# создать задачу из настроек при входящим или исходящим звонке(настройки)\n# create_when_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[12].value')\n# create_when_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[16].value')\n\nsetting_when_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[39].value')\nsetting_when_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[40].value')\n\n\n\n# ответственный из настроек при входящим или исходящим звонке\n# responsible_when_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[13].value')\n# responsible_when_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[17].value')\n\n# контрагент\ncounterparty = (await context.get_parent_result(\"e7370189-4f0e-4cee-bdc3-765ba074c6ae\"))[\"rows\"][0]\n\n# Извлекаем ответственного по умолчанию из настроек\ndefault_responsible_in = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[3].value\")\ndefault_responsible_out = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[42].value\")\n# text, time\ntext = ''\ndatetime_till = ''\n\n# Если звонок входящий и выбран ответственный\nif hook['direction'] == 'in' and setting_when_in != 'none':\n\n    # Получаем шаблон и срок действия задачи(часы)\n    template = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[14].value')\n    time_till = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[50].value')\n    \n    # Получаем дату и время, когда задача должна быть выполнена\n    datetime_till = await get_time_till(hook['finish_time'], time_till)\n\n    # Убираем фигурные скобки из шаблона\n    template = template.replace('{{', '').replace('}}', '')\n\n    # Заменяем ключи из hook на их значения в шаблоне\n    for key, value in hook.items():\n        if not value:\n            value = ''\n        template = template.replace(key, str(value))\n        text = template # Устанавливаем текст задачи\n    \n    if setting_when_in == 'from_card':\n        body = counterparty[\"owner\"]\n    elif setting_when_in == 'from_settings':\n        body = {\n        \"meta\": {\n                \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible_in}\",\n                \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n                \"type\": \"employee\",\n                \"mediaType\": \"application/json\"\n        }\n    }\n\n\n# Если звонок исходящий и выбран ответственный\nif hook['direction'] == 'out' and setting_when_out != 'none':\n\n    # Получаем шаблон и срок действия задачи(часы)\n    template = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[18].value')\n    time_till = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[51].value')\n    \n    # Получаем дату и время, когда задача должна быть выполнена\n    datetime_till = await get_time_till(hook['finish_time'], time_till)\n\n    template = template.replace('{{', '').replace('}}', '')\n    for key, value in hook.items():\n        if not value:\n            value = ''\n        template = template.replace(key, str(value))\n        text = template\n\n    if setting_when_out == 'from_card':\n        body = counterparty[\"owner\"]\n    elif setting_when_in == 'from_settings':\n        body = {\n        \"meta\": {\n                \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible_out}\",\n                \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n                \"type\": \"employee\",\n                \"mediaType\": \"application/json\"\n        }\n    }\n\n\n\n\n# # если в настройках выбран \"ответственный по умолчанию\" то \"assignee\": ответственный по умолчанию\n# if responsible_when_in == 'default_responsible' or responsible_when_out == 'default_responsible':\n#     body = {\n#         \"meta\": {\n#                 \"href\": f\"https://api.moysklad.ru/api/remap/1.2/entity/employee/{default_responsible}\",\n#                 \"metadataHref\": \"https://api.moysklad.ru/api/remap/1.2/entity/employee/metadata\",\n#                 \"type\": \"employee\",\n#                 \"mediaType\": \"application/json\"\n#         }\n#     }\n# # если в настройках выбран \"из карточки клиента\" то \"assignee\": ответственный контрагент\n# elif responsible_when_in == 'from_contact_card' or responsible_when_out == 'from_contact_card':\n#     body = counterparty[\"owner\"]\n    \n\nreturn {\n        \"description\": text,\n        \"dueToDate\": datetime_till,\n        \"assignee\": body,\n        \"done\": False,\n        \"agent\": {\n            \"meta\": counterparty[\"meta\"]\n        }      \n    }\n\n \n\n"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "json_body": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c492c093-62f7-4c32-92fe-3c0863ab05af",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -540,
        "y": 120
      },
      "name": null,
      "data": {
        "nodeTypeId": "logger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "logs": {
            "log": [
              {
                "line": "parent = (await context.get_parent_result())[\"data\"][\"message\"]\n\ncall_session_id = parent.get(\"call_session_id\") or \"\"\ncontact_phone_number = parent.get(\"contact_phone_number\") or \"\"\nnotification_mnemonic = parent.get(\"notification_mnemonic\")\n\nreturn f\"{notification_mnemonic}, session_id: {call_session_id}, client_phone: {contact_phone_number}\"",
                "level": "INFO"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "logs➜log【0】➜line": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c59e02d0-c623-4974-8b35-35850b13ed02",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2535,
        "y": -150
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "is_result_delay": false,
          "set_source_data": false,
          "field_to_split_out": "result"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c6650d74-35fd-41c0-a730-cd501eab66c4",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 495,
        "y": -555
      },
      "name": null,
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\n\nreturn f\"moysklad_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "counterparty_id = (await context.get_parent_result(\"3c8190ef-e586-4561-8b05-14d082f5e4a5\"))['id']\n\nreturn counterparty_id",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c8707e7a-0f32-430e-98ee-1abbb0945938",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1230,
        "y": -1155
      },
      "name": "Найти сотрудника по email",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "in_chunks": false,
          "operation": "get.employees(get_employees)",
          "body_get_employees(get_employees)": "email = (await context.get_parent_result(\"26262525-8a79-4c0a-8ed1-bc75cf098ff3\"))['rows'].get('email', '')\n\n\nreturn {\n    \"filter\": {\n        \"field\": \"email\",\n        \"operator\": \"=\",\n        \"value\": email\n        }\n    }\n"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {
            "body_get_employees(get_employees)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c8b4f7ae-2a3c-44f9-9b9e-9580ec102e2c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2100,
        "y": -150
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "source_data": "return await context.get_parent_result(\"a64aedfa-2c30-48de-8820-5dff7f9c7d11\")",
          "is_result_delay": false,
          "set_source_data": true,
          "field_to_split_out": "rows"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "source_data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "c90823ea-a479-4a6a-9789-05008a1cc8dd",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 765,
        "y": 1860
      },
      "name": "MoySklad Phone API - завершение разговора",
      "data": {
        "nodeTypeId": "moysklad-phoneapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "body": "import time\n\nsequence = int(time.time()*100000)\njsn = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\nlegs = (await context.get_parent_result(\"cf514fa5-4e97-48f9-a8cb-119b8bcc444f\"))[\"data\"]\next_numbers = (await context.get_parent_result(\"6544851f-f015-4d02-9af6-238a8c6bed04\"))\n\n\nextension_numbers = {}\nfor employee_data in ext_numbers[\"data\"]:\n  employee_id = employee_data[\"id\"]\n  if \"extension_phone_number\" in employee_data[\"extension\"]:\n    employee_ext_number = employee_data[\"extension\"][\"extension_phone_number\"]\n    extension_numbers[employee_id] = employee_ext_number\n  else:\n    extension_numbers[employee_id] = None\n\ndef _call_source(type_call):\n  if type_call == 'callapi' or type_call == \"partner_integration\":\n    return 'Звонок с CRM'\n  elif type_call == 'callback':\n    return 'Обратный звонок'\n  elif type_call == 'callout':\n    return 'Звонки через пин-код'\n  elif type_call == 'call_tracking':\n    return 'Аналитика'\n  elif type_call == 'va':\n    return 'Звонок с ВАТС'\n  elif type_call == 'sip':\n    return 'Звонок с SIP линии'\n  elif type_call == 'lead':\n    return 'Звонок с Лидогенератора'\n  elif type_call == 'sitephone':\n    return 'Звонок с Сайтфона'\n  return ''\n\ndef _communication_type(type_comm):\n  if type_comm == 'call':\n    return ''\n  elif type_comm == 'goal':\n    return 'Целевое событие'\n  elif type_comm == 'offline_message':\n    return 'Офлайн заявка'\n  elif type_comm == 'chat':\n    return 'Чат'\n  return ''\n\ndef _get_all_empl(legs):\n  all_employees = \"Сотрудники звонка:\\n\"\n  for leg in legs:\n    if leg[\"employee_full_name\"] is not None:\n      # сначала перечисляем сотрудников\n      empl_name = leg[\"employee_full_name\"]\n      emp_id = leg[\"employee_id\"]\n      employee_number = extension_numbers[emp_id] if extension_numbers[emp_id] is not None else \"не задан\"\n      duration = str(leg[\"duration\"]) + \" cек.\"\n      if jsn['is_lost']:\n        duration = \"\"\n      if jsn['is_lost'] or not leg[\"is_failed\"]: # добавляем сотрудника, если звонок был пропущен (добавляем всех) или если звонок состоялся и этот сотрудник разговаривал\n        all_employees += str(empl_name) + \" (\" + employee_number + \") \" + duration + \"\\n\"\n  return all_employees\n\ncomment_call = ''\nif jsn['is_lost']:  # пропущенный входящий и исходящий\n  if jsn['direction'] == 'in':\n    comment_call = 'Пропущенный: ' \n\n  comment_call += jsn[\"lost_reason\"] + '. ' + _communication_type(jsn[\"communication_type\"]) + ' UIS: ' + jsn['virtual_phone_number'] + ' (' + _call_source(jsn[\"call_source\"]) + ')'\n\nelif jsn['direction'] == 'out':  # все исходящие\n  comment_call = 'Исходящий.' + _communication_type(jsn[\"communication_type\"]) + ' UIS: ' + jsn['virtual_phone_number'] + ' (' + _call_source(jsn[\"call_source\"]) + ')'\n\nelse:  # успешные входящие\n  comment_call = _communication_type(jsn[\"communication_type\"]) + ' UIS: ' + jsn['virtual_phone_number'] + ' (' + _call_source(jsn[\"call_source\"]) + ')'\n\ncomment_call += \"\\n\" + _get_all_empl(legs)\n\nresult = {\n  'duration': jsn[\"talk_time_duration\"]*1000,\n  'comment': comment_call,\n  \"events\": [\n    {\n      \"eventType\": \"HIDE_ALL\",\n      \"sequence\": sequence\n    }\n  ]\n}\n\nemployee_number = jsn[\"extension_phone_number\"]\nif employee_number is not None:\n  result['extension'] = employee_number\nelse:  # пропущенный входящий, берем внутренний номер последнего не ответившего сотрудника\n  if ext_numbers is not None and len(ext_numbers[\"data\"]) > 0:\n    ext_data = ext_numbers[\"data\"].pop()[\"extension\"]\n    if \"extension_phone_number\" in ext_data:\n      result[\"extension\"] = ext_data[\"extension_phone_number\"]\n\nif \"full_record_file_link\" in jsn and jsn[\"full_record_file_link\"] is not None:\n  result[\"recordUrl\"] = [jsn[\"full_record_file_link\"]]\n\nreturn result",
          "ext_id": "jsn = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\nreturn jsn[\"call_session_id\"]\n",
          "method": "update_call_extid",
          "call_id": null
        },
        "credentials": {
          "moysklad_phone_api_key": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key"
        },
        "expressions": {
          "properties": {
            "body": {
              "language": "python"
            },
            "ext_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_phone_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "cb09adb4-2019-40e3-9b37-66225da75853",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -465,
        "y": -90
      },
      "name": "IF - фильтр ВН",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\n\nfilters = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[28].value')\nfilters_on_off = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].value')\ndirection = jsn['direction']\nis_internal = jsn['is_internal']\n\n\n# настройки фильтра по виртуальным\n\nif not filters or filters_on_off == False:\n    return True\n\n\nvirt_number_hook = jsn.get('virtual_phone_number')\nsite_from_hook = jsn.get('site_id')\nscenario_from_hook = jsn.get('scenario_id')\nsource_from_hook = jsn.get('source_id')\ncampaign_from_hook = jsn.get('campaign_id')\n\n\n# Проверяем условия\nif (direction == \"in\" and is_internal == False):\n    condition_flag = True\n    for or_condition in filters['conditions']:\n        condition_flag = True\n        if not or_condition.get('conditions'):\n            continue\n        for and_condition in or_condition['conditions']:\n            param = and_condition.get('param')\n            operator = and_condition.get('operator')\n            value = and_condition.get('value')\n                \n                # Проверка virtual_phone_number\n            if param == 'virtual_phone_number':\n                if operator == 'include' and virt_number_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and virt_number_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка site_id\n            if param == 'site_id':\n                if operator == 'include' and site_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and site_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка scenario_id\n            if param == 'scenario_id':\n                if operator == 'include' and scenario_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and scenario_from_hook in value:\n                    condition_flag = False\n                    break\n                \n                # Проверка source_id\n            if param == 'source_id':\n                if operator == 'include' and source_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and source_from_hook in value:\n                    condition_flag = False\n                    break\n\n                # Проверка campaign_id\n            if param == 'campaign_id':\n                if operator == 'include' and campaign_from_hook not in value:\n                    condition_flag = False\n                    break\n                if operator == 'exclude' and campaign_from_hook in value:\n                    condition_flag = False\n                    break\n            \n    if condition_flag is True:\n        return True\nreturn False\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "cb6b6806-3ac0-4cc2-a166-8eb97b9624bc",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 645,
        "y": -1155
      },
      "name": "MoySklad JSON API - получить сотрудников",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "get_employees"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {},
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "cf514fa5-4e97-48f9-a8cb-119b8bcc444f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -60,
        "y": 1860
      },
      "name": "DataAPI - информация о звонке",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "report",
          "in_chunks": false,
          "operation": "get.call_legs_report(get_call_legs_report)",
          "body_get_calls_report(get_calls_report)": null,
          "body_get_call_legs_report(get_call_legs_report)": "from datetime import datetime, timedelta\n\njsn = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\nin_f = '%Y-%m-%d %H:%M:%S.%f'\nout_f = '%Y-%m-%d %H:%M:%S'\n\nstart_time = (datetime.strptime(jsn['start_time'], in_f) + timedelta(seconds=-5)).strftime(out_f)\nfinish_time = (datetime.strptime(jsn['finish_time'], in_f) + timedelta(seconds=5)).strftime(out_f)\n\n\nreturn {\n  \"filter\": {\n        \"field\": \"call_session_id\",\n        \"operator\": \"=\",\n        \"value\": jsn['call_session_id']\n    },\n    \"fields\": [\n        \"id\",\n        \"called_phone_number\",\n        \"calling_phone_number\",\n        \"virtual_phone_number\",\n        \"employee_id\",\n        \"employee_full_name\",\n        \"is_operator\",\n        \"call_records\",\n        \"duration\",\n        \"total_duration\",\n        \"direction\",\n        \"is_transfered\",\n        \"is_talked\",\n        \"is_failed\"\n      ],\n    \"date_from\": start_time,\n    \"date_till\": finish_time\n}"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {
            "body_get_call_legs_report(get_call_legs_report)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d138743a-ef4e-4565-b5ef-2ad3ce7777e5",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1845,
        "y": -1170
      },
      "name": "Сохраняем соответствие сотрудников Dataapi | MoySklad",
      "data": {
        "nodeTypeId": "queue_manager",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "ADD_RECORD",
          "add_records_data": "moysklad_employee = (await context.get_parent_result(\"26262525-8a79-4c0a-8ed1-bc75cf098ff3\"))['rows']\ndataapi_employee = (await context.get_parent_result(\"fee6389a-744b-4ae0-9b12-df85e4373be0\"))['data'][0]\n\n\n\nreturn [\n          {\n            \"filter\": {\n              \"filters\": [\n                {\n                  \"fields\": [\n                    \"dataapi_employee_id\",\n                    \"moysklad_employee_id\"\n                  ],\n                  \"comparison_operator\": \"and\"\n                },\n                {\n                  \"fields\": [\n                    \"dataapi_employee_id\",\n                    \"moysklad_employee_id\"\n                  ],\n                  \"comparison_operator\": \"or\"\n                }\n              ],\n              \"comparison_operator\": \"and\"\n            },\n            \"records\": [\n                {\n                  \"dataapi_employee_id\": dataapi_employee['id'],\n                  \"moysklad_employee_id\": moysklad_employee['id'],\n                }\n              ],\n            \"queue_name\": \"moysklad_dataapi_employees_id\"\n          }\n        ]\n\n"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "add_records_data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d1966969-7aff-4610-ac65-aa4291bc0337",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 795,
        "y": -960
      },
      "name": "ищем контрагента по номеру телефона и его ответственного",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "contact = (await context.get_parent_result(\"287a2f67-55be-46c4-a299-21975f397bfc\"))[\"crm_context\"][\"contact_phone_number\"]\nreturn f\"phone={contact}\"",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d2fcc82e-d3d9-4b8d-bd90-3f786c0a5a7d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1815,
        "y": -615
      },
      "name": null,
      "data": {
        "nodeTypeId": "comagic-softphone-trigger-response-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "event": "get_installment_settings",
          "response_get_contact_details": {
            "active_leads": [
              {
                "url": "https://localhost/lead/1",
                "name": "John Doe",
                "status": "Qualified",
                "pipeline": "Main Sales Funnel"
              }
            ],
            "crm_contact_link": "https://localhost/contact/1",
            "contact_full_name": "John Doe"
          },
          "response_get_installment_settings": "   \nlogin = (await context.get_parent_result())['auth_info']['login']\nbutton_div_uis = \\\n\"\"\"\n<table cellspacing=\"0\" cellpadding=\"0\" class=\"menu-item-inner\">\n  <tbody>\n    <tr>\n      <td align=\"center\" style=\"vertical-align: bottom;\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g filter=\"url(#filter0_b_3_18)\"><path d=\"M0 12.5C0 5.59642 5.59642 0 12.5 0C19.4036 0 25 5.59642 25 12.5C25 19.4034 19.4036 25 12.5 25C5.59642 25 0 19.4034 0 12.5Z\" fill=\"#F3F6F6\" fill-opacity=\"0.86\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.544 7.95496L12.5877 7.95581L12.6315 7.957L12.6748 7.95911L12.7186 7.96155L12.7619 7.96439L12.8048 7.96814L12.8481 7.97223L12.8911 7.97672L12.9761 7.9874L13.061 8.00058L13.1031 8.00797L13.1448 8.01536L13.2281 8.03257L13.2694 8.04166L13.3106 8.05149L13.3515 8.06177L13.3923 8.07246L13.4331 8.08393L13.4731 8.09547L13.5135 8.10774L13.5535 8.12047L13.5931 8.13365L13.6327 8.14717L13.711 8.17592L13.7498 8.19115L13.7886 8.20678L13.8269 8.22234L13.8652 8.23876L13.9027 8.25564L13.9406 8.27331L13.9781 8.29092L14.0152 8.30905L14.0519 8.32752L14.0885 8.34683L14.1248 8.36609L14.161 8.38627L14.1969 8.40638L14.2677 8.44825L14.3027 8.46962L14.3719 8.51399L14.4061 8.537L14.4398 8.55996L14.4735 8.58382L14.5069 8.60763L14.5398 8.63183L14.5723 8.65649L14.6048 8.68194L14.6365 8.707L14.6686 8.73291L14.6998 8.75916L14.731 8.78586L14.7615 8.81297L14.7923 8.84013L14.8223 8.86802L14.8519 8.89598L14.8815 8.92428L14.9102 8.95308L14.9677 9.01138L14.9956 9.04138L15.0231 9.07132L15.0506 9.10172L15.0773 9.13257L15.104 9.16376L15.1302 9.19496L15.156 9.2266L15.1815 9.25865L15.2069 9.29109L15.2315 9.32354L15.2798 9.39007L15.3031 9.42337L15.3265 9.45746L15.3494 9.49155L15.3936 9.56053L15.4152 9.59587L15.4365 9.63115L15.4569 9.66649L15.4773 9.70223L15.4973 9.73837L15.5169 9.77496L15.5356 9.81149L15.5544 9.84848L15.5727 9.88541L15.5902 9.9228L15.6077 9.96058L15.6244 9.99837L15.641 10.0365L15.6569 10.0752L15.6723 10.1138L15.6873 10.1524L15.7019 10.1914L15.716 10.2309L15.7298 10.2703L15.7556 10.35L15.7677 10.3902L15.7794 10.4305L15.7906 10.4711L15.8015 10.5118L15.8119 10.5529L15.8215 10.5939L15.831 10.6354L15.8398 10.6769L15.8477 10.7184L15.8556 10.7603L15.8698 10.8449L15.8815 10.9299L15.8869 10.9726L15.8915 11.0154L15.8956 11.0585L15.899 11.1016L15.9019 11.1451L15.9044 11.1883L15.9065 11.2322L15.9077 11.2758L15.9086 11.3197L15.909 11.3629V11.4722L16.0032 11.5193L16.028 11.5319L16.0547 11.5472L16.0801 11.5629L16.1049 11.5796L16.1297 11.5973L16.1531 11.6156L16.1765 11.6343L16.1987 11.6541L16.2202 11.6744L16.2405 11.6957L16.2606 11.7175L16.2802 11.7398L16.2984 11.7631L16.316 11.7864L16.333 11.8108L16.3486 11.8356L16.3636 11.8609L16.378 11.8868L16.391 11.9131L16.4034 11.94L16.4151 11.9669L16.4255 11.9947L16.4353 12.0226L16.4438 12.051L16.4516 12.0799L16.4581 12.1088L16.464 12.1382L16.4685 12.1676L16.4724 12.198L16.4751 12.2279L16.4764 12.2579L16.477 12.2862V12.9979L16.4764 13.0258L16.4751 13.0562L16.4724 13.0861L16.4685 13.116L16.464 13.1459L16.4581 13.1748L16.4516 13.2042L16.4438 13.2331L16.4353 13.2615L16.4255 13.2894L16.4151 13.3168L16.4034 13.3442L16.391 13.371L16.378 13.3973L16.3636 13.4227L16.3486 13.448L16.3323 13.4734L16.316 13.4972L16.2984 13.521L16.2802 13.5439L16.2606 13.5667L16.2411 13.588L16.2202 13.6093L16.1987 13.63L16.1759 13.6498L16.1531 13.6685L16.1297 13.6868L16.1049 13.7046L16.0801 13.7208L16.0547 13.737L16.028 13.7517L16.0032 13.7648L15.3403 14.0963V14.4889L15.3399 14.5078L15.3377 14.5273L15.3347 14.5462L15.3299 14.5651L15.3243 14.584L15.3169 14.6016L15.3086 14.6192L15.2991 14.6361L15.2886 14.6525L15.2769 14.6681L15.2639 14.6825L15.2504 14.6961L15.2356 14.7092L15.2205 14.7209L15.2039 14.7313L15.187 14.7411L15.1696 14.7496L15.1518 14.7561L15.1331 14.7619L15.1144 14.7672L15.0953 14.7704L15.0757 14.7724L15.0566 14.773H13.92L13.9009 14.7724L13.8813 14.7704L13.8622 14.7672L13.8435 14.7619L13.8248 14.7561L13.807 14.7496L13.7892 14.7411L13.7727 14.7313L13.7562 14.7209L13.741 14.7092L13.7262 14.6961L13.7123 14.6825L13.6997 14.6681L13.688 14.6525L13.6776 14.6361L13.668 14.6192L13.6597 14.6016L13.6523 14.584L13.6467 14.5651L13.6419 14.5462L13.6384 14.5273L13.6367 14.5078L13.6359 14.4889V11.0796L13.6367 11.0601L13.6384 11.0412L13.6419 11.0216L13.6467 11.0027L13.6523 10.9844L13.6597 10.9662L13.668 10.9487L13.6776 10.9317L13.688 10.916L13.6997 10.9004L13.7123 10.8854L13.7262 10.8717L13.741 10.8593L13.7562 10.8476L13.7727 10.8372L13.7892 10.8274L13.807 10.8189L13.8248 10.8118L13.8435 10.8059L13.8622 10.8013L13.8813 10.7981L13.9009 10.7961L13.92 10.7955H14.4883L14.5078 10.7961L14.527 10.7981L14.5461 10.8013L14.5648 10.8059L14.5835 10.8118L14.6013 10.8189L14.6191 10.8274L14.636 10.8372L14.6521 10.8476L14.6677 10.8593L14.6821 10.8717L14.696 10.8854L14.7086 10.9004L14.7203 10.916L14.7312 10.9317L14.7403 10.9487L14.749 10.9662L14.756 10.9844L14.762 11.0027L14.7664 11.0216L14.7698 11.0412L14.7716 11.0601L14.7724 11.0796L14.7716 11.0992L14.7698 11.1181L14.7664 11.1376L14.762 11.1565L14.756 11.1748L14.749 11.193L14.7403 11.2106L14.7312 11.2269L14.7203 11.2432L14.7086 11.2589L14.696 11.2732L14.6821 11.2875L14.6677 11.2999L14.6521 11.3117L14.636 11.3221L14.6191 11.3318L14.6013 11.3403L14.5835 11.3475L14.5648 11.3534L14.5461 11.3579L14.527 11.3611L14.5078 11.3631L14.4883 11.3638H14.2041V14.2047H14.7724V13.9206L14.7727 13.9097V13.9088L14.7729 13.901L14.7751 13.8821L14.7781 13.8626L14.7829 13.8436L14.786 13.8343L14.787 13.8308L14.7879 13.8285L14.789 13.8254L14.7959 13.8072L14.7981 13.8024L14.7987 13.8009L14.8003 13.7979L14.8042 13.7896L14.8138 13.7726L14.8241 13.7569L14.8359 13.7413L14.8409 13.7356L14.8418 13.7344L14.8434 13.7327L14.8489 13.7263L14.8523 13.723L14.8528 13.7223L14.8538 13.7214L14.8624 13.7126L14.8772 13.7002L14.8799 13.6982L14.8887 13.6914L14.9018 13.6822L14.9155 13.6736L14.924 13.6694L14.9259 13.6683L14.9393 13.6618L15.7445 13.259L15.7562 13.2529L15.7653 13.2478L15.7823 13.2367L15.7907 13.2306L15.7986 13.2245L15.8064 13.2179L15.8142 13.2113L15.8285 13.1971L15.8481 13.1743L15.8539 13.1662L15.8598 13.1581L15.8702 13.1409L15.8748 13.1322L15.8839 13.114L15.8878 13.1049L15.8976 13.076L15.9002 13.0664L15.9022 13.0567L15.9061 13.0364L15.9074 13.0268L15.9087 13.0055V12.2781L15.908 12.2675L15.9074 12.2573L15.9061 12.2477L15.9022 12.2274L15.9002 12.2173L15.8976 12.2076L15.8911 12.1884L15.8878 12.1793L15.8839 12.1701L15.8794 12.1605L15.8748 12.1519L15.8702 12.1433L15.8651 12.1342L15.8598 12.126L15.8539 12.1179L15.8481 12.1098L15.8416 12.1017L15.8351 12.0941L15.8285 12.087L15.8214 12.0794L15.8142 12.0723L15.8064 12.0657L15.7986 12.0596L15.7907 12.053L15.7653 12.0363L15.7562 12.0313L15.7445 12.0252L15.5004 11.9031L15.4981 11.9021L15.493 11.8993L15.4837 11.8944L15.4805 11.8923L15.4752 11.8894L15.4535 11.8746L15.4401 11.8633L15.4323 11.8569L15.4212 11.8457L15.42 11.8444L15.4148 11.8393L15.3981 11.8188L15.3964 11.8163L15.3906 11.8087L15.3866 11.8023L15.3831 11.7974L15.377 11.7863L15.3743 11.7813L15.3724 11.7776L15.3706 11.7744L15.3698 11.7725L15.3671 11.7672L15.3606 11.7525L15.3553 11.7377L15.3539 11.7326L15.3515 11.7255L15.3495 11.7172L15.3469 11.7068L15.3461 11.7019L15.3456 11.7001L15.3448 11.6944L15.3443 11.6911L15.3438 11.6875L15.3419 11.6738L15.3414 11.6636L15.341 11.6592V11.6562L15.3406 11.6479V11.3271L15.3398 11.2901L15.3385 11.2536L15.3369 11.2175L15.3348 11.1809L15.3323 11.1447L15.3294 11.1086L15.3261 11.0729L15.3223 11.0371L15.3177 11.0014L15.3131 10.966L15.3081 10.9308L15.3023 10.8954L15.2965 10.8605L15.2831 10.7907L15.2681 10.7217L15.2515 10.6535L15.2423 10.6194L15.2331 10.5857L15.2231 10.5521L15.2131 10.5188L15.1915 10.4522L15.1802 10.4194L15.1686 10.3869L15.1565 10.3545L15.1306 10.2896L15.1177 10.258L15.104 10.2263L15.0756 10.1631L15.0606 10.1323L15.0456 10.101L15.0302 10.0702L15.0144 10.0398L14.9981 10.0099L14.9815 9.9795L14.9644 9.9499L14.9473 9.9199L14.9298 9.89075L14.9115 9.8616L14.8931 9.83286L14.8748 9.80371L14.8556 9.77535L14.8365 9.7474L14.8169 9.71905L14.7969 9.69155L14.7765 9.66405L14.7348 9.60984L14.7135 9.58314L14.6919 9.55643L14.6702 9.53052L14.6481 9.50467L14.6256 9.47882L14.6027 9.45331L14.5798 9.42825L14.556 9.40365L14.5327 9.37899L14.5085 9.35473L14.4844 9.33092L14.4598 9.30712L14.4348 9.28371L14.4098 9.26069L14.3844 9.23768L14.359 9.21552L14.3331 9.19331L14.3069 9.17115L14.2535 9.12842L14.2265 9.10751L14.1994 9.08694L14.1719 9.06683L14.144 9.04672L14.1165 9.027L14.0881 9.00768L14.0594 8.98876L14.0019 8.95183L13.9727 8.93376L13.9431 8.91609L13.9136 8.89882L13.884 8.882L13.8536 8.86558L13.8235 8.84916L13.7931 8.83353L13.7623 8.81791L13.7315 8.80274L13.7002 8.78791L13.669 8.77354L13.6373 8.75962L13.6056 8.74604L13.5736 8.73251L13.5415 8.71973L13.509 8.707L13.444 8.6832L13.3781 8.66104L13.3448 8.65036L13.3111 8.64007L13.2777 8.63064L13.244 8.62121L13.2098 8.61212L13.176 8.60353L13.1415 8.5953L13.1073 8.58791L13.0727 8.58053L13.0377 8.57354L13.0031 8.56694L12.9681 8.56121L12.9327 8.55547L12.8973 8.55013L12.8265 8.5411L12.7906 8.5374L12.7548 8.5341L12.7186 8.53081L12.6827 8.52837L12.6461 8.52632L12.6098 8.52467L12.5365 8.52303L12.4998 8.52263L12.4631 8.52303L12.3898 8.52467L12.3535 8.52632L12.3169 8.52837L12.281 8.53081L12.2448 8.5341L12.209 8.5374L12.1731 8.5411L12.1023 8.55013L12.0669 8.55547L12.0315 8.56121L11.9965 8.56694L11.9619 8.57354L11.9269 8.58053L11.8923 8.58791L11.8581 8.5953L11.8236 8.60353L11.7898 8.61212L11.7556 8.62121L11.6881 8.64007L11.6548 8.65036L11.6215 8.66104L11.5556 8.6832L11.4906 8.707L11.4581 8.71973L11.426 8.73251L11.394 8.74604L11.3623 8.75962L11.3311 8.77354L11.2994 8.78791L11.2681 8.80274L11.2373 8.81791L11.2065 8.83353L11.176 8.84916L11.146 8.86558L11.1156 8.882L11.086 8.89882L11.0565 8.91609L11.0269 8.93376L10.9977 8.95183L10.9402 8.98876L10.9115 9.00768L10.8835 9.027L10.8556 9.04672L10.8277 9.06683L10.8002 9.08694L10.7731 9.10751L10.7461 9.12842L10.6927 9.17115L10.6669 9.19331L10.6406 9.21552L10.5898 9.26069L10.5648 9.28371L10.5398 9.30712L10.5152 9.33092L10.4911 9.35473L10.4669 9.37899L10.4436 9.40365L10.4198 9.42825L10.3969 9.45331L10.374 9.47882L10.3515 9.50467L10.3294 9.53052L10.3077 9.55643L10.2861 9.58314L10.2648 9.60984L10.2231 9.66405L10.2027 9.69155L10.1827 9.71905L10.1631 9.7474L10.144 9.77535L10.1248 9.80371L10.1061 9.83286L10.0877 9.8616L10.0698 9.89075L10.0523 9.9199L10.0352 9.9499L10.0181 9.9795L10.0015 10.0099L9.98523 10.0398L9.96938 10.0702L9.95398 10.1015L9.92398 10.1631L9.89563 10.2263L9.88188 10.258L9.86898 10.2896L9.84312 10.3545L9.83102 10.3869L9.81938 10.4194L9.80812 10.4522L9.78648 10.5188L9.77648 10.5521L9.76648 10.5857L9.75733 10.6194L9.74813 10.6535L9.73148 10.7217L9.71648 10.7907L9.70312 10.8605L9.69727 10.8954L9.69148 10.9308L9.68648 10.966L9.68187 11.0014L9.67733 11.0371L9.67352 11.0729L9.67023 11.1086L9.66733 11.1447L9.66477 11.1809L9.66273 11.2175L9.66108 11.2536L9.65983 11.2901L9.65898 11.3267V11.6592L9.65767 11.6754L9.65574 11.6911L9.65312 11.7068L9.64921 11.7221L9.64466 11.7377L9.63938 11.7525L9.6329 11.7672L9.62574 11.7813L9.6179 11.795L9.60943 11.8087L9.59966 11.8214L9.58989 11.8335L9.58602 11.8378L9.58483 11.8393L9.58347 11.8406L9.57881 11.8457L9.56773 11.8569L9.55534 11.867L9.55171 11.8698L9.54608 11.8746L9.53903 11.8794L9.52994 11.8858L9.52699 11.8876L9.52438 11.8894L9.5225 11.8904L9.51625 11.8944L9.50188 11.902L9.25551 12.0252L9.24381 12.0313L9.23472 12.0363L9.20926 12.053L9.20142 12.0596L9.19364 12.0657L9.1858 12.0723L9.17864 12.0794L9.17148 12.087L9.16494 12.0941L9.15841 12.1017L9.15193 12.1098L9.14608 12.1179L9.14017 12.126L9.13494 12.1342L9.12977 12.1433L9.12523 12.1519L9.12062 12.1605L9.11608 12.1701L9.11216 12.1793L9.10892 12.1884L9.10239 12.2076L9.09977 12.2173L9.09778 12.2274L9.09392 12.2477L9.09261 12.2573L9.09199 12.2675L9.09131 12.2781V13.0055L9.09261 13.0268L9.09392 13.0364L9.09778 13.0567L9.09977 13.0664L9.10239 13.076L9.11216 13.1049L9.11608 13.114L9.12523 13.1322L9.12977 13.1409L9.14017 13.1581L9.14608 13.1662L9.15193 13.1743L9.17148 13.1971L9.1858 13.2113L9.19364 13.2179L9.20142 13.2245L9.20926 13.2306L9.21773 13.2367L9.23472 13.2478L9.24381 13.2529L9.25551 13.259L10.0607 13.6618L10.0741 13.6683L10.076 13.6694L10.0845 13.6736L10.0982 13.6822L10.1113 13.6914L10.1201 13.6982L10.1228 13.7002L10.1376 13.7126L10.1462 13.7214L10.1472 13.7223L10.1477 13.723L10.1511 13.7263L10.1566 13.7327L10.1582 13.7344L10.1591 13.7356L10.1641 13.7413L10.1759 13.7569L10.1862 13.7726L10.1958 13.7896L10.1997 13.7979L10.2013 13.8009L10.2019 13.8024L10.2041 13.8072L10.211 13.8254L10.2121 13.8285L10.213 13.8308L10.214 13.8343L10.2171 13.8436L10.2219 13.8626L10.2249 13.8821L10.2271 13.901L10.2276 13.9206V14.2047H10.7959V11.3638H10.5117L10.4922 11.3631L10.473 11.3611L10.4539 11.3579L10.4352 11.3534L10.4165 11.3475L10.3987 11.3403L10.3809 11.3318L10.364 11.3221L10.3479 11.3117L10.3323 11.2999L10.3179 11.2875L10.304 11.2732L10.2914 11.2589L10.2797 11.2432L10.2688 11.2269L10.2597 11.2106L10.251 11.193L10.244 11.1748L10.238 11.1565L10.2336 11.1376L10.2302 11.1181L10.2284 11.0992L10.2276 11.0796L10.2284 11.0601L10.2302 11.0412L10.2336 11.0216L10.238 11.0027L10.244 10.9844L10.251 10.9662L10.2597 10.9487L10.2688 10.9317L10.2797 10.916L10.2914 10.9004L10.304 10.8854L10.3179 10.8717L10.3323 10.8593L10.3479 10.8476L10.364 10.8372L10.3809 10.8274L10.3987 10.8189L10.4165 10.8118L10.4352 10.8059L10.4539 10.8013L10.473 10.7981L10.4922 10.7961L10.5117 10.7955H11.08L11.0991 10.7961L11.1187 10.7981L11.1378 10.8013L11.1565 10.8059L11.1752 10.8118L11.193 10.8189L11.2108 10.8274L11.2273 10.8372L11.2438 10.8476L11.259 10.8593L11.2738 10.8717L11.2877 10.8854L11.3003 10.9004L11.312 10.916L11.3224 10.9317L11.332 10.9487L11.3403 10.9662L11.3477 10.9844L11.3533 11.0027L11.3581 11.0216L11.3616 11.0412L11.3633 11.0601L11.3641 11.0796V14.4889L11.3633 14.5078L11.3616 14.5273L11.3581 14.5462L11.3533 14.5651L11.3477 14.584L11.3403 14.6016L11.332 14.6192L11.3224 14.6361L11.312 14.6525L11.3003 14.6681L11.2877 14.6825L11.2738 14.6961L11.259 14.7092L11.2438 14.7209L11.2273 14.7313L11.2108 14.7411L11.193 14.7496L11.1752 14.7561L11.1565 14.7619L11.1378 14.7672L11.1187 14.7704L11.0991 14.7724L11.08 14.773H10.2562L10.262 14.8015L10.2703 14.8355L10.279 14.8689L10.289 14.9023L10.2994 14.9354L10.3107 14.968L10.3224 15.0005L10.3355 15.0327L10.3489 15.0644L10.3637 15.0961L10.3785 15.127L10.3945 15.1579L10.4115 15.1883L10.4289 15.2183L10.4471 15.2478L10.4658 15.2769L10.4853 15.3056L10.5057 15.3338L10.527 15.3616L10.5487 15.389L10.5714 15.4159L10.5944 15.442L10.6183 15.4681L10.6431 15.4933L10.6683 15.5176L10.6939 15.5415L10.7204 15.565L10.7473 15.5876L10.7747 15.6093L10.8021 15.6301L10.8303 15.6505L10.8594 15.6705L10.8886 15.6892L10.9181 15.7075L10.9481 15.7248L10.9785 15.7418L11.0089 15.7575L11.0402 15.7726L11.0719 15.787L11.1036 15.8009L11.1358 15.8135L11.168 15.8256L11.201 15.8369L11.234 15.8474L11.267 15.8569L11.3009 15.866L11.3344 15.8739L11.3687 15.8813L11.4026 15.8878L11.418 15.8903L11.4301 15.8585L11.4472 15.821L11.4659 15.7847L11.4864 15.7489L11.5085 15.7148L11.5324 15.6813L11.5574 15.6494L11.5841 15.6188L11.6119 15.5892L11.6415 15.5614L11.6722 15.5347L11.704 15.5097L11.7375 15.4858L11.7716 15.4637L11.8074 15.4432L11.8438 15.4244L11.8812 15.4074L11.9199 15.3926L11.9597 15.379L12 15.3676L12.0409 15.358L12.083 15.3506L12.125 15.3455L12.1682 15.3421L12.208 15.3409H12.792L12.8318 15.3421L12.875 15.3455L12.917 15.3506L12.9591 15.358L13 15.3676L13.0403 15.379L13.0801 15.3926L13.1188 15.4074L13.1562 15.4244L13.1926 15.4432L13.2284 15.4637L13.2625 15.4858L13.296 15.5097L13.3278 15.5347L13.3585 15.5614L13.3881 15.5892L13.4159 15.6188L13.4426 15.6494L13.4676 15.6813L13.4915 15.7148L13.5136 15.7489L13.5341 15.7847L13.5528 15.821L13.5699 15.8585L13.5847 15.8972L13.5983 15.9369L13.6097 15.9773L13.6193 16.0182L13.6267 16.0602L13.6318 16.1023L13.6352 16.1455L13.6364 16.1852V16.2011L13.6352 16.2409L13.6318 16.2841L13.6267 16.3262L13.6193 16.3682L13.6097 16.4091L13.5983 16.4494L13.5847 16.4892L13.5699 16.5279L13.5528 16.5654L13.5341 16.6017L13.5136 16.6375L13.4915 16.6716L13.4676 16.7051L13.4426 16.7369L13.4159 16.7676L13.3881 16.7972L13.3585 16.825L13.3278 16.8517L13.296 16.8767L13.2625 16.9006L13.2284 16.9227L13.1926 16.9432L13.1562 16.9619L13.1188 16.979L13.0801 16.9938L13.0403 17.0074L13 17.0188L12.9591 17.0284L12.917 17.0358L12.875 17.0409L12.8318 17.0443L12.792 17.0455H12.1875L12.1489 17.0443L12.1068 17.0415L12.0659 17.0358L12.025 17.029L11.9847 17.0193L11.9455 17.0085L11.9068 16.9955L11.8693 16.9801L11.8324 16.9637L11.7966 16.9455L11.7619 16.9256L11.7284 16.904L11.696 16.8807L11.6648 16.8563L11.6347 16.8307L11.6062 16.8029L11.5784 16.7744L11.5528 16.7443L11.5284 16.7131L11.5051 16.6807L11.4835 16.6472L11.4636 16.6125L11.4455 16.5767L11.429 16.5404L11.4136 16.5023L11.4006 16.4636L11.4 16.4614L11.353 16.4551L11.3052 16.4472L11.257 16.4381L11.2097 16.4284L11.1623 16.4171L11.1153 16.4046L11.0685 16.3909L11.0224 16.3767L10.9763 16.3602L10.9311 16.3438L10.886 16.3256L10.8416 16.3068L10.7973 16.2864L10.7539 16.2654L10.7109 16.2426L10.6683 16.2199L10.6261 16.1949L10.5848 16.1699L10.544 16.1432L10.5036 16.1154L10.4641 16.0869L10.4254 16.0574L10.3872 16.0267L10.3494 15.9955L10.3128 15.9631L10.2768 15.9296L10.2412 15.8947L10.2068 15.8596L10.1734 15.8235L10.1408 15.7865L10.1091 15.7492L10.0787 15.7109L10.0491 15.6718L10.0205 15.6323L9.99307 15.5923L9.96659 15.5515L9.94091 15.5098L9.91659 15.4681L9.89312 15.4255L9.87096 15.3825L9.84972 15.3386L9.82972 15.2947L9.81057 15.25L9.79233 15.2052L9.7754 15.1596L9.75972 15.1139L9.745 15.0675L9.73148 15.021L9.71892 14.974L9.70801 14.9267L9.69761 14.8789L9.68892 14.8311L9.68114 14.7829L9.67415 14.7346L9.66892 14.686L9.6646 14.6369L9.66153 14.5882L9.65983 14.5387L9.65937 14.4913V14.4748L9.65966 14.4719V14.0963L8.99682 13.7648L8.97204 13.7517L8.94534 13.737L8.91994 13.7208L8.89511 13.7046L8.87034 13.6868L8.84693 13.6685L8.82409 13.6498L8.80131 13.63L8.77977 13.6093L8.75892 13.588L8.73938 13.5667L8.71983 13.5439L8.70159 13.521L8.68398 13.4972L8.66767 13.4734L8.65136 13.448L8.63642 13.4227L8.62205 13.3973L8.60903 13.371L8.59665 13.3442L8.58489 13.3168L8.57449 13.2894L8.56471 13.2615L8.55619 13.2331L8.54841 13.2042L8.54187 13.1748L8.53602 13.1459L8.53148 13.116L8.52756 13.0861L8.52494 13.0562L8.52364 13.0258L8.52301 12.9979V12.2862L8.52364 12.2579L8.52494 12.2279L8.52756 12.198L8.53148 12.1676L8.53602 12.1382L8.54187 12.1088L8.54841 12.0799L8.55619 12.051L8.56471 12.0226L8.57449 11.9947L8.58489 11.9669L8.59665 11.94L8.60903 11.9131L8.62205 11.8868L8.63642 11.8609L8.65136 11.8356L8.66705 11.8108L8.68398 11.7864L8.70159 11.7631L8.71983 11.7398L8.73938 11.7175L8.75955 11.6957L8.77977 11.6744L8.80131 11.6541L8.82347 11.6343L8.84693 11.6156L8.87034 11.5973L8.89511 11.5796L8.91994 11.5629L8.94534 11.5472L8.97204 11.5319L8.99682 11.5193L9.09063 11.4724V11.3629L9.09102 11.3197L9.09188 11.2758L9.09312 11.2322L9.09523 11.1883L9.09773 11.1447L9.10063 11.1016L9.10813 11.0154L9.11273 10.9726L9.12352 10.8872L9.12977 10.8449L9.14398 10.7603L9.15187 10.7184L9.15983 10.6769L9.16858 10.6354L9.17812 10.5939L9.18773 10.5529L9.19813 10.5118L9.20898 10.4711L9.22023 10.4305L9.23188 10.3902L9.24398 10.35L9.26977 10.2703L9.28358 10.2309L9.29773 10.1914L9.31227 10.1524L9.32727 10.1138L9.34273 10.0752L9.35852 10.0365L9.37523 9.99837L9.39188 9.96058L9.40938 9.9228L9.42688 9.88541L9.44523 9.84802L9.48273 9.77496L9.50233 9.73837L9.52233 9.70223L9.54273 9.66649L9.56313 9.63115L9.58437 9.59587L9.60602 9.56053L9.65023 9.49155L9.67313 9.45746L9.69648 9.42337L9.71983 9.39007L9.76812 9.32354L9.79273 9.29109L9.81812 9.25865L9.84352 9.2266L9.86937 9.19496L9.89563 9.16376L9.92233 9.13257L9.94898 9.10172L9.97648 9.07132L10.004 9.04138L10.0319 9.01138L10.0894 8.95308L10.1181 8.92428L10.1477 8.89598L10.1773 8.86802L10.2077 8.84013L10.2686 8.78586L10.2998 8.75916L10.331 8.73291L10.3631 8.707L10.3948 8.68194L10.4273 8.65649L10.4598 8.63183L10.4931 8.60763L10.526 8.58382L10.5598 8.55996L10.5935 8.537L10.6277 8.51399L10.6969 8.46962L10.7319 8.44825L10.8027 8.40638L10.8385 8.38627L10.8748 8.36609L10.9111 8.34683L10.9477 8.32752L10.9844 8.30905L11.0215 8.29092L11.0965 8.25564L11.1344 8.23876L11.1727 8.22234L11.211 8.20678L11.2498 8.19115L11.2886 8.17592L11.3669 8.14717L11.4065 8.13365L11.4461 8.12047L11.4861 8.10774L11.5265 8.09547L11.6073 8.07246L11.6481 8.06177L11.689 8.05149L11.7302 8.04166L11.7715 8.03257L11.8548 8.01536L11.8965 8.00797L11.9386 8.00058L12.0235 7.9874L12.1085 7.97672L12.1515 7.97223L12.1948 7.96814L12.2377 7.96439L12.281 7.96155L12.3248 7.95911L12.3681 7.957L12.4119 7.95581L12.4556 7.95496L12.4998 7.95456L12.544 7.95496ZM12.2153 15.9091L12.1972 15.9097L12.183 15.9108L12.1687 15.9125L12.1551 15.9148L12.1415 15.9182L12.1284 15.9216L12.1153 15.9261L12.0903 15.9364L12.0784 15.9426L12.067 15.9494L12.0557 15.9568L12.0443 15.9648L12.0341 15.9727L12.0136 15.9909L11.9955 16.0114L11.9875 16.0216L11.9795 16.033L11.9722 16.0443L11.9653 16.0557L11.9591 16.0676L11.9489 16.0926L11.9443 16.1057L11.9409 16.1188L11.9375 16.1324L11.9352 16.146L11.9335 16.1602L11.9324 16.1744L11.9318 16.1926V16.2142L11.9324 16.2313L11.9335 16.2449L11.9347 16.258L11.9369 16.2705L11.9398 16.283L11.9477 16.3068L11.9523 16.3188L11.9574 16.3301L11.9631 16.3415L11.9693 16.3523L11.9761 16.3625L11.9909 16.383L11.9994 16.3921L12.008 16.4011L12.017 16.4097L12.0267 16.4182L12.0364 16.4256L12.0466 16.433L12.0568 16.4398L12.0676 16.446L12.079 16.4517L12.0903 16.4568L12.1023 16.4614L12.1142 16.4654L12.1261 16.4688L12.1386 16.4722L12.1517 16.4744L12.1642 16.4756L12.1778 16.4767L12.1949 16.4773H12.7847L12.8028 16.4767L12.817 16.4756L12.8313 16.4739L12.8449 16.4716L12.8585 16.4682L12.8716 16.4648L12.8847 16.4602L12.9097 16.45L12.9216 16.4438L12.933 16.4369L12.9443 16.4296L12.9557 16.4216L12.9659 16.4137L12.9864 16.3955L13.0045 16.375L13.0125 16.3648L13.0205 16.3534L13.0278 16.3421L13.0347 16.3307L13.0409 16.3188L13.0511 16.2938L13.0557 16.2807L13.0591 16.2676L13.0625 16.254L13.0648 16.2404L13.0665 16.2261L13.0676 16.2119L13.0682 16.1938V16.1926L13.0676 16.1744L13.0665 16.1602L13.0648 16.146L13.0625 16.1324L13.0591 16.1188L13.0557 16.1057L13.0511 16.0926L13.0409 16.0676L13.0347 16.0557L13.0278 16.0443L13.0205 16.033L13.0125 16.0216L13.0045 16.0114L12.9864 15.9909L12.9659 15.9727L12.9557 15.9648L12.9443 15.9568L12.933 15.9494L12.9216 15.9426L12.9097 15.9364L12.8847 15.9261L12.8716 15.9216L12.8585 15.9182L12.8449 15.9148L12.8313 15.9125L12.817 15.9108L12.8028 15.9097L12.7847 15.9091H12.2153Z\" fill=\"#0C68D4\"/><path d=\"M12.6297 9.09455L12.5651 9.09171L12.5022 9.09091H12.4969L12.4354 9.09171L12.372 9.09432L12.3089 9.09875L12.2461 9.105L12.1835 9.11284L12.1212 9.12256L12.0594 9.13375L11.9981 9.14659L11.9372 9.16148L11.8767 9.17767L11.8168 9.19574L11.7574 9.21534L11.6985 9.23648L11.6405 9.25927L11.5829 9.28352L11.5297 9.30813L11.5174 9.31415L11.5052 9.32069L11.4936 9.32773L11.4822 9.33557L11.4713 9.34364L11.4607 9.35256L11.4506 9.36193L11.4411 9.37165L11.4318 9.38182L11.423 9.39256L11.4151 9.40353L11.4074 9.415L11.4005 9.42677L11.3939 9.43881L11.3881 9.45137L11.3827 9.46392L11.3782 9.47699L11.3743 9.49006L11.3708 9.50335L11.3681 9.51671L11.366 9.53029L11.3647 9.54415L11.3639 9.55773L11.3636 9.57159L11.3644 9.58518L11.3655 9.59875L11.3674 9.61233L11.37 9.62597L11.3732 9.63927L11.3772 9.65262L11.3816 9.6654L11.3867 9.67824L11.3923 9.6908L11.3986 9.70278L11.4055 9.71483L11.413 9.72631L11.4209 9.73756L11.4297 9.7483L11.4387 9.75847L11.4482 9.76841L11.458 9.77779L11.4686 9.78671L11.4795 9.79506L11.4906 9.80319L11.5023 9.81046L11.5143 9.81699L11.5264 9.8233L11.5389 9.82875L11.5519 9.83375L11.5649 9.83819L11.5781 9.84182L11.5914 9.84472L11.6049 9.84733L11.6188 9.84892L11.6322 9.84995L11.646 9.85046L11.6598 9.85023L11.6734 9.84943L11.6871 9.84784L11.7006 9.84552L11.7141 9.84262L11.7274 9.83921L11.7404 9.83506L11.7534 9.83006L11.7659 9.82483L11.812 9.8037L11.8552 9.7854L11.899 9.76813L11.943 9.75245L11.9876 9.73756L12.0323 9.72421L12.0777 9.71194L12.1233 9.70097L12.1694 9.69131L12.2159 9.68267L12.2625 9.67563L12.3092 9.66961L12.3564 9.66489L12.4039 9.66176L12.4513 9.65966L12.4995 9.65915L12.5491 9.65966L12.5977 9.66176L12.6459 9.66517L12.6936 9.66983L12.7411 9.67586L12.788 9.68318L12.8347 9.69182L12.8806 9.70148L12.9262 9.71273L12.9712 9.725L13.0158 9.73836L13.0598 9.75296L13.1033 9.76892L13.1463 9.78563L13.1887 9.8037L13.234 9.8246L13.2465 9.83006L13.2595 9.83477L13.2725 9.83898L13.2857 9.84239L13.2993 9.84523L13.3128 9.84762L13.3263 9.84915L13.3401 9.85023L13.3539 9.85046L13.3674 9.84995L13.3812 9.84892L13.3947 9.84705L13.4082 9.84472L13.4218 9.84182L13.435 9.83819L13.448 9.83375L13.4607 9.82875L13.4735 9.8233L13.4856 9.81727L13.4976 9.81046L13.5093 9.80319L13.5204 9.79534L13.5312 9.78693L13.5419 9.77807L13.5519 9.76864L13.5615 9.75875L13.5705 9.7483L13.579 9.73756L13.5869 9.72659L13.5944 9.71506L13.6013 9.70307L13.6076 9.69102L13.6135 9.67847L13.6185 9.66568L13.623 9.65262L13.627 9.63955L13.6302 9.6262L13.6326 9.61262L13.6347 9.59904L13.6357 9.58546L13.6365 9.57182L13.6363 9.55801L13.6355 9.54438L13.6341 9.53057L13.632 9.51694L13.6294 9.50364L13.6262 9.49029L13.6222 9.47722L13.6174 9.46415L13.6121 9.4516L13.6063 9.43904L13.5999 9.42705L13.593 9.41529L13.5853 9.40375L13.5771 9.39256L13.5686 9.3821L13.5594 9.37188L13.5498 9.36193L13.5398 9.35279L13.5291 9.34392L13.5183 9.33557L13.5069 9.32796L13.4952 9.32069L13.483 9.31415L13.4708 9.30813L13.4186 9.28409L13.3618 9.26L13.3045 9.23727L13.2465 9.21637L13.1876 9.19677L13.128 9.17875L13.0678 9.16228L13.0068 9.14762L12.9453 9.13455L12.8832 9.12307L12.8206 9.11341L12.7576 9.10529L12.6939 9.09904L12.6297 9.09455Z\" fill=\"#0C68D4\"/></g><defs><filter id=\"filter0_b_3_18\" x=\"-28\" y=\"-28\" width=\"81\" height=\"81\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\"><feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/><feGaussianBlur in=\"BackgroundImageFix\" stdDeviation=\"14\"/><feComposite in2=\"SourceAlpha\" operator=\"in\" result=\"effect1_backgroundBlur_3_18\"/><feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_backgroundBlur_3_18\" result=\"shape\"/></filter></defs></svg>\n      </td>\n    </tr>\n    <tr>\n      <td align=\"center\" style=\"vertical-align: top;\">\n        <span title=\"Софтфон UIS\" class=\"lognex-SpanHyperlink my-style topMenuItem-text\" tabindex=\"0\">\n          <a>\n            <span class=\"text\">Софтфон UIS</span>\n          </a>\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\"\"\"\ndata = {\n  \"softphone\": {\n    \"https://**.moysklad.ru/**\": {\n      \"padding\": {\n          \"top\": 0, \n          \"right\": 0, \n          \"bottom\": 0, \n          \"left\": 0, \n      },  \n      \"button\": {\n        \"elementXpath\": ('//*[@id=\"site\"]/table/tbody/tr[4]/td/div/table/tbody/tr/td[1]/div/table/tbody/tr/td[last()]'), \n        \"mode\": \"insertAfter\",\n        \"tag\": \"td\",\n        \"innerHTML\": button_div_uis,\n        \"attributes\": {\n          \"class\": \"topMenuItem-new\"\n        }\n      },\n      \"click2call\": {\n        \"mode\": \"webrtc\",\n        \"callapi\": {\n          \"url\": \"https://prod-msk-mrkt-uc-flow-webhook.novofon.ru/webhook/77c06a33-2d37-4f7e-9711-8ad299da3bfd\",\n          \"method\": \"post\",\n          \"data\": {\n            \"phone\": \"{{ phone }}\",\n            \"login\": login\n          }\n        },\n        \"handlers\": [\n          {\n            \"elementSelector\": '', \n            \"tag\": \"div\",\n            \"innerHTML\":  \"<a href='#'> {{phone}}</a>\", \n            \"attributes\": {\n              \"class\": \"click-2-call v-cell__plain v-cell\"\n            },\n            \"phoneXpath\": './/text()'\n          }\n\n        ]\n      }\n    }\n  }\n}\n\n\nreturn data"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "response_get_installment_settings": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d442375e-de98-4d50-8a40-ab0b2e68fcd5",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1620,
        "y": 2370
      },
      "name": "Redis Удалить заказ",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\nreturn f\"moysklad_order_{hook['call_session_id']}\"",
          "method": "delete",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d592fe33-1336-41b9-b61f-01ba2e5d5e7e",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -405,
        "y": 1170
      },
      "name": null,
      "data": {
        "nodeTypeId": "logger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "logs": {
            "log": [
              {
                "line": "parent = (await context.get_parent_result())[\"data\"][\"message\"]\n\ncall_session_id = parent.get(\"call_session_id\") or \"\"\ncontact_phone_number = parent.get(\"contact_phone_number\") or \"\"\nnotification_mnemonic = parent.get(\"notification_mnemonic\")\n\nreturn f\"{notification_mnemonic}, session_id: {call_session_id}, client_phone: {contact_phone_number}\"",
                "level": "INFO"
              }
            ]
          }
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "logs➜log【0】➜line": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d6da944f-ae64-4ed0-af01-b5e8d885cc60",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1905,
        "y": -1335
      },
      "name": null,
      "data": {
        "nodeTypeId": "queue_manager",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "DELETE_RECORDS",
          "queues": "return [\n  {\n    \"queue_name\": \"moysklad_dataapi_employees_id\"\n    \n  }\n]",
          "get_records_data": "return [\n  {\n    \"queue_name\": \"moysklad_dataapi_employees_id\",\n    \"limit\": 100\n    \n  }\n]"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "queues": {
              "language": "python"
            },
            "get_records_data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d7514480-7f8d-4739-9f5c-c02a60d45dcb",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -75,
        "y": -840
      },
      "name": null,
      "data": {
        "nodeTypeId": "uc-flow-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "event": "updated"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d8da7e80-4151-4348-918b-ca821922d73b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1380,
        "y": -1155
      },
      "name": "Нашли сотрудника?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "data = (await context.get_parent_result(\"c8707e7a-0f32-430e-98ee-1abbb0945938\"))['data']\n\nif data:\n    return True\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "d9b34262-30d6-4ca2-ad9a-e320ff66910c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -165,
        "y": -630
      },
      "name": "DataAPI - ВН",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "vn",
          "in_chunks": false,
          "operation": "get.virtual_numbers(get_virtual_numbers)",
          "body_get_virtual_numbers(get_virtual_numbers)": []
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": {
          "credentials": {
            "comagic_oauth2_api": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "da8e6798-6ebb-49bb-8481-b68d84ad13f4",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -105,
        "y": 1380
      },
      "name": null,
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger-callback",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "response": {
            "error": null,
            "result": true
          }
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "e01b62ed-7c5d-4cd9-9030-1da968009b3a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1605,
        "y": 255
      },
      "name": "DataAPI - получение ВН",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "sip",
          "in_chunks": false,
          "operation": "get.sip_lines(get_sip_lines)",
          "body_get_sip_lines(get_sip_lines)": "employee_id = int((await context.get_parent_result(\"750dd1ad-58af-4235-b6fc-ff90efba1d0c\"))[\"data\"][0][\"id\"])\n\nresult = {\n  \"filter\": {\n    \"field\": \"employee_id\",\n    \"operator\": \"=\",\n    \"value\": employee_id\n    },\n    \"fields\": [\n      \"physical_state\",\n      \"virtual_phone_number\",\n      \"type\",\n      ]\n      }\n\nreturn result",
          "body_get_sip_line_virtual_numbers(get_sip_line_virtual_numbers)": "employee_id = int((await context.get_parent_result(\"750dd1ad-58af-4235-b6fc-ff90efba1d0c\"))[\"data\"][0][\"id\"])\n\nresult = {\n  \"filter\": {\n    \"field\": \"employee_id\",\n    \"operator\": \"=\",\n    \"value\": employee_id\n    },\n    \"fields\": [\n      \"physical_state\",\n      \"virtual_phone_number\",\n      \"type\",\n      \"virtual_phone_number\"\n      ]\n      }\n\nreturn result"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {
            "body_get_sip_lines(get_sip_lines)": {
              "language": "python"
            },
            "body_get_sip_line_virtual_numbers(get_sip_line_virtual_numbers)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "e087296f-7eae-4b3c-bea8-33653d86ea0e",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -1680,
        "y": -270
      },
      "name": "Получаем ВН",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "sip",
          "in_chunks": false,
          "operation": "get.sip_lines(get_sip_lines)",
          "body_get_sip_lines(get_sip_lines)": "employee_id = int((await context.get_parent_result())[\"data\"][0][\"id\"])\n \nresult = {\n  \"filter\": {\n    \"field\": \"employee_id\",\n    \"operator\": \"=\",\n    \"value\": employee_id\n    },\n    \"fields\": [\n      \"physical_state\",\n      \"virtual_phone_number\",\n      \"type\",\n      \"virtual_phone_number\"\n      ]\n      }\n \nreturn result"
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": {
          "properties": {
            "body_get_sip_lines(get_sip_lines)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "e0bc4e02-b96a-4bd0-835e-f54a32f1989d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -1965,
        "y": -450
      },
      "name": "Softphone trigger- передача данных в карточку",
      "data": {
        "nodeTypeId": "comagic-softphone-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "event": "get_contact_details",
          "handle_mode": "graph",
          "handle_get_contact_details": "\nreturn {\n    \"contact_full_name\": \"John Doe\",\n    \"crm_contact_link\": \"https://localhost/contact/1\",\n    \"active_leads\": [\n        {\n            \"url\": \"https://localhost/lead/1\",\n            \"name\": \"John Doe\",\n            \"status\": \"Qualified\",\n            \"pipeline\": \"Main Sales Funnel\",\n        }\n    ]\n}\n"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "e32ed0f8-ce5d-4801-9df8-c91cf6d8c257",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": -420,
        "y": -630
      },
      "name": "Номер для звонка по клику",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "vn",
          "in_chunks": false,
          "operation": "get.virtual_numbers(get_virtual_numbers)",
          "body_get_virtual_numbers(get_virtual_numbers)": {}
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": {
          "properties": {}
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "e65833b5-52f2-4d8d-b57c-97033f03aab8",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 390,
        "y": -150
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "source_data": "return await context.get_parent_result(\"876c5174-e570-48cf-b771-1544680f3f56\")",
          "is_result_delay": false,
          "set_source_data": true,
          "field_to_split_out": "rows"
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "source_data": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "e7370189-4f0e-4cee-bdc3-765ba074c6ae",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 675,
        "y": 1725
      },
      "name": "Получить контрагента",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "filter": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\nphone_number = hook['contact_phone_number']\nreturn f'phone={phone_number}'",
          "method": "get_counterparties"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "properties": {
            "filter": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "ea020ecc-4080-4d59-b866-559e8b4fbe0f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 645,
        "y": 735
      },
      "name": "Redis - сохранить заказ",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f\"))['data']['message']\n\nreturn f\"moysklad_order_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "order = (await context.get_parent_result(\"6b8ee1c7-d966-4a78-bf5a-e4646f7137b7\"))[\"id\"]\nreturn order",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "eb8f961d-64f9-46f5-946e-c8eb6165ebdd",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 525,
        "y": 1725
      },
      "name": "IF Создать задачу по пропущенному звонку",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\n\n# create_when_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[12].value')\n# create_when_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[16].value')\n\n\nsetting_when_in = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[39].value')\nsetting_when_out = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[40].value')\n\nif hook['direction'] == 'in' and setting_when_in != 'none':\n    return True\n\nif hook['direction'] == 'out' and setting_when_out != 'none':\n    return True\n\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "ee469795-d949-469d-a443-dd08f04c6905",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1080,
        "y": -825
      },
      "name": null,
      "data": {
        "nodeTypeId": "personal-manager-action",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "id": 0,
          "field": "extension_phone_number",
          "extension_phone_number": "return None"
        },
        "credentials": {},
        "expressions": {
          "properties": {
            "extension_phone_number": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "ee90eab5-6399-4737-8dbe-74320cdea988",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 0,
        "y": 150
      },
      "name": "IF transferred",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "jsn  = (await context.get_parent_result(\"440e28d4-94d9-411b-a8dc-c4b6cbe94c1a\"))['data']['message']\nreturn jsn[\"is_transferred\"]\n",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "efb3fd40-7634-4480-94e8-6a22381b1894",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 585,
        "y": 150
      },
      "name": "MoySklad Phone API - обновление звонка",
      "data": {
        "nodeTypeId": "moysklad-phoneapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "body": "import time\njsn = (await context.get_parent_result(\"440e28d4-94d9-411b-a8dc-c4b6cbe94c1a\"))['data']['message']\nsequence = int(time.time()*100000)\n\ndef _call_source(type_call):\n  if type_call == 'callapi' or type_call == \"partner_integration\":\n    return 'Звонок с CRM'\n  elif type_call == 'callback':\n    return 'Обратный звонок'\n  elif type_call == 'callout':\n    return 'Звонки через пин-код'\n  elif type_call == 'call_tracking':\n    return 'Аналитика'\n  elif type_call == 'va':\n    return 'Звонок с ВАТС'\n  elif type_call == 'sip':\n    return 'Звонок с SIP линии'\n  elif type_call == 'lead':\n    return 'Звонок с Лидогенератора'\n  elif type_call == 'sitephone':\n    return 'Звонок с Сайтфона'\n  return ''\n\ndef _communication_type(type_comm):\n  if type_comm == 'call':\n    return ''\n  elif type_comm == 'goal':\n    return 'Целевое событие'\n  elif type_comm == 'offline_message':\n    return 'Офлайн заявка'\n  elif type_comm == 'chat':\n    return 'Чат'\n  return ''\n\n\ncomment_call = _communication_type(jsn[\"communication_type\"]) + ' UIS: ' + jsn['virtual_phone_number'] + ' (' + _call_source(jsn[\"call_source\"]) + ')'\n\nresult = {\n  \"externalId\": jsn[\"call_session_id\"],\n  \"number\": jsn[\"contact_phone_number\"],\n  \"isIncoming\": True,\n  \"events\": [\n    {\n      \"eventType\": \"SHOW\",\n      \"extension\": jsn[\"extension_phone_number\"],\n      \"sequence\": sequence\n    }\n  ],\n  \"comment\": comment_call\n}\n\nreturn result",
          "ext_id": "jsn = (await context.get_parent_result(\"440e28d4-94d9-411b-a8dc-c4b6cbe94c1a\"))['data']['message']\n\n\nreturn jsn[\"call_session_id\"]",
          "method": "update_call_extid"
        },
        "credentials": {
          "moysklad_phone_api_key": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key"
        },
        "expressions": {
          "properties": {
            "body": {
              "language": "python"
            },
            "ext_id": {
              "language": "python"
            }
          },
          "credentials": {
            "moysklad_phone_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "f09ba934-dbdd-46d8-a499-4ae6ce53913d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1050,
        "y": 2490
      },
      "name": null,
      "data": {
        "nodeTypeId": "function",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "code": "hook = (await context.get_parent_result(\"247b66f5-0faf-4b99-a8ea-ddcf1408452c\"))['data']['message']\r\n\r\n\r\n# Проверяем первичный ли заказ\r\ncontent = (await context.get_parent_result(\"84352b4c-af5a-48b4-ba84-f09089f25828\"))[\"content\"]\r\nif content:\r\n    first_message = True\r\nfirst_message =  False\r\n\r\n\r\n# call_type_setting = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[8].value\")\r\n# ответственный из настроек\r\n#responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[10].value\")\r\n\r\n# id последнего разговаривающего\r\nlast_employee_id = hook.get(\"last_talked_employee_id\") \r\nfirst_employee_id = hook.get(\"first_talked_employee_id\") \r\n\r\n\r\ndirection = hook[\"direction\"]\r\n\r\n# for call_type in call_type_setting:\r\n#   if call_type[\"direction\"] == direction:\r\n#     responsible = call_type[\"responsible\"]\r\n#     organization = call_type[\"organization\"]\r\n\r\n\r\nif not first_message and direction == \"in\":\r\n    responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[34].value\")\r\n\r\nif not first_message and direction == 'out':\r\n    responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[48].value\")\r\n\r\nif first_message and direction == \"in\":\r\n    responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[31].value\")\r\n\r\nif first_message and direction == \"out\":\r\n    responsible = await context.get_node_settings(\"//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[37].value\")\r\n\r\n\r\n\r\nif responsible == \"from_call\":\r\n    employee_id = last_employee_id\r\nelif responsible == \"start_call\":\r\n    employee_id = first_employee_id\r\n\r\nelse:\r\n    return responsible, first_message\r\n\r\n    \r\n# return [\r\n#     {\r\n#         \"queue_name\": \"moysklad_dataapi_employees_id\",\r\n#         \"limit\": 100,\r\n#         \"filter\": {\r\n#             \"comparison_operator\": \"and\",\r\n#             \"filters\": [\r\n#                 {\r\n#                     \"field\": \"dataapi_employee_id\",\r\n#                     \"condition\": \"=\",\r\n#                     \"value\": employee_id\r\n#                 },\r\n#             ]\r\n#         }\r\n#     }\r\n# ]\r\n",
          "language": "python",
          "return_generator": false
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "f30159ee-de80-4772-bd03-d86a5063a8de",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "trigger",
      "position": {
        "x": -555,
        "y": 1290
      },
      "name": "Начало разговора",
      "data": {
        "nodeTypeId": "crm-engine-call-session-event-trigger",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "handle": "return {\"result\": True, \"error\": None}",
          "handle_mode": "graph",
          "event_mnemonic": "talk_started",
          "event_conditions": [],
          "event_properties": [
            "gclid",
            "ua_resource_id",
            "ym_counter_id",
            "utm_referrer",
            "yclid",
            "attributes",
            "ppc_auditory",
            "ppc_position_type",
            "visitor_browser_name",
            "visitor_os_version",
            "visitor_browser_version",
            "virtual_phone_number",
            "ppc_gr_ext_id",
            "ppc_pc_ext_id",
            "ppc_kw_ext_id",
            "ppc_ad_ext_id",
            "is_internal",
            "extension_phone_number",
            "notification_timestamp",
            "notification_time",
            "called_phone_number",
            "calling_phone_number",
            "visitor_city",
            "start_time",
            "answer_time",
            "referrer_domain",
            "site_domain_name",
            "session_id",
            "communication_group_id",
            "ppc_gr_id",
            "call_session_id",
            "external_id",
            "ppc_pc_id",
            "app_id",
            "ppc_kw_id",
            "contact_id",
            "communication_id",
            "ppc_ad_id",
            "visitor_first_campaign_id",
            "person_id",
            "openstat_source",
            "ua_client_id",
            "ym_client_id",
            "visitor_id",
            "openstat_ad",
            "campaign_id",
            "openstat_campaign",
            "site_id",
            "openstat_service",
            "scenario_id",
            "lead_scenario_id",
            "utm_expid",
            "call_source",
            "referrer",
            "utm_source",
            "source_group",
            "source",
            "utm_medium",
            "channel",
            "source_channel",
            "visitor_properties.calltouch_ctClientId",
            "visitor_properties.calltouch_ctGlobalId",
            "visitor_properties.calltouch_sessionId",
            "visitor_properties.calltouch_siteId",
            "visitor_properties.calltracking_params",
            "visitor_properties.calltracking_params_ctClientId",
            "visitor_properties.calltracking_params_ctGlobalId",
            "visitor_properties.calltracking_params_sessionId",
            "visitor_properties.calltracking_params_siteId",
            "visitor_properties.my_field",
            "visitor_properties.my_field2",
            "visitor_properties.Логин",
            "visitor_properties",
            "ppc_kw_keyword",
            "utm_term",
            "visits_count",
            "cm_id",
            "tag_from",
            "ymclid",
            "ef_id",
            "source_channel_mnemonic",
            "notification_mnemonic",
            "communication_group_name",
            "ppc_gr_name",
            "utm_campaign",
            "ppc_pc_name",
            "ppc_ad_name",
            "visitor_first_campaign_name",
            "tp_project",
            "campaign_name",
            "scenario_name",
            "lead_scenario_name",
            "direction",
            "contact_phone_number",
            "communication_number",
            "employee_phone_number",
            "visitor_os_name",
            "campaign_description",
            "search_engine",
            "search_query",
            "notification_name",
            "visitor_screen",
            "eq_utm_campaign",
            "eq_utm_content",
            "eq_utm_expid",
            "eq_utm_medium",
            "eq_utm_referrer",
            "eq_utm_source",
            "eq_utm_term",
            "cpn_region_name",
            "visitor_region",
            "ppc_place",
            "utm_content",
            "contact_group_ids",
            "employee_group_ids",
            "segment_ids",
            "leg_ids",
            "visitor_country",
            "entrance_page",
            "communication_type",
            "visitor_is_new",
            "cpn_region_id",
            "employee_id",
            "visitor_device",
            "contact_full_name",
            "employee_full_name",
            "visitor_language"
          ],
          "is_ready_to_handle": "return {\"result\": True, \"error\": None}",
          "is_ready_to_handle_mode": "code"
        },
        "credentials": {
          "comagic_oauth2_api": "4db949cd-edcf-4cb2-ad17-fa7c097bce5a"
        },
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "f52c1daa-806b-427f-8e9b-8d877741cd52",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 870,
        "y": -150
      },
      "name": null,
      "data": {
        "nodeTypeId": "item-lists",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "include": "no_other_fields",
          "options": {
            "merge_lists": [],
            "destination_field_name": []
          },
          "operation": "split_out_items",
          "is_result_delay": false,
          "set_source_data": false,
          "field_to_split_out": "result"
        },
        "credentials": null,
        "expressions": null
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "f75c3ee7-f7e8-40a3-b8ff-9f6da3d5ae2b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 2250,
        "y": -270
      },
      "name": "Сохранить нового контрагента",
      "data": {
        "nodeTypeId": "redis-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "key": "hook = (await context.get_parent_result(\"5affa723-bbbe-4ec7-9851-ca78427d0292\"))['data']['message']\n\nreturn f\"moysklad_{hook['call_session_id']}\"",
          "ttl": 7200,
          "value": "counterparty_id = (await context.get_parent_result(\"1343477b-7132-4127-ba75-66711e6c30cd\"))['id']\n\nreturn counterparty_id",
          "method": "set",
          "data_type": "String"
        },
        "credentials": {
          "uc_flow": "72704848-2139-46be-a73c-4e04036a278a"
        },
        "expressions": {
          "properties": {
            "key": {
              "language": "python"
            },
            "value": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "fe3317df-796f-4810-872d-d9adcd355024",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 540,
        "y": -150
      },
      "name": "Обновлять доп. поля?",
      "data": {
        "nodeTypeId": "if-node",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "conditions": {
            "number": [],
            "string": [],
            "boolean": [
              {
                "value_1": "extra_fields = await context.get_node_settings('//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[45].value')\r\nif extra_fields:\r\n    return True\r\nreturn False",
                "value_2": true,
                "operation": "equal"
              }
            ],
            "date_time": []
          },
          "combine_operation": "all",
          "save_parent_result": false
        },
        "credentials": null,
        "expressions": {
          "properties": {
            "conditions➜boolean【0】➜value_1": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "fe5578cf-2f70-404d-99b8-65202258a2c4",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1095,
        "y": -960
      },
      "name": "MoySklad JSON API получаем сотрудников",
      "data": {
        "nodeTypeId": "moysklad-jsonapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "method": "get_employees"
        },
        "credentials": {
          "moysklad_json_api_key": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key"
        },
        "expressions": {
          "credentials": {
            "moysklad_json_api_key": {
              "language": "reference"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    },
    {
      "id": "fee6389a-744b-4ae0-9b12-df85e4373be0",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "action",
      "position": {
        "x": 1680,
        "y": -1170
      },
      "name": "DataAPI Получить сотрудника по email",
      "data": {
        "nodeTypeId": "comagic-dataapi",
        "nodeTypeVersion": "1",
        "disabled": false,
        "properties": {
          "resource": "employee",
          "in_chunks": false,
          "operation": "get.employees(get_employees)",
          "body_get_employees(get_employees)": "email = (await context.get_parent_result(\"26262525-8a79-4c0a-8ed1-bc75cf098ff3\"))['rows'].get('email', '')\n\n\nreturn {\n    \"filter\": {\n        \"field\": \"email\",\n        \"operator\": \"=\",\n        \"value\": email\n        }\n    }\n"
        },
        "credentials": {
          "comagic_oauth2_api": "e93292a8-9872-41a2-a2d1-68dd8f54baa1"
        },
        "expressions": {
          "properties": {
            "body_get_employees(get_employees)": {
              "language": "python"
            }
          }
        }
      },
      "throttling_params": null,
      "network": "INTERNAL"
    }
  ],
  "edges": [
    {
      "id": "00099ac9-20f1-4927-92b7-a1a1a315408f",
      "flow_id": null,
      "type": "default",
      "source": "71006902-158e-41a7-98f4-4adbf71e662d",
      "sourceHandle": "main",
      "target": "7c3835da-d347-47bd-b1ac-0814b8ad8dba",
      "targetHandle": "main"
    },
    {
      "id": "000c2549-c27e-45c6-aec7-9e13b1fdb63f",
      "flow_id": null,
      "type": "default",
      "source": "cb09adb4-2019-40e3-9b37-66225da75853",
      "sourceHandle": "true",
      "target": "43a654ff-4267-4c67-825f-4d74c08ea8c8",
      "targetHandle": "main"
    },
    {
      "id": "0142e0ab-f6b6-488d-ae86-3342661ea650",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "247b66f5-0faf-4b99-a8ea-ddcf1408452c",
      "sourceHandle": "handle",
      "target": "b3d6189c-56a9-486e-8f2b-67e05f680dc6",
      "targetHandle": "main"
    },
    {
      "id": "01b0dc03-6e67-4b5a-b58a-59808756bb09",
      "flow_id": null,
      "type": "default",
      "source": "1d3d5f2f-8242-40bc-b6ec-bb3648b1fe15",
      "sourceHandle": "main",
      "target": "a1a6f289-9ccc-40c6-a183-6be88dd6a56e",
      "targetHandle": "main"
    },
    {
      "id": "0497a0c4-7078-4ebb-a773-5b868829737a",
      "flow_id": null,
      "type": "default",
      "source": "800fde27-d587-48b2-a94a-9a0cf8a0c569",
      "sourceHandle": "main",
      "target": "4dd0377b-bb8a-4649-935d-b4fe64c5ad5e",
      "targetHandle": "main"
    },
    {
      "id": "06a2a8c4-02c0-47cb-b6e5-ac0c7bf0a6f4",
      "flow_id": null,
      "type": "default",
      "source": "7290ab1c-753a-4b22-b2cb-03f1906e3338",
      "sourceHandle": "true",
      "target": "ee90eab5-6399-4737-8dbe-74320cdea988",
      "targetHandle": "main"
    },
    {
      "id": "08368858-f069-4aff-895b-1a77703accf6",
      "flow_id": null,
      "type": "default",
      "source": "c4206919-d635-41ed-92d0-41cb80bce475",
      "sourceHandle": "true",
      "target": "1e507e27-f032-453e-9cc3-c17cba31820a",
      "targetHandle": "main"
    },
    {
      "id": "0958dc2d-7e47-4ad7-83da-c073c3cf4843",
      "flow_id": null,
      "type": "default",
      "source": "c1889b1a-7c1e-481f-b251-ba5bc3fddb10",
      "sourceHandle": "true",
      "target": "67c22291-ff27-46d8-8f33-767b7f4db3b7",
      "targetHandle": "main"
    },
    {
      "id": "0990023c-00b7-4c2e-9ed8-f3eacf5bdba9",
      "flow_id": null,
      "type": "default",
      "source": "622d8bd8-7f15-4179-a06e-63eaa95341c6",
      "sourceHandle": "true",
      "target": "581552ea-715c-45ce-b0bc-ccb63a25f89b",
      "targetHandle": "main"
    },
    {
      "id": "09d8f18c-32fe-4390-970c-8759b5619115",
      "flow_id": null,
      "type": "default",
      "source": "9681cf26-ac89-42ad-a6b9-b21f8419f800",
      "sourceHandle": "handle",
      "target": "7ff545ad-03d7-4909-a9fc-2056d440ebca",
      "targetHandle": "main"
    },
    {
      "id": "0b8d74e0-420b-4931-963f-c59733caedcb",
      "flow_id": null,
      "type": "default",
      "source": "865c033d-bc6c-4f72-844c-311880ded14c",
      "sourceHandle": "main",
      "target": "bd964f51-f3b1-4c9e-8ec6-5e3a39e5b706",
      "targetHandle": "main"
    },
    {
      "id": "0c5b4370-ae63-4175-8a43-075d7c3c131e",
      "flow_id": null,
      "type": "default",
      "source": "4c550c2f-a031-4a87-9fb0-62a1dfec3bc5",
      "sourceHandle": "false",
      "target": "038eaeae-3e03-40cc-aeff-592edbb89688",
      "targetHandle": "main"
    },
    {
      "id": "0f9a36e4-0f89-4e7e-8553-94424c87393e",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "388e32d7-f2c8-4488-a9ee-cc80832e4036",
      "sourceHandle": "false",
      "target": "935af2cf-1ddc-4a6e-bb3a-ed45af87bec3",
      "targetHandle": "main"
    },
    {
      "id": "10f7a1ad-e489-4da2-b03e-292c09853822",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "011dd16b-2c5d-43b3-93ef-714c77e3c88f",
      "sourceHandle": "main",
      "target": "d2fcc82e-d3d9-4b8d-bd90-3f786c0a5a7d",
      "targetHandle": "main"
    },
    {
      "id": "10f9f648-317e-48c3-8cb3-cf299d79c5f5",
      "flow_id": null,
      "type": "default",
      "source": "fe5578cf-2f70-404d-99b8-65202258a2c4",
      "sourceHandle": "main",
      "target": "a8f28c6d-a066-46d2-b7fa-0299bb83c74f",
      "targetHandle": "main"
    },
    {
      "id": "1230d50a-9102-4261-8f08-47614f3b8f34",
      "flow_id": null,
      "type": "default",
      "source": "a22398d8-22ab-4b10-a8ea-8c00ffbe7cd4",
      "sourceHandle": "true",
      "target": "cf514fa5-4e97-48f9-a8cb-119b8bcc444f",
      "targetHandle": "main"
    },
    {
      "id": "1463fa46-a401-48cd-9350-57ad151db64c",
      "flow_id": null,
      "type": "default",
      "source": "793f8cc2-5c2e-40b5-9187-7ae2ce123825",
      "sourceHandle": "true",
      "target": "800fde27-d587-48b2-a94a-9a0cf8a0c569",
      "targetHandle": "main"
    },
    {
      "id": "188e6668-5573-46be-a886-efabc6070178",
      "flow_id": null,
      "type": "default",
      "source": "5affa723-bbbe-4ec7-9851-ca78427d0292",
      "sourceHandle": "is_ready_to_handle",
      "target": "540f5c2f-17e1-4546-8b08-3cc13b5687cf",
      "targetHandle": "main"
    },
    {
      "id": "1910a89b-325f-4b1c-8ebd-95b8e6baddfc",
      "flow_id": null,
      "type": "default",
      "source": "388e32d7-f2c8-4488-a9ee-cc80832e4036",
      "sourceHandle": "true",
      "target": "a833b721-1046-403a-8782-155957c5bca2",
      "targetHandle": "main"
    },
    {
      "id": "1cc53818-62e5-49f5-9a75-377c57e2aece",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "440e28d4-94d9-411b-a8dc-c4b6cbe94c1a",
      "sourceHandle": "handle",
      "target": "7290ab1c-753a-4b22-b2cb-03f1906e3338",
      "targetHandle": "main"
    },
    {
      "id": "1dadc804-1c17-4a08-812a-bbf8766169ad",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f",
      "sourceHandle": "handle",
      "target": "388e32d7-f2c8-4488-a9ee-cc80832e4036",
      "targetHandle": "main"
    },
    {
      "id": "1ecd5249-992b-4be7-b03c-c92da3864b8f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "a2951d9c-41e1-4251-ae7b-ae7264ba7665",
      "sourceHandle": "true",
      "target": "c90823ea-a479-4a6a-9789-05008a1cc8dd",
      "targetHandle": "main"
    },
    {
      "id": "22499d90-7fab-4d7e-8b8e-58c1791d643f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "4e2319d0-5942-4300-a1a2-e9bc8162847e",
      "sourceHandle": "true",
      "target": "5c2796fb-3ce1-45f0-8c59-52f7f66afcba",
      "targetHandle": "main"
    },
    {
      "id": "2388a9aa-bd4b-4138-8265-417173bd4567",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "c24e033e-ab4e-4fc8-b1eb-9c899416a293",
      "sourceHandle": "main",
      "target": "5280840e-f8c3-4d10-a524-366741b6e482",
      "targetHandle": "main"
    },
    {
      "id": "23bd6773-4f7c-455a-9e8e-8606c9405ba8",
      "flow_id": null,
      "type": "default",
      "source": "b3bd71a4-cc0d-4a41-937e-4ab23d0f1709",
      "sourceHandle": "false",
      "target": "65c2fe5a-2e4a-4c95-8a8d-e001d6a07b49",
      "targetHandle": "main"
    },
    {
      "id": "24b45efd-c472-44de-8749-e8df8dfedc71",
      "flow_id": null,
      "type": "default",
      "source": "d7514480-7f8d-4739-9f5c-c02a60d45dcb",
      "sourceHandle": "main",
      "target": "78e44d89-0316-4ac7-abcf-4831a2ced86f",
      "targetHandle": "main"
    },
    {
      "id": "268a17ab-57b0-43da-bb31-9f1f171a195a",
      "flow_id": null,
      "type": "default",
      "source": "26262525-8a79-4c0a-8ed1-bc75cf098ff3",
      "sourceHandle": "main",
      "target": "c4206919-d635-41ed-92d0-41cb80bce475",
      "targetHandle": "main"
    },
    {
      "id": "281addbb-4a3a-4cf0-8e3e-7f08be7ce0b8",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "c90823ea-a479-4a6a-9789-05008a1cc8dd",
      "sourceHandle": "main",
      "target": "73af8247-9422-46bf-b90c-074e4fb6452a",
      "targetHandle": "main"
    },
    {
      "id": "28476049-d8c9-4b64-bcc4-c8064ad35464",
      "flow_id": null,
      "type": "default",
      "source": "6b8ee1c7-d966-4a78-bf5a-e4646f7137b7",
      "sourceHandle": "main",
      "target": "ea020ecc-4080-4d59-b866-559e8b4fbe0f",
      "targetHandle": "main"
    },
    {
      "id": "2a540763-75dc-435b-a266-05343f898428",
      "flow_id": null,
      "type": "default",
      "source": "5affa723-bbbe-4ec7-9851-ca78427d0292",
      "sourceHandle": "is_ready_to_handle",
      "target": "cb09adb4-2019-40e3-9b37-66225da75853",
      "targetHandle": "main"
    },
    {
      "id": "2d024112-97f0-4b20-ad1c-56ffdc2ced24",
      "flow_id": null,
      "type": "default",
      "source": "fee6389a-744b-4ae0-9b12-df85e4373be0",
      "sourceHandle": "main",
      "target": "d138743a-ef4e-4565-b5ef-2ad3ce7777e5",
      "targetHandle": "main"
    },
    {
      "id": "2d9e1fd1-262d-4e47-9919-2f4e9dc81e39",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "bd964f51-f3b1-4c9e-8ec6-5e3a39e5b706",
      "sourceHandle": "main",
      "target": "816453a0-1f48-498f-b20f-11337a433310",
      "targetHandle": "main"
    },
    {
      "id": "2e59ab39-530b-45e5-b2d7-cdfffc06b7d6",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "e0bc4e02-b96a-4bd0-835e-f54a32f1989d",
      "sourceHandle": "main",
      "target": "19d625c1-0397-4d18-804e-ddbb468006c0",
      "targetHandle": "main"
    },
    {
      "id": "35e11603-0e5e-40a2-a91a-29ae7eeb4dd1",
      "flow_id": null,
      "type": "default",
      "source": "73991df0-ff24-4cb1-9a50-b9963394be51",
      "sourceHandle": "main",
      "target": "b3bd71a4-cc0d-4a41-937e-4ab23d0f1709",
      "targetHandle": "main"
    },
    {
      "id": "371e4ada-f898-4612-9287-3c7b07d1d030",
      "flow_id": null,
      "type": "default",
      "source": "4a2b4df2-613e-43dd-aa0a-5fcf23d5373a",
      "sourceHandle": "true",
      "target": "9985779e-5906-4b6b-b386-073fd47eacae",
      "targetHandle": "main"
    },
    {
      "id": "3798ca1a-3611-4bc2-9d35-63dd0d526f91",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "8d04b199-21af-4185-9ea4-e6fc50b43313",
      "sourceHandle": "main",
      "target": "e087296f-7eae-4b3c-bea8-33653d86ea0e",
      "targetHandle": "main"
    },
    {
      "id": "37d353e5-3cec-4c1f-8a0d-bf9c645c820c",
      "flow_id": null,
      "type": "default",
      "source": "99392bd0-f0ff-49c4-85dc-ee9e9890a13a",
      "sourceHandle": "main",
      "target": "71006902-158e-41a7-98f4-4adbf71e662d",
      "targetHandle": "main"
    },
    {
      "id": "3c20c139-4a31-422a-85b4-935546b87843",
      "flow_id": null,
      "type": "default",
      "source": "cb6b6806-3ac0-4cc2-a166-8eb97b9624bc",
      "sourceHandle": "main",
      "target": "26262525-8a79-4c0a-8ed1-bc75cf098ff3",
      "targetHandle": "main"
    },
    {
      "id": "41cd3b18-44c4-481b-91d6-511b57b3ebbe",
      "flow_id": null,
      "type": "default",
      "source": "e01b62ed-7c5d-4cd9-9030-1da968009b3a",
      "sourceHandle": "main",
      "target": "9b225197-f940-4e73-afc3-6f9ec1ab51fb",
      "targetHandle": "main"
    },
    {
      "id": "41d876da-3000-465b-b4be-3070a2b4ec12",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "247b66f5-0faf-4b99-a8ea-ddcf1408452c",
      "sourceHandle": "handle",
      "target": "a22398d8-22ab-4b10-a8ea-8c00ffbe7cd4",
      "targetHandle": "main"
    },
    {
      "id": "429047fe-8171-4545-b103-d5e73e0f7e7a",
      "flow_id": null,
      "type": "default",
      "source": "26be6253-7dd4-45ac-a071-8260a8c5c54d",
      "sourceHandle": "true",
      "target": "a501d4da-730b-4f75-9533-452a56af807b",
      "targetHandle": "main"
    },
    {
      "id": "4295ddba-d9b4-40d8-a687-c7bcb51a3ce5",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "15bd1603-48d9-4f74-b53f-8a95a186ebc2",
      "sourceHandle": "false",
      "target": "3162a972-50ae-4108-ab13-2fa31d21ca04",
      "targetHandle": "main"
    },
    {
      "id": "45066ad6-4027-4316-90ba-5846d5ae538d",
      "flow_id": null,
      "type": "default",
      "source": "c8707e7a-0f32-430e-98ee-1abbb0945938",
      "sourceHandle": "main",
      "target": "d8da7e80-4151-4348-918b-ca821922d73b",
      "targetHandle": "main"
    },
    {
      "id": "458d0ed8-9e67-4238-ae02-7ddf4bd73724",
      "flow_id": null,
      "type": "default",
      "source": "d442375e-de98-4d50-8a40-ab0b2e68fcd5",
      "sourceHandle": "main",
      "target": "65c2fe5a-2e4a-4c95-8a8d-e001d6a07b49",
      "targetHandle": "main"
    },
    {
      "id": "464bee3a-b413-485d-9027-515a3050470c",
      "flow_id": null,
      "type": "default",
      "source": "426906a5-984a-4487-bbfa-f66d3ea609c7",
      "sourceHandle": "main",
      "target": "77588159-0037-4bd0-8459-6dec0e05fc12",
      "targetHandle": "main"
    },
    {
      "id": "47db34cf-9d95-4582-a4fa-3d775a05209f",
      "flow_id": null,
      "type": "default",
      "source": "a1a6f289-9ccc-40c6-a183-6be88dd6a56e",
      "sourceHandle": "true",
      "target": "cb6b6806-3ac0-4cc2-a166-8eb97b9624bc",
      "targetHandle": "main"
    },
    {
      "id": "484479b6-6388-48c4-9335-1888961dc5ea",
      "flow_id": null,
      "type": "default",
      "source": "287a2f67-55be-46c4-a299-21975f397bfc",
      "sourceHandle": "main",
      "target": "4c550c2f-a031-4a87-9fb0-62a1dfec3bc5",
      "targetHandle": "main"
    },
    {
      "id": "4844e730-78a0-45cc-b101-13ab44a846a0",
      "flow_id": null,
      "type": "default",
      "source": "e65833b5-52f2-4d8d-b57c-97033f03aab8",
      "sourceHandle": "main",
      "target": "fe3317df-796f-4810-872d-d9adcd355024",
      "targetHandle": "main"
    },
    {
      "id": "49ccd6c6-6b7b-4b7e-ae2a-36957f32a1f1",
      "flow_id": null,
      "type": "default",
      "source": "9985779e-5906-4b6b-b386-073fd47eacae",
      "sourceHandle": "true",
      "target": "61b5731e-09eb-4986-8ba4-a31b40ea6a3b",
      "targetHandle": "main"
    },
    {
      "id": "4be516e8-c69b-4e7b-85ee-86cd7b0015cb",
      "flow_id": null,
      "type": "default",
      "source": "294e54f6-f996-4e29-b697-64f94995681f",
      "sourceHandle": "true",
      "target": "3c8190ef-e586-4561-8b05-14d082f5e4a5",
      "targetHandle": "main"
    },
    {
      "id": "4ccf9dc4-796c-4686-8f44-cbe4986a3b2c",
      "flow_id": null,
      "type": "default",
      "source": "3f267bd3-2a7d-4c3a-a14a-77f58bd9df93",
      "sourceHandle": "true",
      "target": "459b32a5-654f-401a-927d-3c0be0b0d31b",
      "targetHandle": "main"
    },
    {
      "id": "4d541445-0b08-470e-a5de-687815b4eddc",
      "flow_id": null,
      "type": "default",
      "source": "a64aedfa-2c30-48de-8820-5dff7f9c7d11",
      "sourceHandle": "main",
      "target": "9a470b10-20cc-4cd1-a21e-0a8585a226cc",
      "targetHandle": "main"
    },
    {
      "id": "4fda5d0c-2050-42a8-86e7-a236eb97e383",
      "flow_id": null,
      "type": "default",
      "source": "0aa14b5c-1e37-45d4-bc3c-31c604cc2674",
      "sourceHandle": "false",
      "target": "73991df0-ff24-4cb1-9a50-b9963394be51",
      "targetHandle": "main"
    },
    {
      "id": "512fa3b0-2979-4b3d-a431-ee7e20df9325",
      "flow_id": null,
      "type": "default",
      "source": "388e32d7-f2c8-4488-a9ee-cc80832e4036",
      "sourceHandle": "true",
      "target": "4a2b4df2-613e-43dd-aa0a-5fcf23d5373a",
      "targetHandle": "main"
    },
    {
      "id": "5147f1dd-7075-4fb7-a1d0-f1817a2c15fe",
      "flow_id": null,
      "type": "default",
      "source": "b311afde-3bef-4c32-83cf-8f33272aac54",
      "sourceHandle": "main",
      "target": "793f8cc2-5c2e-40b5-9187-7ae2ce123825",
      "targetHandle": "main"
    },
    {
      "id": "51721df2-884b-4fc2-84b3-b6d7f7edc607",
      "flow_id": null,
      "type": "default",
      "source": "d1966969-7aff-4610-ac65-aa4291bc0337",
      "sourceHandle": "main",
      "target": "3ba020c0-8264-452e-a61a-80c2fe426b28",
      "targetHandle": "main"
    },
    {
      "id": "5566127e-36f2-4b2f-9cd0-0a401bf42b8b",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "843b40a4-964d-4a05-afed-a456dbc7fc1c",
      "sourceHandle": "main",
      "target": "064e3b7f-ff90-49a8-b877-18e7ec63071d",
      "targetHandle": "main"
    },
    {
      "id": "5726628b-bd93-43c0-9a01-580250f146d9",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "7290ab1c-753a-4b22-b2cb-03f1906e3338",
      "sourceHandle": "false",
      "target": "2856fa9d-cb6e-4d18-b50f-7c87b00bd5fb",
      "targetHandle": "main"
    },
    {
      "id": "5996038e-6e9b-4aa0-a96a-106552282780",
      "flow_id": null,
      "type": "default",
      "source": "b3bd71a4-cc0d-4a41-937e-4ab23d0f1709",
      "sourceHandle": "true",
      "target": "99392bd0-f0ff-49c4-85dc-ee9e9890a13a",
      "targetHandle": "main"
    },
    {
      "id": "5bad70e3-054e-4e1a-af73-fdd9132b6c00",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "064e3b7f-ff90-49a8-b877-18e7ec63071d",
      "sourceHandle": "true",
      "target": "efb3fd40-7634-4480-94e8-6a22381b1894",
      "targetHandle": "main"
    },
    {
      "id": "5c71abef-fc42-4001-8ecf-9353ff95c87d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "8acc2c3e-e126-484c-a224-37875559a292",
      "sourceHandle": "main",
      "target": "4d22cd67-6014-4846-bc3f-69f3a6beb393",
      "targetHandle": "main"
    },
    {
      "id": "5e6c93e2-d724-4eb9-b3d8-ae82579abbd8",
      "flow_id": null,
      "type": "default",
      "source": "61b5731e-09eb-4986-8ba4-a31b40ea6a3b",
      "sourceHandle": "main",
      "target": "b3de852a-b593-4d1e-9f69-1824300b5f66",
      "targetHandle": "main"
    },
    {
      "id": "6000c46c-edcc-46ae-8e80-736ba5a10016",
      "flow_id": null,
      "type": "default",
      "source": "339ff975-0ea2-4f37-b8aa-7b4b4d5e6922",
      "sourceHandle": "true",
      "target": "aa0b3f1a-8a99-4ea3-b8ed-7d52fc59820f",
      "targetHandle": "main"
    },
    {
      "id": "604b4f4e-708f-4926-a510-5d00501e2067",
      "flow_id": null,
      "type": "default",
      "source": "1343477b-7132-4127-ba75-66711e6c30cd",
      "sourceHandle": "main",
      "target": "f75c3ee7-f7e8-40a3-b8ff-9f6da3d5ae2b",
      "targetHandle": "main"
    },
    {
      "id": "65d87e4b-a4d7-496e-bdd5-a3e2d16ed5dc",
      "flow_id": null,
      "type": "default",
      "source": "388e32d7-f2c8-4488-a9ee-cc80832e4036",
      "sourceHandle": "true",
      "target": "05e7a388-c5e8-49c9-9f3e-a04271f037eb",
      "targetHandle": "main"
    },
    {
      "id": "68b292f5-910f-45be-b47f-150711ce21b8",
      "flow_id": null,
      "type": "default",
      "source": "67c22291-ff27-46d8-8f33-767b7f4db3b7",
      "sourceHandle": "main",
      "target": "417bcef2-e11a-4035-96ac-a40718faf8fe",
      "targetHandle": "main"
    },
    {
      "id": "6b976070-79a0-43a4-977e-a0e0d8d884d3",
      "flow_id": null,
      "type": "default",
      "source": "fe5578cf-2f70-404d-99b8-65202258a2c4",
      "sourceHandle": "main",
      "target": "626bc204-370d-4f1b-82cf-c3fd64793c4c",
      "targetHandle": "main"
    },
    {
      "id": "6e17bcd0-6555-4bd8-92bf-691a64722cc3",
      "flow_id": null,
      "type": "default",
      "source": "4c89bdb5-7bf6-4ab9-a9b7-92aaf4e4f23f",
      "sourceHandle": "handle",
      "target": "3469c8dd-e328-470a-8774-13e6f59a9a93",
      "targetHandle": "main"
    },
    {
      "id": "6e38cf06-66ab-4e67-b89c-46faf4d0478b",
      "flow_id": null,
      "type": "default",
      "source": "aa0b3f1a-8a99-4ea3-b8ed-7d52fc59820f",
      "sourceHandle": "true",
      "target": "a64aedfa-2c30-48de-8820-5dff7f9c7d11",
      "targetHandle": "main"
    },
    {
      "id": "6f9f9fa4-e675-4135-a44b-d944234f288b",
      "flow_id": null,
      "type": "default",
      "source": "5bb4805e-1291-4d4d-ba07-94ccd113476c",
      "sourceHandle": "true",
      "target": "b07dd7b1-8ba7-44b3-a177-da43b75c015b",
      "targetHandle": "main"
    },
    {
      "id": "70cb1358-54d0-4281-8396-7e546c67995c",
      "flow_id": null,
      "type": "default",
      "source": "581552ea-715c-45ce-b0bc-ccb63a25f89b",
      "sourceHandle": "main",
      "target": "15d9a3fe-beed-4081-abc5-68263dabdf06",
      "targetHandle": "main"
    },
    {
      "id": "71a08529-a663-48da-9df1-d461d89028ef",
      "flow_id": null,
      "type": "default",
      "source": "c8b4f7ae-2a3c-44f9-9b9e-9580ec102e2c",
      "sourceHandle": "main",
      "target": "3f267bd3-2a7d-4c3a-a14a-77f58bd9df93",
      "targetHandle": "main"
    },
    {
      "id": "73c4b33f-ea28-4777-9dd8-73aeb9c07e51",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "15bd1603-48d9-4f74-b53f-8a95a186ebc2",
      "sourceHandle": "true",
      "target": "c90823ea-a479-4a6a-9789-05008a1cc8dd",
      "targetHandle": "main"
    },
    {
      "id": "78bc9cd6-ee12-45c3-8864-89bdeda1af52",
      "flow_id": null,
      "type": "default",
      "source": "b534897b-cb79-46cd-9f1a-4ca711ad8b07",
      "sourceHandle": "main",
      "target": "a0ab3012-c89a-4fda-8b5c-bd8ec42125d1",
      "targetHandle": "main"
    },
    {
      "id": "79304cff-ef90-47c8-9145-f6fe0eb09bb9",
      "flow_id": null,
      "type": "default",
      "source": "e01b62ed-7c5d-4cd9-9030-1da968009b3a",
      "sourceHandle": "main",
      "target": "6ce10648-128f-48a7-b3e3-8ed9e59ece59",
      "targetHandle": "main"
    },
    {
      "id": "79a54448-5fe6-4b66-92db-ff06e8242654",
      "flow_id": null,
      "type": "default",
      "source": "fe3317df-796f-4810-872d-d9adcd355024",
      "sourceHandle": "true",
      "target": "0883ee65-9d68-44a4-8edf-f6e75f45ca7d",
      "targetHandle": "main"
    },
    {
      "id": "7ad05e4e-45f3-42cd-abe9-77e9506747c1",
      "flow_id": null,
      "type": "default",
      "source": "71006902-158e-41a7-98f4-4adbf71e662d",
      "sourceHandle": "main",
      "target": "359ff1d2-c0bb-4609-8571-dc5f719912ed",
      "targetHandle": "main"
    },
    {
      "id": "7e168238-845f-45bf-be06-aaeb85a79e1d",
      "flow_id": null,
      "type": "default",
      "source": "5fe0b604-aae5-445d-ae3b-b3741acfaa4e",
      "sourceHandle": "main",
      "target": "0684c37c-b2c5-4f18-8edd-bf15f76bd700",
      "targetHandle": "main"
    },
    {
      "id": "7f96f833-a655-483e-8886-b7100cf7c249",
      "flow_id": null,
      "type": "default",
      "source": "3ba020c0-8264-452e-a61a-80c2fe426b28",
      "sourceHandle": "true",
      "target": "fe5578cf-2f70-404d-99b8-65202258a2c4",
      "targetHandle": "main"
    },
    {
      "id": "8023ac27-952d-401b-918f-a396e5d4ac3c",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "064e3b7f-ff90-49a8-b877-18e7ec63071d",
      "sourceHandle": "false",
      "target": "9769f948-22b7-428d-a09f-109b35b318e1",
      "targetHandle": "main"
    },
    {
      "id": "82c4d600-ef18-40a2-a278-fbc2d97402b9",
      "flow_id": null,
      "type": "default",
      "source": "9a470b10-20cc-4cd1-a21e-0a8585a226cc",
      "sourceHandle": "false",
      "target": "c8b4f7ae-2a3c-44f9-9b9e-9580ec102e2c",
      "targetHandle": "main"
    },
    {
      "id": "832393e9-8736-432f-a049-9813836313ce",
      "flow_id": null,
      "type": "default",
      "source": "a2951d9c-41e1-4251-ae7b-ae7264ba7665",
      "sourceHandle": "true",
      "target": "eb8f961d-64f9-46f5-946e-c8eb6165ebdd",
      "targetHandle": "main"
    },
    {
      "id": "8406befd-4c38-4c4f-93ce-72f553df8376",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "ee90eab5-6399-4737-8dbe-74320cdea988",
      "sourceHandle": "true",
      "target": "efb3fd40-7634-4480-94e8-6a22381b1894",
      "targetHandle": "main"
    },
    {
      "id": "841efedf-0dd3-4462-86d5-ab30955ba67c",
      "flow_id": null,
      "type": "default",
      "source": "876c06fc-75e3-4955-bd62-8d8cda35875e",
      "sourceHandle": "true",
      "target": "c24e033e-ab4e-4fc8-b1eb-9c899416a293",
      "targetHandle": "main"
    },
    {
      "id": "84638432-dd39-4ba6-86b7-4f73098f70db",
      "flow_id": null,
      "type": "default",
      "source": "5489ce33-972c-429f-bd0a-5453678e18f8",
      "sourceHandle": "main",
      "target": "a6b3921c-8540-4334-9d0f-fb7506638380",
      "targetHandle": "main"
    },
    {
      "id": "84dfa924-bf7b-4646-8468-bbba4fe3940f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "b07dd7b1-8ba7-44b3-a177-da43b75c015b",
      "sourceHandle": "main",
      "target": "04462798-77e2-425c-b242-1ac34545b6ae",
      "targetHandle": "main"
    },
    {
      "id": "85ed613f-9237-464b-ae91-4e02e016361d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "5c2796fb-3ce1-45f0-8c59-52f7f66afcba",
      "sourceHandle": "main",
      "target": "3685ff77-08cd-4c42-afd6-315b737afba5",
      "targetHandle": "main"
    },
    {
      "id": "86e9987a-be1d-4945-82b1-c52cccca7069",
      "flow_id": null,
      "type": "default",
      "source": "c59e02d0-c623-4974-8b35-35850b13ed02",
      "sourceHandle": "main",
      "target": "b534897b-cb79-46cd-9f1a-4ca711ad8b07",
      "targetHandle": "main"
    },
    {
      "id": "87554b73-1d7e-4925-901b-60ee52a530c6",
      "flow_id": null,
      "type": "default",
      "source": "7381d844-e27f-4a97-a360-2e533a08ff39",
      "sourceHandle": "true",
      "target": "e65833b5-52f2-4d8d-b57c-97033f03aab8",
      "targetHandle": "main"
    },
    {
      "id": "87de21ce-b328-46d6-8b19-af08d399dd3f",
      "flow_id": null,
      "type": "default",
      "source": "e7370189-4f0e-4cee-bdc3-765ba074c6ae",
      "sourceHandle": "main",
      "target": "c458a4c7-3767-4ba0-94b1-5f697de27dd7",
      "targetHandle": "main"
    },
    {
      "id": "89057406-d6f5-4236-a0dc-2986ac9cc690",
      "flow_id": null,
      "type": "default",
      "source": "4a2b4df2-613e-43dd-aa0a-5fcf23d5373a",
      "sourceHandle": "true",
      "target": "4e2319d0-5942-4300-a1a2-e9bc8162847e",
      "targetHandle": "main"
    },
    {
      "id": "894835da-cf7b-4565-81cc-855d2c08cf71",
      "flow_id": null,
      "type": "default",
      "source": "0883ee65-9d68-44a4-8edf-f6e75f45ca7d",
      "sourceHandle": "main",
      "target": "f52c1daa-806b-427f-8e9b-8d877741cd52",
      "targetHandle": "main"
    },
    {
      "id": "8cc17568-6c69-45d5-a399-afb9fef7e7b2",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "4cbc8429-9aa3-4d72-af1b-2f1028694a22",
      "sourceHandle": "main",
      "target": "4a3de1b4-fb6c-4421-ad03-c3e9d028427f",
      "targetHandle": "main"
    },
    {
      "id": "8d2296df-d7ad-4460-9c02-2f2fe2e88f30",
      "flow_id": null,
      "type": "default",
      "source": "c13c1f4d-571e-476b-9734-4f445c8c5889",
      "sourceHandle": "main",
      "target": "70798b37-50ef-49bb-8809-4ab88fb46a78",
      "targetHandle": "main"
    },
    {
      "id": "8d550bbf-c6d8-49bc-85fa-96dca21b8423",
      "flow_id": null,
      "type": "default",
      "source": "2d25ced3-eb36-482a-99b5-330646742a92",
      "sourceHandle": "main",
      "target": "865c033d-bc6c-4f72-844c-311880ded14c",
      "targetHandle": "main"
    },
    {
      "id": "9014f8f8-ef46-4ed7-a243-02ee493197c1",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "cf514fa5-4e97-48f9-a8cb-119b8bcc444f",
      "sourceHandle": "main",
      "target": "6544851f-f015-4d02-9af6-238a8c6bed04",
      "targetHandle": "main"
    },
    {
      "id": "90420684-aaba-4435-b003-94fe46e965cf",
      "flow_id": null,
      "type": "default",
      "source": "93d2daa4-14eb-4058-9fda-be6debbd3b5a",
      "sourceHandle": "main",
      "target": "1a01ee9e-d00e-40eb-9f22-0e16f57e037f",
      "targetHandle": "main"
    },
    {
      "id": "90f1b013-3bad-45fc-aca2-ded469be63c7",
      "flow_id": null,
      "type": "default",
      "source": "65c2fe5a-2e4a-4c95-8a8d-e001d6a07b49",
      "sourceHandle": "true",
      "target": "12f5a96a-a3be-439d-876c-aa7a9098cd9d",
      "targetHandle": "main"
    },
    {
      "id": "91c1dfbb-445a-4919-a1b6-e4cec8a9a85a",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "ee90eab5-6399-4737-8dbe-74320cdea988",
      "sourceHandle": "false",
      "target": "843b40a4-964d-4a05-afed-a456dbc7fc1c",
      "targetHandle": "main"
    },
    {
      "id": "92d544df-b58f-47be-8b05-8008781565e0",
      "flow_id": null,
      "type": "default",
      "source": "cb09adb4-2019-40e3-9b37-66225da75853",
      "sourceHandle": "true",
      "target": "339ff975-0ea2-4f37-b8aa-7b4b4d5e6922",
      "targetHandle": "main"
    },
    {
      "id": "9534a89f-d921-434f-b8b8-d9b614f6c9a1",
      "flow_id": null,
      "type": "default",
      "source": "7c3835da-d347-47bd-b1ac-0814b8ad8dba",
      "sourceHandle": "main",
      "target": "d442375e-de98-4d50-8a40-ab0b2e68fcd5",
      "targetHandle": "main"
    },
    {
      "id": "97109326-397e-40b3-a2f1-6a786bd65790",
      "flow_id": null,
      "type": "default",
      "source": "0aa14b5c-1e37-45d4-bc3c-31c604cc2674",
      "sourceHandle": "true",
      "target": "73991df0-ff24-4cb1-9a50-b9963394be51",
      "targetHandle": "main"
    },
    {
      "id": "98317c50-f6c0-4e6b-b822-047329656a1d",
      "flow_id": null,
      "type": "default",
      "source": "7381d844-e27f-4a97-a360-2e533a08ff39",
      "sourceHandle": "true",
      "target": "93d2daa4-14eb-4058-9fda-be6debbd3b5a",
      "targetHandle": "main"
    },
    {
      "id": "9843d8d8-712f-4df7-a2ae-413d7dfd91c0",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "9681cf26-ac89-42ad-a6b9-b21f8419f800",
      "sourceHandle": "handle",
      "target": "876c06fc-75e3-4955-bd62-8d8cda35875e",
      "targetHandle": "main"
    },
    {
      "id": "9c1249f3-897f-441a-b0b9-0aaffa20f449",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "750dd1ad-58af-4235-b6fc-ff90efba1d0c",
      "sourceHandle": "main",
      "target": "e01b62ed-7c5d-4cd9-9030-1da968009b3a",
      "targetHandle": "main"
    },
    {
      "id": "9c748e28-a9c4-4250-9102-b19c7cd5931c",
      "flow_id": null,
      "type": "default",
      "source": "447f4f50-5996-42f5-970d-496c7232011c",
      "sourceHandle": "main",
      "target": "fee6389a-744b-4ae0-9b12-df85e4373be0",
      "targetHandle": "main"
    },
    {
      "id": "9c9b675d-cdca-4217-88c7-77683f53e411",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "6544851f-f015-4d02-9af6-238a8c6bed04",
      "sourceHandle": "main",
      "target": "a2951d9c-41e1-4251-ae7b-ae7264ba7665",
      "targetHandle": "main"
    },
    {
      "id": "9db6520c-7037-4490-8efd-39e0e22c8fbe",
      "flow_id": null,
      "type": "default",
      "source": "440e28d4-94d9-411b-a8dc-c4b6cbe94c1a",
      "sourceHandle": "handle",
      "target": "c492c093-62f7-4c32-92fe-3c0863ab05af",
      "targetHandle": "main"
    },
    {
      "id": "9e813e0a-f8e4-4b4f-a803-6bc7526f9c50",
      "flow_id": null,
      "type": "default",
      "source": "1a052765-5359-493f-8541-2182a3a77140",
      "sourceHandle": "true",
      "target": "294e54f6-f996-4e29-b697-64f94995681f",
      "targetHandle": "main"
    },
    {
      "id": "a06e6073-51b1-4225-bade-11f01371d38d",
      "flow_id": null,
      "type": "default",
      "source": "3685ff77-08cd-4c42-afd6-315b737afba5",
      "sourceHandle": "true",
      "target": "4cbc8429-9aa3-4d72-af1b-2f1028694a22",
      "targetHandle": "main"
    },
    {
      "id": "a123db2b-8371-41e5-81b1-ed6c039f32d3",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "a22398d8-22ab-4b10-a8ea-8c00ffbe7cd4",
      "sourceHandle": "false",
      "target": "3162a972-50ae-4108-ab13-2fa31d21ca04",
      "targetHandle": "main"
    },
    {
      "id": "a63a2a65-1a7a-4b24-a326-45ab5a868d9c",
      "flow_id": null,
      "type": "default",
      "source": "67a31455-d48c-446c-acdd-6393080ec5c4",
      "sourceHandle": "false",
      "target": "b311afde-3bef-4c32-83cf-8f33272aac54",
      "targetHandle": "main"
    },
    {
      "id": "a67aaeab-fcf9-42f6-ae27-5f1b349b5d27",
      "flow_id": null,
      "type": "default",
      "source": "6708d884-f784-4253-90cb-a19a181c6f60",
      "sourceHandle": "true",
      "target": "2d25ced3-eb36-482a-99b5-330646742a92",
      "targetHandle": "main"
    },
    {
      "id": "a8c15ecc-f499-4ecd-a8af-ebe93ede840a",
      "flow_id": null,
      "type": "default",
      "source": "0a5f69e3-32fd-42e7-9ced-de4a589271b5",
      "sourceHandle": "main",
      "target": "a3fc8cfd-653b-4c27-afba-501cf074d96f",
      "targetHandle": "main"
    },
    {
      "id": "ad6e2c25-9f95-4543-ba2c-25add2c31a11",
      "flow_id": null,
      "type": "default",
      "source": "b3de852a-b593-4d1e-9f69-1824300b5f66",
      "sourceHandle": "main",
      "target": "c13c1f4d-571e-476b-9734-4f445c8c5889",
      "targetHandle": "main"
    },
    {
      "id": "aee47898-0dde-4792-9e2c-9bac8025055f",
      "flow_id": null,
      "type": "default",
      "source": "d8da7e80-4151-4348-918b-ca821922d73b",
      "sourceHandle": "true",
      "target": "447f4f50-5996-42f5-970d-496c7232011c",
      "targetHandle": "main"
    },
    {
      "id": "afccd8b9-e132-4dfd-ad9d-4097d8d7fa1b",
      "flow_id": null,
      "type": "default",
      "source": "67a31455-d48c-446c-acdd-6393080ec5c4",
      "sourceHandle": "false",
      "target": "0ae39376-8209-4dfc-a444-0131389f085a",
      "targetHandle": "main"
    },
    {
      "id": "b1bd4de4-a13e-456d-9fab-35d5c9cfec2d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "8acc2c3e-e126-484c-a224-37875559a292",
      "sourceHandle": "main",
      "target": "750dd1ad-58af-4235-b6fc-ff90efba1d0c",
      "targetHandle": "main"
    },
    {
      "id": "b2faa513-baca-43fe-8c8f-68e4fd87bc71",
      "flow_id": null,
      "type": "default",
      "source": "0aa14b5c-1e37-45d4-bc3c-31c604cc2674",
      "sourceHandle": "true",
      "target": "5fe0b604-aae5-445d-ae3b-b3741acfaa4e",
      "targetHandle": "main"
    },
    {
      "id": "b74a8aae-4d05-4584-9b1a-380f526ad8cb",
      "flow_id": null,
      "type": "default",
      "source": "0ae39376-8209-4dfc-a444-0131389f085a",
      "sourceHandle": "true",
      "target": "6b8ee1c7-d966-4a78-bf5a-e4646f7137b7",
      "targetHandle": "main"
    },
    {
      "id": "bc3297e6-185d-4e8c-81c8-2f10fbebeaa9",
      "flow_id": null,
      "type": "default",
      "source": "f30159ee-de80-4772-bd03-d86a5063a8de",
      "sourceHandle": "handle",
      "target": "d592fe33-1336-41b9-b61f-01ba2e5d5e7e",
      "targetHandle": "main"
    },
    {
      "id": "beb09780-d7d9-4099-b77b-8a6f6f413c50",
      "flow_id": null,
      "type": "default",
      "source": "1a052765-5359-493f-8541-2182a3a77140",
      "sourceHandle": "false",
      "target": "7381d844-e27f-4a97-a360-2e533a08ff39",
      "targetHandle": "main"
    },
    {
      "id": "c0646bff-1282-4e49-a25f-d36178a547be",
      "flow_id": null,
      "type": "default",
      "source": "339ff975-0ea2-4f37-b8aa-7b4b4d5e6922",
      "sourceHandle": "true",
      "target": "2b46beaf-cf09-44f5-9edd-935b6ec8bacd",
      "targetHandle": "main"
    },
    {
      "id": "c152f064-7c02-4e45-ba3c-abe5b7b3c39b",
      "flow_id": null,
      "type": "default",
      "source": "6b151c0d-cef0-4d84-bd9b-7f3a70686733",
      "sourceHandle": "main",
      "target": "fee6389a-744b-4ae0-9b12-df85e4373be0",
      "targetHandle": "main"
    },
    {
      "id": "c1da3cbc-ea9e-4d2b-98f5-86d4df2f3639",
      "flow_id": null,
      "type": "default",
      "source": "4c550c2f-a031-4a87-9fb0-62a1dfec3bc5",
      "sourceHandle": "true",
      "target": "d1966969-7aff-4610-ac65-aa4291bc0337",
      "targetHandle": "main"
    },
    {
      "id": "c23ac921-ae4d-478a-9b1b-c7ad2ec02c49",
      "flow_id": null,
      "type": "default",
      "source": "67a31455-d48c-446c-acdd-6393080ec5c4",
      "sourceHandle": "true",
      "target": "622d8bd8-7f15-4179-a06e-63eaa95341c6",
      "targetHandle": "main"
    },
    {
      "id": "c2e26b78-3ced-46d3-ba66-70202aaae39f",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "a2951d9c-41e1-4251-ae7b-ae7264ba7665",
      "sourceHandle": "false",
      "target": "15bd1603-48d9-4f74-b53f-8a95a186ebc2",
      "targetHandle": "main"
    },
    {
      "id": "c8178614-bfd0-45ff-b86f-88c773afeddd",
      "flow_id": null,
      "type": "default",
      "source": "773a7be8-ef24-4b58-833f-9fb96db1d006",
      "sourceHandle": "main",
      "target": "6708d884-f784-4253-90cb-a19a181c6f60",
      "targetHandle": "main"
    },
    {
      "id": "c8d8bf3a-d7f8-4bdb-b157-6ac5f40ae0ca",
      "flow_id": null,
      "type": "default",
      "source": "459b32a5-654f-401a-927d-3c0be0b0d31b",
      "sourceHandle": "main",
      "target": "c59e02d0-c623-4974-8b35-35850b13ed02",
      "targetHandle": "main"
    },
    {
      "id": "c9e5df8e-17a1-40a8-9b3c-a31e91c8f3f8",
      "flow_id": null,
      "type": "default",
      "source": "a2951d9c-41e1-4251-ae7b-ae7264ba7665",
      "sourceHandle": "false",
      "target": "84352b4c-af5a-48b4-ba84-f09089f25828",
      "targetHandle": "main"
    },
    {
      "id": "cd939834-016e-493c-9bb9-212076beb68e",
      "flow_id": null,
      "type": "default",
      "source": "9b225197-f940-4e73-afc3-6f9ec1ab51fb",
      "sourceHandle": "main",
      "target": "bf939d96-ec74-4096-8570-c26c2b54de82",
      "targetHandle": "main"
    },
    {
      "id": "ceebaec6-1198-4d17-b33c-a99ecd1f24c3",
      "flow_id": null,
      "type": "default",
      "source": "cb09adb4-2019-40e3-9b37-66225da75853",
      "sourceHandle": "false",
      "target": "43a654ff-4267-4c67-825f-4d74c08ea8c8",
      "targetHandle": "main"
    },
    {
      "id": "d04e00e2-4976-41c3-9e8a-5987de93c36a",
      "flow_id": null,
      "type": "default",
      "source": "3ba020c0-8264-452e-a61a-80c2fe426b28",
      "sourceHandle": "false",
      "target": "ee469795-d949-469d-a443-dd08f04c6905",
      "targetHandle": "main"
    },
    {
      "id": "d119b8f9-c15f-4eb3-9639-ca5308f2a453",
      "flow_id": null,
      "type": "default",
      "source": "d8da7e80-4151-4348-918b-ca821922d73b",
      "sourceHandle": "false",
      "target": "6b151c0d-cef0-4d84-bd9b-7f3a70686733",
      "targetHandle": "main"
    },
    {
      "id": "d20053c8-5eed-4ea7-b885-cbd73431b117",
      "flow_id": null,
      "type": "default",
      "source": "2b46beaf-cf09-44f5-9edd-935b6ec8bacd",
      "sourceHandle": "true",
      "target": "aefc0f76-1ac8-406d-958b-8b5f52b6b755",
      "targetHandle": "main"
    },
    {
      "id": "d341ca42-d31a-47c5-9bce-2b06d51de4d9",
      "flow_id": null,
      "type": "default",
      "source": "3c8190ef-e586-4561-8b05-14d082f5e4a5",
      "sourceHandle": "main",
      "target": "c6650d74-35fd-41c0-a730-cd501eab66c4",
      "targetHandle": "main"
    },
    {
      "id": "d3faa0b9-537d-400e-9696-dc744aafa0e4",
      "flow_id": null,
      "type": "default",
      "source": "aefc0f76-1ac8-406d-958b-8b5f52b6b755",
      "sourceHandle": "main",
      "target": "2c0ee4a9-d48e-434d-8df0-e3b86f64ad51",
      "targetHandle": "main"
    },
    {
      "id": "d608c4b6-2312-494c-aafc-e54c85e860f6",
      "flow_id": null,
      "type": "default",
      "source": "84352b4c-af5a-48b4-ba84-f09089f25828",
      "sourceHandle": "main",
      "target": "0aa14b5c-1e37-45d4-bc3c-31c604cc2674",
      "targetHandle": "main"
    },
    {
      "id": "d60cc382-e0dc-45c6-a39a-c7c7015bef24",
      "flow_id": null,
      "type": "default",
      "source": "a501d4da-730b-4f75-9533-452a56af807b",
      "sourceHandle": "main",
      "target": "b278d9d2-6687-4638-89ba-570ef1fec46a",
      "targetHandle": "main"
    },
    {
      "id": "d661ed75-1958-4869-a219-b5469fe9315a",
      "flow_id": null,
      "type": "default",
      "source": "4dd0377b-bb8a-4649-935d-b4fe64c5ad5e",
      "sourceHandle": "main",
      "target": "0a5f69e3-32fd-42e7-9ced-de4a589271b5",
      "targetHandle": "main"
    },
    {
      "id": "d78766f5-8260-4439-a015-4864e13281be",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "efb3fd40-7634-4480-94e8-6a22381b1894",
      "sourceHandle": "main",
      "target": "8c52e144-303d-42cc-bda3-4afce1e60a20",
      "targetHandle": "main"
    },
    {
      "id": "d79b7779-520f-47e8-98f8-4eb2acf3e013",
      "flow_id": null,
      "type": "default",
      "source": "0684c37c-b2c5-4f18-8edd-bf15f76bd700",
      "sourceHandle": "main",
      "target": "9ae5b8a7-dea2-4311-8553-95e519b04ecd",
      "targetHandle": "main"
    },
    {
      "id": "d88e254a-f4bc-4242-9981-b67e6f604750",
      "flow_id": null,
      "type": "default",
      "source": "3685ff77-08cd-4c42-afd6-315b737afba5",
      "sourceHandle": "false",
      "target": "773a7be8-ef24-4b58-833f-9fb96db1d006",
      "targetHandle": "main"
    },
    {
      "id": "db27bd30-489b-489a-b6fb-0985b3f9a86f",
      "flow_id": null,
      "type": "default",
      "source": "10136e92-1c32-4a6e-be3f-7ac23a351228",
      "sourceHandle": "main",
      "target": "83be295c-d314-4741-b4e2-ba6eaf0e88c7",
      "targetHandle": "main"
    },
    {
      "id": "dc4782a4-b8c2-4c86-a2d5-73ff6a925ccb",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "5bb4805e-1291-4d4d-ba07-94ccd113476c",
      "sourceHandle": "false",
      "target": "da8e6798-6ebb-49bb-8481-b68d84ad13f4",
      "targetHandle": "main"
    },
    {
      "id": "dc7cfcbf-2adf-408d-b18b-8adf97e4e8d0",
      "flow_id": null,
      "type": "default",
      "source": "b3bd71a4-cc0d-4a41-937e-4ab23d0f1709",
      "sourceHandle": "true",
      "target": "f09ba934-dbdd-46d8-a499-4ae6ce53913d",
      "targetHandle": "main"
    },
    {
      "id": "dde98eaf-6251-462d-98c6-ebd2b29fec63",
      "flow_id": null,
      "type": "default",
      "source": "3c8190ef-e586-4561-8b05-14d082f5e4a5",
      "sourceHandle": "main",
      "target": "26be6253-7dd4-45ac-a071-8260a8c5c54d",
      "targetHandle": "main"
    },
    {
      "id": "e0bad2e0-9e55-454a-bf09-3aa89a5a10e8",
      "flow_id": null,
      "type": "default",
      "source": "f52c1daa-806b-427f-8e9b-8d877741cd52",
      "sourceHandle": "main",
      "target": "426906a5-984a-4487-bbfa-f66d3ea609c7",
      "targetHandle": "main"
    },
    {
      "id": "e25ec0e9-7a31-496f-a106-306747bcf603",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "876c06fc-75e3-4955-bd62-8d8cda35875e",
      "sourceHandle": "false",
      "target": "a732d042-1d6b-4747-b588-7f01fd032653",
      "targetHandle": "main"
    },
    {
      "id": "e722426d-7b6e-491a-92d0-70e544b2549d",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "f30159ee-de80-4772-bd03-d86a5063a8de",
      "sourceHandle": "handle",
      "target": "5bb4805e-1291-4d4d-ba07-94ccd113476c",
      "targetHandle": "main"
    },
    {
      "id": "e7ae0ed4-78c4-47a6-946e-90008f0ad72a",
      "flow_id": null,
      "type": "default",
      "source": "1e507e27-f032-453e-9cc3-c17cba31820a",
      "sourceHandle": "true",
      "target": "c8707e7a-0f32-430e-98ee-1abbb0945938",
      "targetHandle": "main"
    },
    {
      "id": "e940dcff-1d0a-4078-a5d0-f962b76bea28",
      "flow_id": null,
      "type": "default",
      "source": "e087296f-7eae-4b3c-bea8-33653d86ea0e",
      "sourceHandle": "main",
      "target": "9ea860bb-ffaf-43f4-9e3b-5dc07df866ec",
      "targetHandle": "main"
    },
    {
      "id": "eb276808-7c40-4358-8cbc-6fd0b5fa3aae",
      "flow_id": null,
      "type": "default",
      "source": "876c5174-e570-48cf-b771-1544680f3f56",
      "sourceHandle": "main",
      "target": "1a052765-5359-493f-8541-2182a3a77140",
      "targetHandle": "main"
    },
    {
      "id": "eb91e20e-81e5-4640-9228-0dd4a959a71f",
      "flow_id": null,
      "type": "default",
      "source": "2c0ee4a9-d48e-434d-8df0-e3b86f64ad51",
      "sourceHandle": "main",
      "target": "166cf3f5-f201-4922-a35a-6b7ed965b8d6",
      "targetHandle": "main"
    },
    {
      "id": "ebf1b6aa-b074-4c69-871e-e9146bae8b88",
      "flow_id": null,
      "type": "default",
      "source": "7381d844-e27f-4a97-a360-2e533a08ff39",
      "sourceHandle": "false",
      "target": "e65833b5-52f2-4d8d-b57c-97033f03aab8",
      "targetHandle": "main"
    },
    {
      "id": "ec17667f-7df6-4c6f-a94d-c55c224773e1",
      "flow_id": null,
      "type": "default",
      "source": "05e7a388-c5e8-49c9-9f3e-a04271f037eb",
      "sourceHandle": "main",
      "target": "67a31455-d48c-446c-acdd-6393080ec5c4",
      "targetHandle": "main"
    },
    {
      "id": "ec72bb1f-053f-445a-a22e-ab4b632d753b",
      "flow_id": null,
      "type": "default",
      "source": "e087296f-7eae-4b3c-bea8-33653d86ea0e",
      "sourceHandle": "main",
      "target": "67f4c6c9-fcb9-4e18-b6c4-2ca6b0deb022",
      "targetHandle": "main"
    },
    {
      "id": "f0042b49-773f-43e6-85f7-0eb5765123f9",
      "flow_id": null,
      "type": "default",
      "source": "9a470b10-20cc-4cd1-a21e-0a8585a226cc",
      "sourceHandle": "true",
      "target": "1343477b-7132-4127-ba75-66711e6c30cd",
      "targetHandle": "main"
    },
    {
      "id": "f3e494ca-5f96-42a0-98dd-a0fc5a5a7fab",
      "flow_id": null,
      "type": "default",
      "source": "166cf3f5-f201-4922-a35a-6b7ed965b8d6",
      "sourceHandle": "main",
      "target": "b57bda50-9e79-4814-afc6-abd851affed9",
      "targetHandle": "main"
    },
    {
      "id": "f58761b7-bb6f-4ad8-a0b8-a9972db2bc88",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "77c06a33-2d37-4f7e-9711-8ad299da3bfd",
      "sourceHandle": "main",
      "target": "8d04b199-21af-4185-9ea4-e6fc50b43313",
      "targetHandle": "main"
    },
    {
      "id": "f68fa803-a9d4-4d35-bd09-b9b4cc202ddc",
      "flow_id": "dc072a0c-2d64-4299-afae-531b1cd43c7b",
      "type": "default",
      "source": "a833b721-1046-403a-8782-155957c5bca2",
      "sourceHandle": "main",
      "target": "3fd481f5-0da0-4d3f-b171-c218be02b9c6",
      "targetHandle": "main"
    },
    {
      "id": "f878cf08-be0e-433c-b357-2730fc39967b",
      "flow_id": null,
      "type": "default",
      "source": "cb09adb4-2019-40e3-9b37-66225da75853",
      "sourceHandle": "true",
      "target": "876c5174-e570-48cf-b771-1544680f3f56",
      "targetHandle": "main"
    },
    {
      "id": "fa2ae1b6-e9a3-45af-afd8-d3a53fa5184c",
      "flow_id": null,
      "type": "default",
      "source": "581552ea-715c-45ce-b0bc-ccb63a25f89b",
      "sourceHandle": "main",
      "target": "c1889b1a-7c1e-481f-b251-ba5bc3fddb10",
      "targetHandle": "main"
    },
    {
      "id": "fee3b3b8-c0c6-49b3-b609-067ae8aa6956",
      "flow_id": null,
      "type": "default",
      "source": "eb8f961d-64f9-46f5-946e-c8eb6165ebdd",
      "sourceHandle": "true",
      "target": "e7370189-4f0e-4cee-bdc3-765ba074c6ae",
      "targetHandle": "main"
    }
  ],
  "wizard": [
    {
      "id": "331efcb4-17df-4cc8-a582-cf113c4cae9b",
      "nodeId": "331efcb4-17df-4cc8-a582-cf113c4cae9b",
      "source": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key",
      "nodeType": {
        "id": "moysklad-jsonapi"
      },
      "nodeSource": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data",
      "properties": {
        "id": "331efcb4-17df-4cc8-a582-cf113c4cae9b",
        "name": "moysklad_json_api_key",
        "type": "credential",
        "required": true,
        "nodeTypeId": "moysklad-jsonapi",
        "description": null,
        "displayName": "Учетные данные",
        "displayOptions": {}
      },
      "nodesSource": "graph.nodes",
      "nodeDataSource": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials.moysklad_json_api_key",
      "nodeNameSource": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.name",
      "credentialsSource": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.credentials",
      "expressionsSource": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.expressions",
      "nodeTypesResource": "node_types/detailed",
      "currentContextSource": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.properties",
      "formRootContextSource": "graph.nodes.331efcb4-17df-4cc8-a582-cf113c4cae9b.data.properties"
    },
    {
      "id": "8d83fa05-160c-4891-b274-3d1bda475357",
      "nodeId": "8d83fa05-160c-4891-b274-3d1bda475357",
      "source": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key",
      "nodeType": {
        "id": "moysklad-phoneapi"
      },
      "nodeSource": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data",
      "properties": {
        "id": "8d83fa05-160c-4891-b274-3d1bda475357",
        "name": "moysklad_phone_api_key",
        "type": "credential",
        "required": true,
        "nodeTypeId": "moysklad-phoneapi",
        "displayName": "Авторизация для звонков",
        "displayOptions": {}
      },
      "nodesSource": "graph.nodes",
      "nodeDataSource": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials.moysklad_phone_api_key",
      "nodeNameSource": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.name",
      "credentialsSource": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.credentials",
      "expressionsSource": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.expressions",
      "nodeTypesResource": "node_types/detailed",
      "currentContextSource": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.properties",
      "formRootContextSource": "graph.nodes.8d83fa05-160c-4891-b274-3d1bda475357.data.properties"
    },
    {
      "id": "f33e4cbc-4207-4c2a-baec-825c280dcfe0",
      "properties": {
        "name": null,
        "type": "container",
        "items": [
          {
            "id": "fb041d2c-6572-49fe-9e8a-5fd6d7423367",
            "properties": {
              "name": "Основное",
              "type": "container",
              "items": [
                {
                  "id": "4a34bacc-024d-4650-8c5f-0e8cd03c469a",
                  "properties": {
                    "name": "Фильтр по виртуальным номерам",
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.1.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "Фильтровать по виртуальным номерам",
                          "type": "boolean",
                          "default": "",
                          "description": "Фильтр по звонкам",
                          "displayName": "Фильтровать звонки",
                          "typeOptions": {
                            "variant": "checkbox"
                          },
                          "displayOptions": {
                            "show": {
                              "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].name": [
                                true
                              ]
                            }
                          }
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.1.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "da4352e5-9fb0-43c4-8bbb-8a5eff489039",
                        "properties": {
                          "name": null,
                          "type": "container",
                          "items": [
                            {
                              "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                              "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                              "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.28.value",
                              "nodeType": {
                                "id": "settings"
                              },
                              "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                              "properties": {
                                "name": "Фильтр входящих",
                                "type": "filter",
                                "default": "",
                                "disabled": false,
                                "description": "The JSON value to write in the property",
                                "displayName": "Фильтр входящих",
                                "typeOptions": {
                                  "filterParams": [
                                    {
                                      "id": "virtual_phone_number",
                                      "name": "Виртуальный номер",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "flatTreeValue": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.virtual_numbers_values",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    },
                                    {
                                      "id": "scenario_id",
                                      "name": "Название сценария",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.scenarios",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    },
                                    {
                                      "id": "site_id",
                                      "name": "Сайт",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.sites",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    },
                                    {
                                      "id": "source_id",
                                      "name": "Источник",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.sources",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    },
                                    {
                                      "id": "campaign_id",
                                      "name": "Рекламная компания",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.all_campaigns",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    }
                                  ],
                                  "filterOperators": [
                                    {
                                      "id": "include",
                                      "name": "Включить",
                                      "isDefault": true
                                    },
                                    {
                                      "id": "exclude",
                                      "name": "Исключить"
                                    }
                                  ],
                                  "loadFilterParamsDependsOn": []
                                },
                                "displayOptions": {}
                              },
                              "nodesSource": "graph.nodes",
                              "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.28.value",
                              "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                              "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                              "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                              "nodeTypesResource": "node_types/detailed",
                              "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                              "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                            },
                            {
                              "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                              "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                              "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.29.value",
                              "nodeType": {
                                "id": "settings"
                              },
                              "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                              "properties": {
                                "name": " Фильтр исходящих",
                                "type": "filter",
                                "default": "",
                                "disabled": false,
                                "description": "The JSON value to write in the property",
                                "displayName": " Фильтр исходящих",
                                "typeOptions": {
                                  "filterParams": [
                                    {
                                      "id": "virtual_phone_number",
                                      "name": "Виртуальный номер",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.virtual_numbers_values",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    },
                                    {
                                      "id": "scenario_id",
                                      "name": "Название сценария",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.scenarios",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    },
                                    {
                                      "id": "site_id",
                                      "name": "Сайт",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.sites",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    },
                                    {
                                      "id": "source_id",
                                      "name": "Источник",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.sources",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    },
                                    {
                                      "id": "campaign_id",
                                      "name": "Рекламная компания",
                                      "type": "string",
                                      "options": [],
                                      "operators": [],
                                      "optionsTree": false,
                                      "multipleValues": true,
                                      "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                      "loadOptionsMethod": "get.campaigns",
                                      "availableOperators": [],
                                      "loadOptionsDependsOn": []
                                    }
                                  ],
                                  "filterOperators": [
                                    {
                                      "id": "include",
                                      "name": "Включить",
                                      "isDefault": true
                                    },
                                    {
                                      "id": "exclude",
                                      "name": "Исключить"
                                    }
                                  ],
                                  "loadFilterParamsDependsOn": []
                                },
                                "displayOptions": {}
                              },
                              "nodesSource": "graph.nodes",
                              "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.29.value",
                              "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                              "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                              "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                              "nodeTypesResource": "node_types/detailed",
                              "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                              "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                            }
                          ],
                          "displayName": null,
                          "typeOptions": {
                            "containerType": "row"
                          },
                          "displayOptions": {
                            "show": {
                              "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].value": [
                                true
                              ]
                            }
                          }
                        }
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.4.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "Список виртуальных номеров",
                          "type": "multiOptions",
                          "default": "",
                          "options": [],
                          "description": null,
                          "displayName": "Список виртуальных номеров",
                          "typeOptions": {
                            "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                            "loadOptionsMethod": "get.virtual_numbers_values",
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {
                            "show": {
                              "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[1].name": [
                                true
                              ]
                            }
                          }
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.4.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "displayName": "Обработка звонков",
                    "typeOptions": {
                      "containerType": "block"
                    },
                    "displayOptions": {}
                  }
                },
                {
                  "id": "5b9593b5-e7e8-4360-9593-5e338b39a088",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "8acc2c3e-e126-484c-a224-37875559a292",
                        "nodeId": "8acc2c3e-e126-484c-a224-37875559a292",
                        "source": "graph.nodes.8acc2c3e-e126-484c-a224-37875559a292.data.properties.webhook_url",
                        "nodeType": {
                          "id": "webhook-trigger"
                        },
                        "nodeSource": "graph.nodes.8acc2c3e-e126-484c-a224-37875559a292.data",
                        "properties": {
                          "default": "localhost",
                          "description": "webhook url",
                          "displayName": "Webhook url",
                          "name": "webhook_url",
                          "typeOptions": {
                            "loadOptionsMethod": "getUrl"
                          },
                          "type": "notice",
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.8acc2c3e-e126-484c-a224-37875559a292.data.properties.webhook_url",
                        "nodeNameSource": "graph.nodes.8acc2c3e-e126-484c-a224-37875559a292.name",
                        "credentialsSource": "graph.nodes.8acc2c3e-e126-484c-a224-37875559a292.data.credentials",
                        "expressionsSource": "graph.nodes.8acc2c3e-e126-484c-a224-37875559a292.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.8acc2c3e-e126-484c-a224-37875559a292.data.properties",
                        "formRootContextSource": "graph.nodes.8acc2c3e-e126-484c-a224-37875559a292.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.24.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "call_by_click",
                          "type": "options",
                          "default": "",
                          "options": [],
                          "required": true,
                          "description": "Номер телефона",
                          "displayName": "Исходящий номер",
                          "typeOptions": {
                            "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                            "loadOptionsMethod": "get.virtual_numbers_values",
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.24.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.27.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "redefine_number",
                          "type": "boolean",
                          "default": "",
                          "description": "Переопредeлять АОН для исходящих звонков",
                          "displayName": "Всегда отображать номер",
                          "typeOptions": {
                            "variant": "checkbox"
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.27.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "description": "webhook url",
                    "displayName": "Звонки по клику из CRM",
                    "typeOptions": {
                      "containerType": "block"
                    },
                    "displayOptions": {}
                  }
                },
                {
                  "id": "1e829afd-7ed5-4009-a4ee-6cd0a1f5708b",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.30.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Создавать контрагента",
                              "value": "сounterparty"
                            },
                            {
                              "name": "Создавать контрагента и заказ",
                              "value": "сounterparty and order"
                            },
                            {
                              "name": "Ничего не создавать",
                              "value": "none"
                            }
                          ],
                          "disabled": false,
                          "description": null,
                          "displayName": "Первичные обращения",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.30.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.31.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Сотрудника, завершившего звонок",
                              "value": "from_call"
                            },
                            {
                              "name": "Сотрудник из настроек интеграции",
                              "value": "from_integration"
                            },
                            {
                              "name": "Сотрудника, принявшего звонок",
                              "value": "start_call"
                            }
                          ],
                          "disabled": false,
                          "description": null,
                          "displayName": "Создавать на сотрудника",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.31.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.32.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [],
                          "disabled": false,
                          "description": null,
                          "displayName": "Юридическое лицо",
                          "placeholder": "Юридическое лицо*",
                          "typeOptions": {
                            "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                            "loadOptionsMethod": "get_organizations_by_name",
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {
                            "show": {
                              "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[30].value": [
                                "сounterparty and order"
                              ]
                            }
                          }
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.32.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.33.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Создавать заказ всегда",
                              "value": "always"
                            },
                            {
                              "name": "Ничего не создавать",
                              "value": "never"
                            }
                          ],
                          "disabled": false,
                          "description": null,
                          "displayName": "Повторные обращения",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.33.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.34.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Ответственного из карточки клиента (контрагента)",
                              "value": "from_card"
                            },
                            {
                              "name": "Сотрудника, завершившего звонок",
                              "value": "from_call"
                            },
                            {
                              "name": "Сотрудник из настроек интеграции",
                              "value": "from_integration"
                            }
                          ],
                          "disabled": false,
                          "description": null,
                          "displayName": "Создавать заказ при повторных обращениях на",
                          "placeholder": "Создавать заказ при повторных обращениях на",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.34.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.35.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [],
                          "disabled": false,
                          "description": null,
                          "displayName": "Юридическое лицо",
                          "placeholder": "Юридическое лицо*",
                          "typeOptions": {
                            "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                            "loadOptionsMethod": "get_organizations_by_name",
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {
                            "show": {
                              "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[33].value": [
                                "always"
                              ]
                            }
                          }
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.35.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.20.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "Включить переадресацию на персонального менеджера",
                          "type": "boolean",
                          "default": "",
                          "description": null,
                          "displayName": "Включить переадресацию на персонального менеджера",
                          "typeOptions": {
                            "variant": "checkbox"
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.20.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "displayName": "Входящие звонки",
                    "typeOptions": {
                      "containerType": "block"
                    },
                    "displayOptions": {}
                  }
                },
                {
                  "id": "2b436bdb-a772-4f6e-8fa4-35cdd08c53f9",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.36.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Создавать контрагента ",
                              "value": "сounterparty"
                            },
                            {
                              "name": "Создавать контрагента и заказ ",
                              "value": "сounterparty and order"
                            },
                            {
                              "name": "Ничего не создавать",
                              "value": "none"
                            }
                          ],
                          "disabled": false,
                          "description": null,
                          "displayName": "Первичные обращения",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.36.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.37.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Сотрудника, совершившего звонок",
                              "value": "from_call"
                            },
                            {
                              "name": "Сотрудника из настроек интеграции",
                              "value": "from_integration"
                            }
                          ],
                          "disabled": false,
                          "description": null,
                          "displayName": "Создавать на сотрудника",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.37.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.38.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [],
                          "disabled": false,
                          "description": null,
                          "displayName": "Юридическое лицо",
                          "typeOptions": {
                            "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                            "loadOptionsMethod": "get_organizations_by_name",
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {
                            "show": {
                              "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[36].value": [
                                "сounterparty and order"
                              ]
                            }
                          }
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.38.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.47.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "default": "",
                          "description": null,
                          "displayName": "Повторные обращения",
                          "name": "Повторные обращения",
                          "type": "options",
                          "disabled": false,
                          "displayOptions": {},
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "options": [
                            {
                              "name": "Создавать заказ всегда",
                              "value": "always"
                            },
                            {
                              "name": "Ничего не создавать",
                              "value": "none"
                            }
                          ]
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.47.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.48.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "default": "",
                          "description": null,
                          "displayName": null,
                          "name": "Создавать на сотрудника",
                          "type": "options",
                          "disabled": false,
                          "displayOptions": {},
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "options": [
                            {
                              "name": "Ответственного из карточки клиента (контрагента)",
                              "value": "from_card"
                            },
                            {
                              "name": "Сотрудника, совершившего звонок",
                              "value": "from_call"
                            },
                            {
                              "name": "Сотрудника из настроек интеграции",
                              "value": "from_integration"
                            }
                          ]
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.48.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.49.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "default": "",
                          "description": null,
                          "displayName": "Юридическое лицо",
                          "name": "Юридическое лицо",
                          "type": "options",
                          "disabled": false,
                          "displayOptions": {
                            "show": {
                              "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[47].value": [
                                "always"
                              ]
                            }
                          },
                          "typeOptions": {
                            "loadOptionsMethod": "get_organizations_by_name",
                            "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                            "loadOptionsDependsOn": []
                          },
                          "options": []
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.49.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "displayName": "Исходящие звонки",
                    "typeOptions": {
                      "containerType": "block"
                    },
                    "displayOptions": {}
                  }
                },
                {
                  "id": "15e9f949-72b5-4da2-a0fb-0827b56702fb",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.39.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Не создавать задачу",
                              "value": "none"
                            },
                            {
                              "name": "Из карточки контрагента",
                              "value": "from_card"
                            },
                            {
                              "name": "Из настроек интеграции",
                              "value": "from_settings"
                            }
                          ],
                          "disabled": false,
                          "description": null,
                          "displayName": "При потерянном входящем звонке создавать задачу на",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.39.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.50.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "default": "",
                          "description": null,
                          "displayName": "Срок действия задачи",
                          "name": "Срок действия задачи",
                          "type": "number",
                          "disabled": false,
                          "displayOptions": {},
                          "typeOptions": {
                            "variant": "number",
                            "minValue": 0,
                            "maxValue": 168
                          }
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.50.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.40.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "value",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Не назначать задачу",
                              "value": "none"
                            },
                            {
                              "name": "Из карточки контрагента",
                              "value": "from_card"
                            },
                            {
                              "name": "Из настроек интеграции",
                              "value": "from_settings"
                            }
                          ],
                          "disabled": false,
                          "description": null,
                          "displayName": "При неуспешном исходящем звонке создавать задачу на",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.40.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.51.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "default": "",
                          "description": null,
                          "displayName": "Срок действия задачи",
                          "name": "value",
                          "type": "number",
                          "disabled": false,
                          "displayOptions": {},
                          "typeOptions": {
                            "variant": "number",
                            "minValue": 0,
                            "maxValue": 168
                          }
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.51.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "displayName": "Задачи",
                    "typeOptions": {
                      "containerType": "block"
                    },
                    "displayOptions": {}
                  }
                }
              ],
              "displayName": "Основное",
              "typeOptions": {
                "containerType": "tab"
              },
              "displayOptions": {}
            }
          },
          {
            "id": "74b08ffa-71f4-41fd-a5ea-8bca9e52fa51",
            "properties": {
              "name": null,
              "type": "container",
              "items": [
                {
                  "id": "dfe0218b-6c7e-409c-a5f8-140b1410f07d",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.14.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "template",
                          "type": "template",
                          "default": " Новая задача по звонку с + {{contact_phone_number}} из UIS",
                          "required": false,
                          "description": null,
                          "displayName": "Задача по входящему звонку",
                          "typeOptions": {
                            "templates": [
                              {
                                "name": "Название сценария ВАТС",
                                "value": "scenario_name",
                                "example": "Переадресация на сотруника"
                              },
                              {
                                "name": "Пройденные операции сценария",
                                "value": "scenario_operation_ids",
                                "example": "[1,  2]"
                              },
                              {
                                "name": "Сотрудники пропустившие вызов",
                                "value": "actual_noanswered_employee_full_names",
                                "example": "Иван Иванов, Андрей Андреев"
                              },
                              {
                                "name": "Виртуальный номер",
                                "value": "virtual_phone_number",
                                "example": "74953001030"
                              },
                              {
                                "name": "Доменное имя сайта",
                                "value": "site_domain_name",
                                "example": "example.com"
                              },
                              {
                                "name": "URL страницы обращения",
                                "value": "communication_page_url",
                                "example": "http://example.com/services/sitephone/index_new.php"
                              },
                              {
                                "name": "Источник",
                                "value": "source",
                                "example": "Google Ads"
                              },
                              {
                                "name": "Канал",
                                "value": "source_channel",
                                "example": "Контекстная реклама"
                              },
                              {
                                "name": "Рекламная кампания",
                                "value": "campaign_name",
                                "example": "Горячая база клиентов"
                              },
                              {
                                "name": "Описание причины завершения звонка",
                                "value": "lost_reason",
                                "example": "Не дозвонились до абонента"
                              },
                              {
                                "name": "Номер телефона контакта",
                                "value": "contact_phone_number",
                                "example": "79001001010"
                              }
                            ],
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.14.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.18.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "template",
                          "type": "template",
                          "default": "Новая задача по звонку с + {{contact_phone_number}} из UIS",
                          "description": null,
                          "displayName": "Задача по исходящему звонку",
                          "typeOptions": {
                            "templates": [
                              {
                                "name": "Название сценария ВАТС",
                                "value": "Название сценария ВАТС",
                                "example": "Переадресация на сотруника"
                              },
                              {
                                "name": "Пройденные операции сценария",
                                "value": "scenario_operation_ids",
                                "example": "[1, 2]"
                              },
                              {
                                "name": "Сотрудники пропустившие вызов",
                                "value": "actual_noanswered_employee_full_names",
                                "example": "Иван Иванов, Андрей Андреев"
                              },
                              {
                                "name": "Виртуальный номер",
                                "value": "virtual_phone_number",
                                "example": "74953001030"
                              },
                              {
                                "name": "Доменное имя сайта",
                                "value": "site_domain_name",
                                "example": "example.com"
                              },
                              {
                                "name": "URL страницы обращения",
                                "value": "communication_page_url",
                                "example": "http://example.com/services/sitephone/index_new.php"
                              },
                              {
                                "name": "Источник",
                                "value": "source",
                                "example": "Google Ads"
                              },
                              {
                                "name": "Канал",
                                "value": "source_channel",
                                "example": "Контекстная реклама"
                              },
                              {
                                "name": "Рекламная кампания",
                                "value": "campaign_name",
                                "example": "Посетители без рекламной кампании"
                              },
                              {
                                "name": "Описание причины завершения звонка",
                                "value": "lost_reason",
                                "example": "Не дозвонились до абонента"
                              },
                              {
                                "name": "Номер телефона контакта",
                                "value": "contact_phone_number",
                                "example": "79001001010"
                              }
                            ],
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.18.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "displayName": "Шаблоны названий задач",
                    "typeOptions": {
                      "containerType": "block"
                    },
                    "displayOptions": {}
                  }
                }
              ],
              "displayName": "Шаблоны",
              "typeOptions": {
                "containerType": "tab"
              }
            }
          },
          {
            "id": "42887861-8218-4334-b8db-507b1e013cd9",
            "properties": {
              "name": "Ответственные",
              "displayName": "Ответственные",
              "type": "container",
              "items": [
                {
                  "id": "0d4d3a58-8601-4073-a153-249ad822b8c8",
                  "properties": {
                    "name": "Исходящие звонки",
                    "displayName": "Исходящие звонки",
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.3.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "Ответственный по умолчанию",
                          "type": "options",
                          "default": "",
                          "options": [],
                          "description": null,
                          "displayName": "Ответственный по умолчанию",
                          "typeOptions": {
                            "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                            "loadOptionsMethod": "get_employees_with_email",
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.3.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.41.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "default": "",
                          "description": null,
                          "displayName": "Ответственный сотрудник",
                          "name": "Ответственный сотрудник",
                          "type": "collection",
                          "disabled": false,
                          "displayOptions": {},
                          "typeOptions": {
                            "multipleValues": true,
                            "containerType": "row",
                            "expandOldItems": true
                          },
                          "options": [
                            {
                              "name": ".",
                              "values": [
                                {
                                  "type": "options",
                                  "name": "responsible_employee",
                                  "displayName": "Ответственный сотрудник",
                                  "typeOptions": {
                                    "containerType": "row",
                                    "loadOptionsDependsOn": [],
                                    "loadOptionsMethod": "get_employees_id_by_fio",
                                    "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c"
                                  },
                                  "displayOptions": {},
                                  "disabled": false,
                                  "values": [],
                                  "options": [],
                                  "width": "340px"
                                },
                                {
                                  "type": "filter",
                                  "typeOptions": {
                                    "transform": "default",
                                    "filterParams": [
                                      {
                                        "type": "string",
                                        "id": "scenario_name",
                                        "name": "Сценарий ВАТС",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.scenarios",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      },
                                      {
                                        "type": "string",
                                        "id": "site_domain_name",
                                        "name": "Сайт",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.sites",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      },
                                      {
                                        "type": "string",
                                        "id": "campaign_name",
                                        "name": "Рекламная кампания",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.all_campaigns",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      },
                                      {
                                        "type": "string",
                                        "id": "source",
                                        "name": "Источник",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.sources",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      },
                                      {
                                        "type": "string",
                                        "id": "virtual_phone_number",
                                        "name": "Виртуальный номер",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.virtual_numbers",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      }
                                    ],
                                    "loadFilterParamsDependsOn": [],
                                    "filterOperators": [
                                      {
                                        "id": "include",
                                        "name": "Включить"
                                      },
                                      {
                                        "id": "exclude",
                                        "name": "Исключить"
                                      }
                                    ]
                                  },
                                  "displayOptions": {},
                                  "disabled": false,
                                  "displayName": null,
                                  "name": "filter_employee"
                                }
                              ]
                            }
                          ]
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.41.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "typeOptions": {
                      "containerType": "block"
                    },
                    "displayOptions": {}
                  }
                },
                {
                  "id": "d04ab700-fb1d-4e96-bc16-98255fb4226b",
                  "properties": {
                    "name": null,
                    "displayName": "Входящие звонки",
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.42.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "default": "",
                          "description": null,
                          "displayName": "Ответственный по умолчанию",
                          "name": "value",
                          "type": "options",
                          "disabled": false,
                          "displayOptions": {},
                          "typeOptions": {
                            "loadOptionsMethod": "get_employees_id_by_fio",
                            "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                            "loadOptionsDependsOn": []
                          },
                          "options": []
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.42.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.43.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "default": "",
                          "description": "The JSON value to write in the property",
                          "displayName": "Ответственный сотрудник",
                          "name": "value",
                          "type": "collection",
                          "disabled": false,
                          "displayOptions": {},
                          "typeOptions": {
                            "multipleValues": true,
                            "containerType": "row",
                            "expandOldItems": true
                          },
                          "options": [
                            {
                              "name": ".",
                              "values": [
                                {
                                  "type": "options",
                                  "typeOptions": {
                                    "transform": "default",
                                    "loadOptionsMethod": "get_employees_id_by_fio",
                                    "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                                    "loadOptionsDependsOn": []
                                  },
                                  "width": "340px",
                                  "displayOptions": {},
                                  "options": [],
                                  "disabled": false,
                                  "name": "responsible_employee",
                                  "displayName": "Ответственный сотрудник"
                                },
                                {
                                  "type": "filter",
                                  "typeOptions": {
                                    "transform": "default",
                                    "filterParams": [
                                      {
                                        "type": "string",
                                        "id": "scenario_name",
                                        "name": "Сценарий ВАТС",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.scenarios",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      },
                                      {
                                        "type": "string",
                                        "id": "site_domain_name",
                                        "name": "Сайт",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.sites",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      },
                                      {
                                        "type": "string",
                                        "id": "campaign_name",
                                        "name": "Рекламная кампания",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.all_campaigns",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      },
                                      {
                                        "type": "string",
                                        "id": "source",
                                        "name": "Источник",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.sources",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      },
                                      {
                                        "type": "string",
                                        "id": "virtual_phone_number",
                                        "name": "Виртуальный номер",
                                        "multipleValues": true,
                                        "optionsTree": false,
                                        "loadOptionsMethod": "get.virtual_numbers",
                                        "loadOptionsNode": "9592ae59-4e91-44d7-926a-9ac0dfa75349",
                                        "options": [],
                                        "loadOptionsDependsOn": [],
                                        "availableOperators": [],
                                        "operators": []
                                      }
                                    ],
                                    "loadFilterParamsDependsOn": [],
                                    "filterOperators": [
                                      {
                                        "id": "include",
                                        "name": "Включить"
                                      },
                                      {
                                        "id": "exclude",
                                        "name": "Исключить"
                                      }
                                    ]
                                  },
                                  "displayOptions": {},
                                  "disabled": false,
                                  "name": "filter_employee"
                                }
                              ]
                            }
                          ]
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.43.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "typeOptions": {
                      "containerType": "block"
                    },
                    "displayOptions": {}
                  }
                }
              ],
              "typeOptions": {
                "containerType": "tab"
              },
              "displayOptions": {}
            }
          },
          {
            "id": "09d8f552-9f76-4bd3-87f6-ac63d4b767bd",
            "properties": {
              "name": null,
              "displayName": "Доп. поля",
              "type": "container",
              "items": [
                {
                  "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                  "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                  "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.44.value",
                  "nodeType": {
                    "id": "settings"
                  },
                  "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                  "properties": {
                    "default": "<Alert type=info>Передавайте параметры обращения в карточку клиента или заказа. Такими параметрами могут быть: источник звонка, название рекламной кампании и многое другое. Для этого укажите название полей из МойСклад и какие параметры коммуникации вы хотели бы передавать.</Alert>",
                    "description": "The JSON value to write in the property",
                    "displayName": "Value",
                    "name": "value",
                    "type": "notice",
                    "disabled": false,
                    "displayOptions": {},
                    "typeOptions": {}
                  },
                  "nodesSource": "graph.nodes",
                  "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.44.value",
                  "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                  "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                  "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                  "nodeTypesResource": "node_types/detailed",
                  "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                  "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                },
                {
                  "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                  "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                  "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.45.value",
                  "nodeType": {
                    "id": "settings"
                  },
                  "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                  "properties": {
                    "default": "",
                    "description": null,
                    "displayName": "Для контрагентов",
                    "name": "Для контрагентов",
                    "type": "collection",
                    "disabled": false,
                    "displayOptions": {},
                    "typeOptions": {
                      "multipleValues": true,
                      "containerType": "row",
                      "expandOldItems": true
                    },
                    "options": [
                      {
                        "name": ".",
                        "values": [
                          {
                            "type": "options",
                            "displayName": "Поле в МойСклад*",
                            "typeOptions": {
                              "transform": "default",
                              "loadOptionsDependsOn": [],
                              "loadOptionsMethod": "get_counterparty_metadata_attributes",
                              "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c"
                            },
                            "displayOptions": {},
                            "options": [],
                            "disabled": false,
                            "name": "extra_field_name"
                          },
                          {
                            "type": "options",
                            "name": "comagic_parameter",
                            "displayName": "Передаваемые параметры*",
                            "typeOptions": {
                              "transform": "default",
                              "loadOptionsDependsOn": [],
                              "loadContextKey": null
                            },
                            "displayOptions": {},
                            "options": [
                              {
                                "name": "Сайт",
                                "value": "site_domain_name"
                              },
                              {
                                "name": "UTM_source",
                                "value": "utm_source"
                              },
                              {
                                "name": "Расширенная метка UTM_source",
                                "value": "eq_utm_source"
                              },
                              {
                                "name": "UTM_medium",
                                "value": "utm_medium"
                              },
                              {
                                "name": "Расширенная метка UTM_medium",
                                "value": "eq_utm_medium"
                              },
                              {
                                "name": "UTM_campaign",
                                "value": "utm_campaign"
                              },
                              {
                                "name": "Расширенная метка UTM_campaign",
                                "value": "eq_utm_campaign"
                              },
                              {
                                "name": "Источник",
                                "value": "source_new"
                              },
                              {
                                "name": "Канал",
                                "value": "channel_new"
                              },
                              {
                                "name": "Рекламная кампания",
                                "value": "campaign_name"
                              },
                              {
                                "name": "URL страницы обращения",
                                "value": "communication_page_url"
                              },
                              {
                                "name": "Название формы заявки",
                                "value": "form_name"
                              },
                              {
                                "name": "ClientID Яндекс Метрики",
                                "value": "ym_client_id"
                              },
                              {
                                "name": "ClientID Universal Analytics",
                                "value": "ua_client_id"
                              }
                            ],
                            "disabled": false
                          },
                          {
                            "type": "boolean",
                            "name": "update_always",
                            "displayName": "Обновлять всегда",
                            "default": false,
                            "typeOptions": {
                              "transform": "default",
                              "variant": "checkbox"
                            },
                            "displayOptions": {},
                            "disabled": false
                          }
                        ]
                      }
                    ]
                  },
                  "nodesSource": "graph.nodes",
                  "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.45.value",
                  "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                  "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                  "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                  "nodeTypesResource": "node_types/detailed",
                  "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                  "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                },
                {
                  "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                  "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                  "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.46.value",
                  "nodeType": {
                    "id": "settings"
                  },
                  "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                  "properties": {
                    "default": "",
                    "description": "The JSON value to write in the property",
                    "displayName": "Для заказов",
                    "name": "Для заказов",
                    "type": "collection",
                    "disabled": false,
                    "displayOptions": {},
                    "typeOptions": {
                      "multipleValues": true,
                      "containerType": "row",
                      "expandOldItems": true
                    },
                    "options": [
                      {
                        "name": ".",
                        "values": [
                          {
                            "type": "options",
                            "name": "extra_field_name",
                            "displayName": "Поле в МойСклад*",
                            "typeOptions": {
                              "transform": "default",
                              "loadOptionsDependsOn": [],
                              "loadOptionsMethod": "get_customerorder_metadata_attributes",
                              "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c"
                            },
                            "displayOptions": {},
                            "options": [],
                            "disabled": false
                          },
                          {
                            "type": "options",
                            "name": "comegic_parameter",
                            "displayName": "Передаваемые параметры*",
                            "typeOptions": {
                              "transform": "default",
                              "loadOptionsDependsOn": [],
                              "loadContextKey": null
                            },
                            "displayOptions": {},
                            "options": [
                              {
                                "name": "Сайт",
                                "value": "site_domain_name"
                              },
                              {
                                "name": "UTM_source",
                                "value": "utm_source"
                              },
                              {
                                "name": "Расширенная метка UTM_source",
                                "value": "eq_utm_source"
                              },
                              {
                                "name": "UTM_medium",
                                "value": "utm_medium"
                              },
                              {
                                "name": "Расширенная метка UTM_medium",
                                "value": "eq_utm_medium"
                              },
                              {
                                "name": "UTM_campaign",
                                "value": "utm_campaign"
                              },
                              {
                                "name": "Расширенная метка UTM_campaign",
                                "value": "eq_utm_campaign"
                              },
                              {
                                "name": "Источник",
                                "value": "source_new"
                              },
                              {
                                "name": "Канал",
                                "value": "channel_new"
                              },
                              {
                                "name": "Рекламная кампания",
                                "value": "campaign_name"
                              },
                              {
                                "name": "URL страницы обращения",
                                "value": "communication_page_url"
                              },
                              {
                                "name": "Название формы заявки",
                                "value": "form_name"
                              },
                              {
                                "name": "ClientID Яндекс Метрики",
                                "value": "ym_client_id"
                              },
                              {
                                "name": "ClientID Universal Analytics",
                                "value": "ua_client_id"
                              }
                            ],
                            "disabled": false
                          },
                          {
                            "type": "boolean",
                            "name": "update_always",
                            "displayName": "Обновлять всегда",
                            "default": false,
                            "typeOptions": {
                              "transform": "default",
                              "variant": "checkbox"
                            },
                            "displayOptions": {},
                            "disabled": false
                          }
                        ]
                      }
                    ]
                  },
                  "nodesSource": "graph.nodes",
                  "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.46.value",
                  "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                  "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                  "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                  "nodeTypesResource": "node_types/detailed",
                  "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                  "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                }
              ],
              "typeOptions": {
                "containerType": "tab"
              },
              "displayOptions": {}
            }
          }
        ],
        "displayName": null,
        "typeOptions": {
          "containerType": "tabs"
        },
        "displayOptions": {}
      }
    },
    {
      "id": "37555f3e-cabf-40bc-a7ac-968a538b083d",
      "properties": {
        "name": "Обработка звонков",
        "type": "container",
        "items": [
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.5.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "Создавать контрагента",
              "type": "boolean",
              "default": "",
              "description": null,
              "displayName": "Создавать контрагента",
              "typeOptions": {
                "variant": "switch"
              },
              "displayOptions": {}
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.5.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "value",
              "type": "notice",
              "default": "---",
              "description": "The JSON value to write in the property",
              "displayName": "Value",
              "typeOptions": {},
              "displayOptions": {}
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.6.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "Назначать ответственного на",
              "type": "options",
              "default": "",
              "options": [
                {
                  "name": "Первый разговаривающий",
                  "value": "first_speak"
                },
                {
                  "name": "Последний разговаривающий ",
                  "value": "last_speak"
                },
                {
                  "name": "Ответственный по умолчанию",
                  "value": "default_responsible"
                }
              ],
              "required": true,
              "description": null,
              "displayName": "Назначать ответственного на",
              "typeOptions": {
                "loadOptionsDependsOn": []
              },
              "displayOptions": {
                "show": {
                  "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[5].value": [
                    true
                  ]
                }
              }
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.6.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.7.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "Создать заказ",
              "type": "boolean",
              "default": "",
              "description": null,
              "displayName": "Создать заказ",
              "typeOptions": {
                "variant": "switch"
              },
              "displayOptions": {
                "show": null
              }
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.7.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.8.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "Создание заказа по направлению звонка",
              "type": "collection",
              "default": "",
              "options": [
                {
                  "name": ".",
                  "value": "in",
                  "values": [
                    {
                      "name": "direction",
                      "type": "options",
                      "options": [
                        {
                          "name": "Входящий",
                          "value": "in"
                        },
                        {
                          "name": "Исходящий",
                          "value": "out"
                        }
                      ],
                      "required": true,
                      "displayName": "Тип звонка",
                      "typeOptions": {
                        "transform": "default",
                        "loadOptionsDependsOn": []
                      },
                      "displayOptions": {},
                      "disabled": false
                    },
                    {
                      "name": "responsible",
                      "type": "options",
                      "options": [
                        {
                          "name": "Из карточки клиента(контрагента)",
                          "value": "from_contact_card"
                        },
                        {
                          "name": "Последний разговаривающий",
                          "value": "last_speak"
                        },
                        {
                          "name": "Ответственный по умолчанию",
                          "value": "default_responsible"
                        }
                      ],
                      "required": true,
                      "displayName": "Назначить ответственного",
                      "typeOptions": {
                        "transform": "default",
                        "loadOptionsDependsOn": []
                      },
                      "displayOptions": {},
                      "disabled": false
                    },
                    {
                      "name": "organization",
                      "type": "options",
                      "options": [],
                      "required": true,
                      "displayName": "Выбор Юр лица",
                      "typeOptions": {
                        "transform": "default",
                        "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                        "loadOptionsMethod": "get_organizations_by_name",
                        "loadOptionsDependsOn": []
                      },
                      "displayOptions": {},
                      "disabled": false
                    }
                  ]
                }
              ],
              "description": null,
              "displayName": "Создание заказа по направлению звонка",
              "typeOptions": {
                "containerType": "row",
                "multipleValues": true,
                "loadOptionsDependsOn": []
              },
              "displayOptions": {
                "show": {
                  "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[7].value": [
                    true
                  ]
                }
              }
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.8.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.10.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "Назначить ответственного",
              "type": "hidden",
              "default": "",
              "options": [
                {
                  "name": "Из карточки клиента(контрагента)",
                  "value": "from_contact_card"
                },
                {
                  "name": "Последний разговаривающий ",
                  "value": "last_speak"
                },
                {
                  "name": "Ответственный по умолчанию",
                  "value": "default_responsible"
                }
              ],
              "description": null,
              "displayName": "Назначить ответственного",
              "typeOptions": {
                "loadOptionsDependsOn": []
              },
              "displayOptions": {
                "show": {
                  "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[7].value": [
                    true
                  ]
                }
              }
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.10.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.11.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "Выбор Юр лица",
              "type": "hidden",
              "default": "",
              "options": [],
              "description": null,
              "displayName": "Выбор Юр лица",
              "typeOptions": {
                "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                "loadOptionsMethod": "get_organizations_by_name",
                "loadOptionsDependsOn": []
              },
              "displayOptions": {
                "show": {
                  "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[7].value": [
                    true
                  ]
                }
              }
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.11.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "value",
              "type": "notice",
              "default": "---",
              "description": "The JSON value to write in the property",
              "displayName": "Value",
              "typeOptions": {},
              "displayOptions": {}
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "bb9a4a5a-3482-4669-995f-b0c7cd2bea96",
            "properties": {
              "name": "Создавать задачу по пропущенному звонка",
              "type": "container",
              "items": [
                {
                  "id": "667e8b05-4b78-44c8-9f1e-6ab6c8876dcb",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.12.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "При входящих звонках",
                          "type": "boolean",
                          "default": "",
                          "description": null,
                          "displayName": "При входящих звонках",
                          "typeOptions": {
                            "variant": "checkbox"
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.12.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.13.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "Ответственный сотрудник",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Из карточки клиента",
                              "value": "from_contact_card"
                            },
                            {
                              "name": "Ответственный по умолчанию",
                              "value": "default_responsible"
                            }
                          ],
                          "description": null,
                          "displayName": "Ответственный сотрудник",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.13.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "displayName": null,
                    "typeOptions": {
                      "containerType": "row"
                    },
                    "displayOptions": {}
                  }
                },
                {
                  "id": "f05f8c8f-372e-45b8-85e0-7fc0a19b861d",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.15.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "Срок действия задачи(часы)",
                          "type": "number",
                          "default": "",
                          "required": true,
                          "description": null,
                          "displayName": "Срок действия задачи(часы)",
                          "placeholder": "Срок действия задачи(часы)",
                          "typeOptions": {
                            "variant": "number"
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.15.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "description": null,
                    "displayName": null,
                    "typeOptions": {
                      "containerType": "row"
                    },
                    "displayOptions": {
                      "show": {
                        "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[12].value": [
                          true
                        ]
                      }
                    }
                  }
                },
                {
                  "id": "2e6a1a8f-01dd-4e8b-97ce-aa813631ceb9",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.16.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "При исходящих звонках",
                          "type": "boolean",
                          "default": "",
                          "description": null,
                          "displayName": "При исходящих звонках",
                          "typeOptions": {
                            "variant": "checkbox"
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.16.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      },
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.17.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "Ответственный сотрудник",
                          "type": "options",
                          "default": "",
                          "options": [
                            {
                              "name": "Из карточки клиента",
                              "value": "from_contact_card"
                            },
                            {
                              "name": "Ответственный по умолчанию",
                              "value": "default_responsible"
                            }
                          ],
                          "description": null,
                          "displayName": "Ответственный сотрудник",
                          "typeOptions": {
                            "loadOptionsDependsOn": []
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.17.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "displayName": null,
                    "typeOptions": {
                      "containerType": "row"
                    },
                    "displayOptions": {}
                  }
                },
                {
                  "id": "d2cd6b74-d3e2-4efa-a478-03e2707861bb",
                  "properties": {
                    "name": null,
                    "type": "container",
                    "items": [
                      {
                        "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
                        "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.19.value",
                        "nodeType": {
                          "id": "settings"
                        },
                        "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
                        "properties": {
                          "name": "Срок действия задачи(часы)",
                          "type": "number",
                          "default": "",
                          "required": true,
                          "description": null,
                          "displayName": "Срок действия задачи(часы)",
                          "placeholder": "Срок действия задачи(часы)",
                          "typeOptions": {
                            "variant": "number"
                          },
                          "displayOptions": {}
                        },
                        "nodesSource": "graph.nodes",
                        "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.19.value",
                        "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
                        "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
                        "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
                        "nodeTypesResource": "node_types/detailed",
                        "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
                        "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
                      }
                    ],
                    "displayName": null,
                    "typeOptions": {
                      "containerType": "row"
                    },
                    "displayOptions": {
                      "show": {
                        "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[16].value": [
                          true
                        ]
                      }
                    }
                  }
                }
              ],
              "displayName": "Создавать задачу по пропущенному звонка",
              "typeOptions": {
                "containerType": "block"
              },
              "displayOptions": {}
            }
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "value",
              "type": "notice",
              "default": "---",
              "description": "The JSON value to write in the property",
              "displayName": "Value",
              "typeOptions": {},
              "displayOptions": {}
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "value",
              "type": "notice",
              "default": "---",
              "description": "The JSON value to write in the property",
              "displayName": "Value",
              "typeOptions": {},
              "displayOptions": {}
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.22.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "Передавать дополнительные поля",
              "type": "boolean",
              "default": "",
              "description": null,
              "displayName": "Передавать дополнительные поля",
              "typeOptions": {
                "variant": "switch"
              }
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.22.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.23.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "Настройки заполнения дополнительных полей",
              "type": "collection",
              "default": "",
              "options": [
                {
                  "name": ".",
                  "values": [
                    {
                      "name": "extra_field_name",
                      "type": "options",
                      "options": [],
                      "disabled": false,
                      "required": true,
                      "displayName": "Поле в МойСклад",
                      "typeOptions": {
                        "transform": "default",
                        "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
                        "loadOptionsMethod": "get_counterparty_metadata_attributes",
                        "loadOptionsDependsOn": []
                      },
                      "displayOptions": {}
                    },
                    {
                      "name": "comagic_parameter",
                      "type": "options",
                      "options": [
                        {
                          "name": "Сайт",
                          "value": "site_domain_name"
                        },
                        {
                          "name": "UTM_source",
                          "value": "utm_source"
                        },
                        {
                          "name": "Расширенная метка UTM_source",
                          "value": "eq_utm_source"
                        },
                        {
                          "name": "UTM_medium",
                          "value": "utm_medium"
                        },
                        {
                          "name": "Расширенная метка UTM_medium",
                          "value": "eq_utm_medium"
                        },
                        {
                          "name": "UTM_campaign",
                          "value": "utm_campaign"
                        },
                        {
                          "name": "Расширенная метка UTM_campaign",
                          "value": "eq_utm_campaign"
                        },
                        {
                          "name": "Источник",
                          "value": "source_new"
                        },
                        {
                          "name": "Канал",
                          "value": "channel_new"
                        },
                        {
                          "name": "Рекламная кампания",
                          "value": "campaign_name"
                        },
                        {
                          "name": "URL страницы обращения",
                          "value": "communication_page_url"
                        },
                        {
                          "name": "Название формы заявки",
                          "value": "form_name"
                        },
                        {
                          "name": "ClientID Яндекс Метрики",
                          "value": "ym_client_id"
                        },
                        {
                          "name": "ClientID Universal Analytics",
                          "value": "ua_client_id"
                        }
                      ],
                      "disabled": false,
                      "required": true,
                      "displayName": "Передаваемые параметры",
                      "typeOptions": {
                        "transform": "default",
                        "loadOptionsDependsOn": []
                      },
                      "displayOptions": {}
                    },
                    {
                      "name": "update_always",
                      "type": "boolean",
                      "default": false,
                      "disabled": false,
                      "displayName": "Обновлять всегда",
                      "typeOptions": {
                        "variant": "switch",
                        "transform": "default"
                      },
                      "displayOptions": {}
                    }
                  ],
                  "displayName": null
                }
              ],
              "required": true,
              "description": null,
              "displayName": "Настройки заполнения дополнительных полей",
              "typeOptions": {
                "containerType": "row",
                "multipleValues": true
              },
              "displayOptions": {
                "show": {
                  "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[22].value": [
                    true
                  ]
                }
              }
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.23.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          },
          {
            "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
            "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeType": {
              "id": "settings"
            },
            "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
            "properties": {
              "name": "value",
              "type": "notice",
              "default": "---",
              "description": "The JSON value to write in the property",
              "displayName": "Value"
            },
            "nodesSource": "graph.nodes",
            "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.21.value",
            "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
            "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
            "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
            "nodeTypesResource": "node_types/detailed",
            "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
            "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
          }
        ],
        "description": null,
        "displayName": "Обработка звонков",
        "typeOptions": {
          "containerType": "block"
        },
        "displayOptions": {}
      }
    },
    {
      "id": "a3e06951-314c-4f5f-8d76-6e0404bd9f5d",
      "properties": {
        "name": "Сотрудники",
        "type": "container",
        "items": [],
        "description": null,
        "displayName": "Сотрудники",
        "typeOptions": {
          "containerType": "block"
        },
        "displayOptions": {}
      }
    },
    {
      "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
      "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
      "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.26.value",
      "nodeType": {
        "id": "settings"
      },
      "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
      "properties": {
        "name": "employee_sync",
        "type": "hidden",
        "default": "",
        "description": null,
        "displayName": "Синхронизировать сотрудников",
        "typeOptions": {
          "variant": "switch"
        },
        "displayOptions": {}
      },
      "nodesSource": "graph.nodes",
      "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.26.value",
      "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
      "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
      "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
      "nodeTypesResource": "node_types/detailed",
      "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
      "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
    },
    {
      "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
      "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
      "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.2.value",
      "nodeType": {
        "id": "settings"
      },
      "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
      "properties": {
        "name": "Сотрудники для синхронизации",
        "type": "hidden",
        "default": "",
        "options": [],
        "required": true,
        "description": "Сотрудники синхронизируются по email",
        "displayName": "Сотрудники для синхронизации",
        "typeOptions": {
          "loadOptionsNode": "399f54c4-3b11-4573-86b6-40dff81c2c0c",
          "loadOptionsMethod": "get_employees_with_email",
          "loadOptionsDependsOn": []
        },
        "displayOptions": {
          "show": {
            "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[26].value": [
              true
            ]
          }
        }
      },
      "nodesSource": "graph.nodes",
      "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.2.value",
      "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
      "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
      "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
      "nodeTypesResource": "node_types/detailed",
      "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
      "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
    },
    {
      "id": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
      "nodeId": "1562cf9a-ea29-4380-aac5-74bb0dd238f7",
      "source": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.25.value",
      "nodeType": {
        "id": "settings"
      },
      "nodeSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data",
      "properties": {
        "name": "value",
        "type": "hidden",
        "default": "90eb3e91-1fdb-46e0-b7a6-bd582764ff14",
        "description": "The JSON value to write in the property",
        "displayName": "Синхронизация",
        "typeOptions": {
          "action": "execute"
        },
        "displayOptions": {
          "show": {
            "//graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field[26].value": [
              true
            ]
          }
        }
      },
      "nodesSource": "graph.nodes",
      "nodeDataSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties.values.json_field.25.value",
      "nodeNameSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.name",
      "credentialsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.credentials",
      "expressionsSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.expressions",
      "nodeTypesResource": "node_types/detailed",
      "currentContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties",
      "formRootContextSource": "graph.nodes.1562cf9a-ea29-4380-aac5-74bb0dd238f7.data.properties"
    }
  ]
}